Search.setIndex({"docnames": ["adversarial", "core/core", "core/example", "dev_intro", "export/CPP", "export/CPP_STM32", "export/DNeuro", "export/ONNX", "export/TensorRT", "export/legacy", "index", "ini/data_analysis", "ini/databases", "ini/environment", "ini/intro", "ini/layers", "ini/target", "intro/about", "intro/intro", "intro/perfs_tools", "intro/simus", "intro/tuto", "onnx/convert", "onnx/import", "onnx/transfer", "python_api/cells", "python_api/databases", "python_api/example", "python_api/example/data_augmentation", "python_api/example/graph_manipulation", "python_api/example/keras", "python_api/example/load_onnx", "python_api/example/performance_analysis", "python_api/example/torch", "python_api/export", "python_api/interoperability", "python_api/intro", "python_api/tensor", "quant/post", "quant/pruning", "quant/qat", "references"], "filenames": ["adversarial.rst", "core/core.rst", "core/example.rst", "dev_intro.rst", "export/CPP.rst", "export/CPP_STM32.rst", "export/DNeuro.rst", "export/ONNX.rst", "export/TensorRT.rst", "export/legacy.rst", "index.rst", "ini/data_analysis.rst", "ini/databases.rst", "ini/environment.rst", "ini/intro.rst", "ini/layers.rst", "ini/target.rst", "intro/about.rst", "intro/intro.rst", "intro/perfs_tools.rst", "intro/simus.rst", "intro/tuto.rst", "onnx/convert.rst", "onnx/import.rst", "onnx/transfer.rst", "python_api/cells.rst", "python_api/databases.rst", "python_api/example.rst", "python_api/example/data_augmentation.rst", "python_api/example/graph_manipulation.rst", "python_api/example/keras.rst", "python_api/example/load_onnx.rst", "python_api/example/performance_analysis.rst", "python_api/example/torch.rst", "python_api/export.rst", "python_api/interoperability.rst", "python_api/intro.rst", "python_api/tensor.rst", "quant/post.rst", "quant/pruning.rst", "quant/qat.rst", "references.rst"], "titles": ["Adversarial module", "Core N2D2", "Example", "Introduction", "Export: C++", "Export: C++/STM32", "Export: DNeuro", "Export: ONNX", "Export: TensorRT", "Export: other / legacy", "N2D2", "Stimuli data analysis", "Databases", "Stimuli provider (Environment)", "Introduction", "Network Layers", "Targets (outputs &amp; losses)", "About N2D2-IP", "Presentation", "Performance evaluation tools", "Performing simulations", "Tutorials", "Obtain ONNX models", "Import ONNX models", "Train from ONNX models", "Cells", "Databases", "Example", "Data augmentation", "Graph manipulation", "Keras interoperability", "Load from ONNX", "Performance analysis", "Torch interoperability", "Export", "Interoperability", "Introduction", "Tensor", "Post-training quantization", "Pruning", "Quantization-Aware Training", "References"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "aim": 0, "provid": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 15, 17, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 37, 39, 40], "sever": [0, 12, 13, 16, 18, 21, 26, 40], "tool": [0, 1, 8, 10, 12, 18, 20, 21, 22, 23, 24, 34, 36, 40], "simul": [0, 10, 12, 13, 16, 18, 40], "neural": [0, 1, 2, 3, 6, 12, 13, 14, 15, 16, 18, 25, 34, 36, 40, 41], "network": [0, 1, 3, 6, 7, 8, 9, 10, 12, 13, 14, 16, 24, 25, 29, 33, 34, 35, 36, 38, 39, 40, 41], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "threaten": 0, "secur": 0, "thei": [0, 8, 12, 13, 16, 19, 20, 25, 37], "consist": [0, 16, 35, 40], "deceiv": 0, "without": [0, 3, 11, 16, 18, 21, 23, 25, 37, 38, 40, 41], "": [0, 6, 12, 13, 15, 16, 20, 21, 22, 25, 36, 37, 40, 41], "knowledg": [0, 41], "make": [0, 3, 4, 5, 6, 8, 9, 16, 20, 22, 24, 30, 35, 36], "impercept": 0, "chang": [0, 1, 5, 6, 12, 13, 15, 16, 18, 21, 24, 26, 31, 33, 37, 39, 40], "input": [0, 1, 2, 3, 4, 6, 8, 9, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 30, 33, 35, 37, 38, 39, 40], "data": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 20, 25, 27, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41], "give": [0, 8, 26, 33, 36, 40], "you": [0, 1, 2, 6, 7, 8, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40], "possibl": [0, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 23, 24, 25, 26, 36, 39, 40], "consequ": 0, "differ": [0, 1, 2, 3, 7, 8, 12, 13, 15, 16, 18, 19, 20, 21, 25, 26, 29, 32, 37, 38, 39, 40], "implement": [0, 1, 3, 4, 6, 8, 13, 15, 16, 21, 23, 25, 35, 40], "your": [0, 1, 12, 20, 23, 25, 26, 30, 31, 32, 34, 36, 37, 39, 40], "own": [0, 1, 8, 17, 26, 40], "In": [0, 1, 2, 3, 4, 5, 7, 8, 12, 13, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 38, 40, 41], "order": [0, 1, 3, 4, 6, 8, 12, 13, 15, 16, 18, 19, 21, 23, 24, 25, 26, 32, 35, 36, 39, 40], "perform": [0, 3, 5, 6, 9, 10, 13, 15, 16, 21, 24, 25, 26, 27, 30, 39, 41], "need": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 20, 21, 25, 26, 28, 31, 32, 34, 35, 36, 38, 40], "add": [0, 1, 2, 6, 12, 13, 16, 18, 20, 21, 23, 25, 26, 28, 32, 33, 36, 39, 40], "ini": [0, 1, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 21, 25, 26, 32, 36, 38], "file": [0, 1, 4, 5, 6, 7, 8, 9, 13, 14, 16, 18, 19, 20, 21, 25, 26, 31, 35, 36, 38], "new": [0, 3, 6, 8, 13, 15, 16, 18, 21, 25, 26, 36, 37, 40, 41], "section": [0, 1, 2, 4, 6, 8, 11, 12, 13, 15, 16, 18, 21, 24, 34, 35, 36, 39, 40], "call": [0, 5, 16, 18, 21, 35, 37, 40], "sp": [0, 1, 3, 6, 13, 21, 23, 24, 39, 40], "specifi": [0, 6, 8, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 25, 26, 33, 34, 35, 36, 37, 38, 40, 41], "type": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 21, 24, 25, 26, 32, 34, 35, 36, 37, 38, 39, 40], "wish": [0, 12, 26], "well": [0, 5, 8, 12, 13, 15, 16, 17, 18, 19, 20, 21, 26, 32, 36, 40], "some": [0, 3, 4, 5, 12, 13, 15, 17, 18, 20, 23, 24, 25, 28, 35, 36, 38, 39, 40], "paramet": [0, 1, 3, 5, 9, 11, 13, 16, 18, 19, 23, 24, 26, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40], "design": [0, 3, 17, 18, 40, 41], "environ": [0, 1, 3, 8, 10, 12, 20, 21, 23, 35, 40], "sizex": [0, 6, 13, 15, 18, 21, 23, 40], "32": [0, 6, 8, 9, 13, 14, 15, 18, 21, 25, 26, 29, 30, 32, 33, 34, 38, 40], "sizei": [0, 6, 13, 15, 18, 21, 23, 40], "batchsiz": [0, 1, 2, 8, 13, 15, 18, 21, 23, 40], "128": [0, 6, 13, 15, 21, 30, 31, 40], "pgd": 0, "ep": 0, "0": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40], "2": [0, 1, 2, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 25, 26, 29, 30, 31, 32, 33, 36, 37, 39], "The": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41], "modifi": [0, 13, 18, 19, 21, 40], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 35, 36, 37, 38, 39, 40], "indic": [0, 9, 12, 13, 14, 16, 23, 36, 39, 40], "follow": [0, 2, 3, 4, 6, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 32, 33, 36, 37, 38, 40], "tabl": [0, 8, 13, 16, 23, 25, 38], "option": [0, 1, 4, 6, 8, 9, 12, 13, 14, 15, 17, 20, 21, 22, 25, 26, 34, 35, 37, 39, 40], "default": [0, 1, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 34, 35, 37, 38, 39, 40], "valu": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 25, 26, 29, 34, 38, 39, 40, 41], "descript": [0, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21, 23, 36, 38, 39, 40], "none": [0, 1, 5, 12, 15, 25, 26, 29, 31, 34, 35, 37, 38, 39, 40], "name": [0, 1, 3, 6, 8, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 26, 29, 32, 34, 35, 36, 39, 40], "vanilla": 0, "gn": 0, "fgsm": 0, "1": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41], "degrad": 0, "rate": [0, 6, 9, 15, 18, 21, 24, 25, 34, 40], "nbiter": [0, 13, 15], "10": [0, 1, 2, 6, 12, 13, 15, 18, 19, 20, 21, 22, 26, 29, 30, 31, 33, 35, 40, 41], "number": [0, 1, 3, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 28, 32, 34, 36, 37, 38, 39, 40, 41], "iter": [0, 8, 15, 21, 25, 26, 28, 33, 34, 38, 39, 40], "requir": [0, 1, 6, 7, 11, 13, 18, 19, 21, 23, 25, 35, 37, 40], "randomstart": 0, "fals": [0, 1, 2, 3, 8, 13, 15, 19, 25, 26, 29, 31, 33, 34, 35, 37, 40], "If": [0, 1, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 32, 33, 34, 35, 37, 38, 39, 40], "true": [0, 1, 2, 4, 6, 7, 8, 12, 13, 14, 15, 16, 19, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40], "random": [0, 1, 2, 3, 12, 13, 15, 18, 21, 26, 36, 39], "everi": [0, 3, 8, 13, 14, 15, 16, 20, 21, 25, 29, 33, 36, 40], "pixel": [0, 8, 12, 13, 18, 19, 21, 26, 32], "between": [0, 1, 3, 4, 7, 9, 12, 13, 14, 15, 18, 19, 21, 25, 26, 30, 34, 35, 37, 38, 40], "target": [0, 2, 6, 9, 10, 12, 13, 17, 18, 19, 20, 21, 23, 24, 32, 40], "activ": [0, 3, 6, 7, 8, 12, 16, 18, 21, 22, 29, 30, 31, 32, 34, 36, 39], "mode": [0, 1, 6, 7, 8, 12, 15, 23, 25, 35, 40], "label": [0, 1, 8, 12, 15, 18, 20, 21, 25, 33], "found": [0, 13, 20, 21], "deepnet": [0, 2, 25, 26, 35, 37], "after": [0, 6, 8, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 25, 26, 29, 32, 36, 38, 40], "regular": [0, 12, 23, 40], "n2d2": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 40], "like": [0, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 20, 21, 22, 23, 25, 26, 31, 32, 34, 36, 39, 40], "test": [0, 1, 4, 5, 6, 7, 8, 9, 12, 13, 18, 19, 21, 23, 25, 26, 28, 30, 32, 34, 38, 40, 41], "learn": [0, 1, 3, 6, 8, 11, 12, 13, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 32, 34, 41], "therefor": [0, 3, 13, 15, 19, 21, 24, 25, 38], "against": 0, "resnet": [0, 6], "18": [0, 6, 15, 20, 31], "bn": [0, 25, 40], "moreov": [0, 8, 40], "execut": [0, 1, 9, 18, 21, 22], "robust": 0, "allow": [0, 1, 3, 4, 6, 7, 8, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 29, 32, 35, 38, 40], "singl": [0, 6, 7, 11, 12, 13, 15, 16, 18, 20, 21, 25, 26, 32, 34, 38, 40], "batch": [0, 1, 6, 8, 9, 12, 13, 14, 15, 21, 25, 26, 28, 32, 33, 35, 40, 41], "success": [0, 9, 13, 16, 25, 32, 40], "store": [0, 9, 12, 13, 25, 26, 37], "origin": [0, 11, 16, 23, 38], "testadversari": 0, "folder": [0, 1, 6, 8, 9, 11, 12, 15, 21, 32, 36, 40], "To": [0, 1, 2, 3, 5, 6, 8, 12, 13, 15, 16, 20, 21, 23, 24, 25, 26, 28, 32, 36, 38, 40], "pleas": [0, 5, 15, 17, 20, 25, 27, 34, 36, 39], "dev": [0, 1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 20, 23, 26, 36, 38], "testadv": 0, "solo": 0, "should": [0, 1, 3, 6, 7, 9, 12, 13, 20, 21, 25, 26, 31, 36, 37, 40], "see": [0, 1, 4, 6, 7, 12, 13, 21, 25, 28, 29, 31, 32, 34, 35, 36, 37, 40], "termin": [0, 15], "screen": [0, 6, 8], "untarget": 0, "batchpo": [0, 1], "7": [0, 6, 9, 12, 15, 19, 20, 29, 36, 40], "estim": [0, 1, 6, 8, 9, 16, 19, 20, 21, 25, 40], "9": [0, 1, 6, 12, 13, 15, 21, 24, 25, 29, 31, 32, 33, 40, 41], "55": [0, 9, 40], "54": [0, 31, 38, 40], "3": [0, 1, 6, 8, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 36, 37, 39, 40, 41], "5": [0, 1, 2, 6, 9, 12, 13, 15, 16, 18, 20, 21, 23, 25, 28, 29, 31, 32, 33, 37, 39, 40], "43": [0, 32], "59": [0, 9, 40], "53": [0, 40], "33": [0, 11, 21, 40, 41], "8": [0, 4, 5, 6, 7, 8, 9, 12, 13, 15, 18, 20, 25, 26, 28, 29, 31, 34, 36, 38, 39, 40, 41], "50": [0, 6, 13, 29, 32, 40], "92": 0, "4": [0, 1, 2, 6, 9, 12, 13, 15, 20, 21, 23, 25, 26, 29, 31, 32, 33, 37, 40], "51": [0, 40], "02": [0, 6, 12, 40, 41], "6": [0, 1, 2, 6, 8, 9, 12, 13, 15, 18, 21, 26, 29, 33, 37, 39, 40], "26": [0, 6], "07": [0, 11], "52": 0, "42": [0, 40], "62": [0, 6, 40], "47": [0, 40], "61": 0, "88": [0, 40], "time": [0, 1, 2, 4, 6, 8, 9, 13, 15, 18, 21, 33, 36, 41], "elaps": 0, "85": [0, 9], "multipl": [0, 1, 3, 5, 13, 15, 18, 19, 25, 26, 28, 33, 36, 37, 38, 40, 41], "2000": [0, 33], "imag": [0, 1, 3, 6, 15, 16, 18, 19, 20, 21, 23, 26, 28, 30, 32, 33, 40, 41], "ratio": [0, 12, 13, 15, 16, 21, 26], "It": [0, 1, 3, 4, 6, 9, 11, 12, 13, 14, 16, 18, 19, 21, 23, 24, 25, 26, 36, 40], "also": [0, 1, 2, 3, 6, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 24, 25, 29, 35, 36, 40], "each": [0, 1, 2, 3, 4, 6, 9, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 29, 32, 38, 39, 40], "class": [0, 1, 2, 6, 12, 13, 15, 16, 18, 21, 25, 26, 30, 32, 33, 35, 37, 39], "multi": [0, 13, 18, 26, 32, 36, 38], "treat": [0, 12, 26], "analysi": [0, 8, 10, 13, 18, 25, 27, 36], "result": [0, 1, 4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 18, 21, 22, 24, 32], "20": [0, 12, 13, 15, 18, 21, 32, 39, 40, 41], "includ": [0, 4, 5, 8, 12, 13, 18, 19, 20, 23, 24, 26, 36], "error": [0, 1, 7, 13, 16, 21, 22, 34, 36, 38, 40], "35": [0, 6, 40], "00": [0, 9, 40], "218": 0, "219": 0, "78": [0, 11, 38], "216": 0, "16": [0, 2, 5, 6, 8, 9, 12, 13, 18, 21, 26, 29, 33, 34, 38, 40, 41], "185": 0, "60": [0, 6, 12, 18, 40], "188": 0, "89": 0, "184": [0, 6], "196": [0, 12, 26], "37": [0, 6], "208": 0, "66": [0, 6, 11, 13, 38], "191": [0, 6], "195": 0, "now": [0, 1, 6, 21, 23, 29, 31, 32, 37, 40], "turn": [0, 15], "integr": [0, 4, 8, 12, 15, 17, 18, 21, 25, 26, 35, 40], "insid": [0, 4, 23, 29, 36, 40], "have": [0, 1, 2, 4, 6, 8, 11, 12, 13, 15, 20, 21, 24, 25, 26, 30, 32, 33, 34, 37, 40], "hpp": 0, "enum": 0, "attack_t": 0, "my_attack": 0, "namespac": 0, "templat": [0, 3, 4, 5], "const": [0, 3], "char": [0, 3], "enumstr": 0, "void": [0, 3, 8, 40], "ffgsm_attack": 0, "std": [0, 1, 3, 5, 11, 13], "shared_ptr": [0, 3], "float": [0, 1, 3, 7, 8, 9, 13, 18, 25, 26, 29, 31, 34, 36, 37, 38, 39, 40], "alpha": [0, 13, 15, 21, 25, 38, 40], "bool": [0, 1, 3, 8, 25, 26, 32, 34, 35, 37], "pgd_attack": 0, "unsign": [0, 3, 9, 13, 34, 38], "int": [0, 1, 3, 8, 25, 26, 31, 34, 35, 39], "random_start": 0, "src": [0, 13], "cpp": [0, 4, 31, 38], "attacklaunch": 0, "switch": [0, 15, 19, 21, 37], "case": [0, 7, 12, 13, 15, 16, 18, 19, 23, 35, 38, 40], "vanilla_attack": 0, "break": [0, 14], "fgsm_attack": 0, "mep": 0, "mtarget": 0, "my": 0, "gener": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 25, 26, 28, 29, 30, 32, 34, 35, 36, 38, 40, 41], "adversarialgener": 0, "them": [0, 2, 13, 25, 26, 36, 40], "don": [0, 1, 12, 15, 21, 25, 26, 31, 36, 37], "t": [0, 1, 8, 9, 12, 13, 15, 21, 24, 25, 26, 31, 37, 41], "forget": [0, 6, 12, 15, 26, 31, 36], "save": [0, 1, 4, 6, 7, 8, 13, 16, 18, 19, 28, 29, 32, 37, 38, 40], "dure": [0, 3, 4, 6, 7, 8, 12, 15, 16, 18, 19, 20, 21, 23, 25, 38, 39, 40], "layer": [0, 1, 2, 3, 4, 7, 8, 10, 14, 16, 18, 20, 21, 23, 24, 29, 30, 31, 32, 35, 36, 38, 41], "setter": [0, 3], "method": [0, 3, 4, 5, 8, 12, 13, 18, 21, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41], "adv": 0, "setep": 0, "iniconfig": 0, "getproperti": 0, "getep": 0, "setnbiter": 0, "getnbiter": 0, "setrandomstart": 0, "getrandomstart": 0, "settarget": 0, "gettarget": [0, 1], "return": [0, 1, 3, 8, 9, 15, 25, 26, 33, 35, 37, 39, 40], "we": [1, 2, 3, 8, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40], "present": [1, 6, 9, 10, 12, 13, 14, 16, 20, 25, 26, 34, 40], "c": [1, 3, 12, 15, 18, 19, 20, 38, 41], "function": [1, 3, 8, 9, 18, 21, 22, 25, 28, 30, 32, 33, 34, 35, 36, 37, 40], "bind": [1, 2, 20], "python": [1, 2, 6, 8, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37], "framework": [1, 8, 13, 17, 18, 23, 35], "pybind": 1, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "straightforward": [1, 18], "thu": [1, 3, 13, 35], "seen": [1, 37], "document": [1, 3, 25, 30, 41], "want": [1, 13, 20, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40], "raw": [1, 11, 12, 19], "compil": [1, 4, 5, 8, 9, 18, 30, 35], "creat": [1, 2, 3, 6, 8, 12, 13, 16, 18, 20, 21, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 40], "so": [1, 3, 6, 8, 12, 13, 15, 16, 18, 21, 22, 24, 26, 28, 34, 36, 37, 39, 40], "lib": [1, 20], "root": [1, 12, 15, 20, 33, 36], "project": [1, 4, 5, 6, 20, 36], "pythonpath": [1, 36], "access": [1, 8, 20, 25, 29, 36, 37, 39], "import": [1, 15, 22, 24, 25, 26, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40], "script": [1, 5, 6, 19, 20, 22, 28, 29, 30, 31, 32, 33, 36, 39, 40], "line": [1, 4, 5, 6, 7, 8, 12, 14, 19, 21, 22, 23, 26, 31, 32, 34, 36, 40], "howev": [1, 3, 7, 13, 16, 21, 25, 35, 38], "recommend": [1, 8, 20, 23, 37, 40], "instead": [1, 5, 6, 9, 12, 13, 15, 18, 22, 26, 33, 38, 40], "librari": [1, 3, 4, 5, 6, 8, 9, 12, 20, 26, 30, 33, 36, 37, 40], "an": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 26, 27, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41], "deepnetgener": 1, "net": [1, 2, 12, 33, 41], "seed": [1, 2, 4, 5, 6, 7, 8, 23, 36, 38], "model": [1, 2, 3, 6, 7, 10, 14, 18, 21, 30, 32, 33, 34, 35, 36, 38, 39, 41], "mnist24_16c4s2_24c5s2_150_10": [1, 9, 20], "befor": [1, 4, 6, 8, 12, 13, 14, 16, 21, 22, 23, 29, 31, 32, 34, 36, 38, 39, 40], "must": [1, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 32, 34, 37, 38, 40], "first": [1, 2, 5, 6, 8, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 31, 32, 40], "initi": [1, 2, 3, 8, 15, 18, 20, 21, 23, 25, 26, 32, 34, 39, 40, 41], "sampl": [1, 8, 13, 15, 16, 40], "from": [1, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 40, 41], "retriev": [1, 16, 30, 34, 40], "read": [1, 4, 6, 12, 21, 26, 28, 37], "set": [1, 2, 6, 7, 8, 9, 12, 13, 15, 16, 18, 19, 20, 21, 24, 26, 30, 32, 35, 36, 39, 40, 41], "getstimuliprovid": 1, "readbatch": 1, "run": [1, 6, 8, 9, 13, 16, 19, 23, 25, 30, 31, 33, 35, 36, 38, 40], "final": [1, 2, 3, 13, 18, 21, 40], "output": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 18, 21, 22, 23, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 40], "one": [1, 2, 3, 6, 11, 12, 13, 15, 16, 18, 21, 24, 25, 26, 28, 29, 31, 32, 34, 36, 37, 40], "ha": [1, 3, 13, 14, 15, 21, 25, 31, 32], "uniqu": [1, 13, 40], "get": [1, 12, 13, 16, 22, 25, 26, 29, 33, 34, 36, 37], "numpi": [1, 2, 28, 30, 33], "arrai": [1, 2, 14, 37], "getestimatedlabel": 1, "flatten": [1, 6, 13, 23, 30, 33, 37], "getestimatedlabelsvalu": 1, "list": [1, 3, 4, 6, 7, 8, 12, 13, 15, 16, 17, 19, 20, 23, 24, 25, 26, 27, 32, 33, 35, 37], "zip": [1, 20], "print": [1, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41], "15989691": 1, "1617092": 1, "14962792": 1, "16899541": 1, "16261548": 1, "17289816": 1, "13728766": 1, "15315214": 1, "14424478": 1, "17937174": 1, "1518211": 1, "12860791": 1, "17310674": 1, "14563303": 1, "17823018": 1, "14206158": 1, "18292117": 1, "14831856": 1, "22245243": 1, "1745578": 1, "20414244": 1, "26987872": 1, "16570412": 1, "17435187": 1, "__init__": [1, 25, 26, 33, 35, 37, 39], "self": [1, 25, 33], "addcmonitor": 1, "str": [1, 25, 26, 32, 34, 35, 37, 39, 40], "monitor": 1, "cmonitor": 1, "addcel": 1, "parent": [1, 25], "addmonitor": 1, "addtarget": 1, "backpropag": [1, 2, 3, 15, 24, 25, 35, 37], "tupl": [1, 35, 36, 37], "creset": 1, "timestamp": 1, "ctargetsprocess": 1, "stimuliset": 1, "ctick": 1, "start": [1, 6, 11, 14, 16, 20, 21, 26], "stop": [1, 24], "timestep": 1, "record": 1, "exportnetworkfreeparamet": 1, "arg": [1, 8, 31, 35, 40], "kwarg": [1, 25, 34, 35], "overload": 1, "dirnam": [1, 25], "exportnetworksolverparamet": 1, "fusebatchnorm": 1, "getcmonitor": 1, "getcel": 1, "getcell_frame_top": 1, "dict": 1, "getchildcel": 1, "getdatabas": 1, "getlay": 1, "getmasterdevic": 1, "getmonitor": 1, "getnam": [1, 3], "getnetwork": 1, "getparentcel": 1, "importnetworkfreeparamet": 1, "ignorenotexist": 1, "weightnam": 1, "initializecmonitor": 1, "nbtimestep": 1, "load": [1, 2, 6, 8, 9, 12, 13, 16, 18, 23, 24, 25, 27, 32, 33, 36, 40], "loadnetworkparamet": 1, "log": [1, 15, 16, 18, 20, 21, 25, 32, 34], "basenam": [1, 22], "logestimatedlabel": 1, "logestimatedlabelsjson": 1, "logfreeparamet": 1, "loglabelslegend": 1, "filenam": [1, 14], "loglabelsmap": 1, "withstat": 1, "logreceptivefield": 1, "logstat": 1, "logtim": 1, "propag": [1, 2, 3, 16, 21, 24, 25, 29, 32, 35], "infer": [1, 3, 4, 5, 7, 8, 16, 21, 23, 25, 36, 40], "removecel": 1, "reconnect": [1, 25], "removedropout": 1, "savenetworkparamet": 1, "setdatabas": 1, "setstimuliprovid": 1, "spikecodingcompar": 1, "idx": [1, 26, 28], "updat": [1, 2, 3, 6, 20, 21, 25, 32, 35, 36, 37, 39, 40], "freeparameterstyp": 1, "member": [1, 3], "addit": [1, 3, 8, 12, 13, 17, 18, 19, 21, 25, 40], "all": [1, 3, 4, 6, 7, 12, 13, 14, 15, 18, 19, 20, 21, 24, 25, 26, 32, 33, 37, 38, 39, 40], "properti": [1, 3, 5, 32], "addinput": [1, 2, 3], "connect": [1, 2, 3, 13, 15, 16, 18, 21, 23, 24, 25, 29, 32, 40], "filter": [1, 3, 12, 13, 18], "object": [1, 2, 3, 6, 8, 11, 12, 13, 16, 18, 19, 26, 29, 31, 32, 35, 36, 37, 39, 40, 41], "channel": [1, 3, 4, 6, 11, 13, 15, 18, 20, 21, 25, 26, 32, 38], "x0": [1, 3], "left": [1, 3, 12, 13, 14, 15, 16, 25, 26], "offset": [1, 3, 13, 15, 16, 26, 41], "y0": [1, 3], "top": [1, 3, 6, 13, 15, 16, 21, 24, 25, 40], "width": [1, 3, 4, 6, 11, 12, 13, 15, 16, 18, 21, 23, 25, 26, 31, 32, 40], "height": [1, 3, 4, 6, 11, 12, 13, 15, 16, 18, 21, 23, 25, 26, 31, 32, 40], "map": [1, 2, 3, 4, 6, 15, 16, 18, 21, 32, 40], "tensor_bool": [1, 2], "size": [1, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 28, 32, 35, 39, 40], "vector": [1, 3, 6, 16, 23, 25, 30], "matrix": [1, 3, 8, 9, 12, 13, 15, 16, 18, 21, 25, 32], "col": [1, 3, 13, 26], "x": [1, 3, 8, 13, 15, 20, 25, 26, 29, 32, 33, 35, 38, 40, 41], "total": [1, 6, 12, 13, 15, 19, 21, 26, 32, 40], "row": [1, 3, 12, 13, 15, 19, 20, 21, 26, 32], "pointer": [1, 3], "addmultiscaleinput": 1, "heterostimuliprovid": 1, "0x7f39def303f0": 1, "clearinput": 1, "clear": [1, 25], "exportactivationparamet": 1, "export": [1, 3, 15, 22, 25, 29, 35, 36, 38, 40], "sourc": [1, 6, 17, 36, 40], "exportfreeparamet": 1, "free": [1, 36], "ascii": 1, "format": [1, 8, 12, 13, 14, 15, 16, 18, 19, 22, 25, 32, 35, 37, 40], "compat": [1, 4, 8, 20], "destin": 1, "exportquantfreeparamet": 1, "quantiz": [1, 4, 7, 25, 29, 31, 39, 41], "getassociateddeepnet": 1, "getchildrencel": 1, "getinputsdim": [1, 3], "getinputss": 1, "getmap": 1, "getnbchannel": 1, "getnboutput": 1, "1d": [1, 13, 18, 23], "getoutputsheight": 1, "getoutputswidth": 1, "getparameterandtyp": 1, "parameteriz": 1, "getparamet": 1, "getparentscel": 1, "getquantizednbbit": 1, "getstat": 1, "stat": [1, 20, 24, 25, 32], "gettyp": [1, 3], "basic": [1, 13, 14], "importactivationparamet": 1, "throw": 1, "doesn": [1, 8, 12, 15, 25, 37], "exist": [1, 6, 12, 13, 14, 16, 21, 23, 24, 25, 37], "importfreeparamet": 1, "state": [1, 3, 15, 40], "e": [1, 3, 9, 12, 20, 21, 25, 37, 39, 41], "g": [1, 3, 20, 32, 37, 41], "weight": [1, 3, 4, 6, 7, 9, 16, 18, 21, 23, 25, 32, 34, 35, 37, 39], "initializedatadepend": 1, "configur": [1, 6, 8, 12, 13, 18, 24, 32, 36, 40], "directori": [1, 4, 5, 6, 7, 13, 18, 20, 21, 25, 26], "savefreeparamet": 1, "setmap": 1, "setparamet": [1, 2], "getbiassolv": 1, "getbias": 1, "basetensor": [1, 3, 37], "getepsilon": 1, "getmean": 1, "getmovingaveragemomentum": 1, "getscalesolv": 1, "getscal": 1, "getvari": 1, "setbia": [1, 3], "index": [1, 8, 10, 12, 16, 25, 26], "bia": [1, 13, 15, 25, 40], "setbiassolv": [1, 3], "setmean": 1, "mean": [1, 2, 3, 7, 9, 12, 13, 15, 16, 21, 25, 26, 29, 31, 37, 38, 39], "setscal": 1, "scale": [1, 2, 13, 15, 16, 18, 21, 26, 30, 32, 40, 41], "setscalesolv": 1, "setvari": 1, "varianc": [1, 15, 25, 40], "base": [1, 3, 6, 11, 12, 13, 14, 15, 16, 18, 21, 25, 36, 40, 41], "ani": [1, 3, 11, 12, 13, 15, 16, 18, 21, 24, 25, 26, 29, 36, 37, 38, 39, 40], "kind": [1, 13, 15, 25, 39, 40], "compos": [1, 6, 14, 15, 21, 25, 32, 33], "deep": [1, 3, 6, 8, 12, 13, 17, 25, 26, 36, 40, 41], "interfac": [1, 3, 8, 14, 15, 30, 35, 37], "weightsexportformat": [1, 15], "ochw": [1, 15, 31], "hwco": [1, 15], "getbia": [1, 3], "getbiasfil": 1, "getdilationx": 1, "getdilationi": 1, "getkernelheight": 1, "getkernelwidth": 1, "getpaddingx": 1, "getpaddingi": 1, "getquant": 1, "quantizercel": 1, "getstridex": 1, "getstridei": 1, "getsubsamplex": 1, "getsubsamplei": 1, "getweight": [1, 3], "getweightsfil": 1, "getweightssolv": 1, "setbiasfil": [1, 3], "setquant": 1, "setweight": [1, 3], "setweightsfil": [1, 3], "setweightssolv": [1, 3], "getdropout": 1, "coeffmod": 1, "perlay": [1, 25], "perinput": [1, 25], "perchannel": [1, 13, 25], "oper": [1, 3, 6, 7, 13, 16, 20, 21, 22, 25, 26, 30, 32, 38, 39, 40], "sum": [1, 6, 23, 25, 26], "abssum": [1, 25], "euclideansum": [1, 25], "prod": [1, 20, 25], "max": [1, 6, 9, 13, 18, 21, 23, 25, 29, 31, 32, 33, 40, 41], "getcoeffmod": 1, "getoper": 1, "getshift": 1, "oc": [1, 25, 29, 31], "co": 1, "norm": [1, 13, 15], "l1": [1, 13, 15], "l2": [1, 13, 15, 16], "getbotpad": 1, "getleftpad": 1, "getrightpad": 1, "gettoppad": 1, "pool": [1, 3, 6, 9, 14, 18, 21, 24, 29, 31, 32, 33, 34, 40, 41], "averag": [1, 8, 15, 19, 21, 24, 25], "getpoolheight": 1, "getpoolwidth": 1, "getpool": 1, "roipool": [1, 9, 40], "bilinear": [1, 15, 16, 25], "bilineartf": [1, 15, 25], "resizemod": 1, "nearestneighbor": [1, 6], "getmod": 1, "getresizeoutputheight": 1, "getresizeoutputwidth": 1, "getgroups": 1, "getwithloss": 1, "setwithloss": 1, "withloss": [1, 15, 16, 18, 21, 24, 40], "gettransform": 1, "signal": [1, 9, 18, 23, 34], "out": [1, 6, 15, 39], "inout": 1, "detectortyp": 1, "inputformat": 1, "anchor": [1, 9, 16, 40], "scorescl": [1, 15], "addinputbi": 1, "diffoutput": 1, "back": [1, 13, 15, 16, 21, 24, 25, 34, 35], "checkgradi": 1, "epsilon": [1, 15, 25], "maxerror": 1, "clearinputtensor": 1, "clearoutputtensor": 1, "getactiv": [1, 3], "getdiffinput": 1, "getdiffoutput": 1, "getinput": 1, "getmaxoutput": 1, "getoutput": 1, "getpydatatyp": 1, "getpymodel": 1, "initializeparamet": 1, "nbinputchannel": 1, "nbinput": 1, "linkinput": 1, "forward": [1, 3, 33, 35, 40], "param": [1, 4, 6, 7, 8, 25], "train": [1, 4, 7, 10, 12, 15, 16, 23, 25, 30, 33, 34, 35, 36, 39, 41], "els": [1, 12, 14, 15, 26, 33, 37], "setactiv": [1, 3], "setdiffinput": 1, "diffinput": 1, "tensor_float": 1, "setdiffinputsvalid": 1, "setoutputerror": 1, "setoutputtarget": [1, 16], "tensor_int": 1, "applyloss": 1, "targetv": 1, "defaultv": 1, "nboutput": [1, 6, 14, 15, 16, 18, 21, 23, 24, 39, 40], "kerneldim": [1, 15, 39], "subsampledim": [1, 15], "stridedim": [1, 15], "paddingdim": [1, 15], "dilationdim": [1, 15], "initializeweightquant": 1, "resetbia": 1, "resetweight": 1, "resetweightssolv": 1, "getdiffsynaps": 1, "shift": [1, 7, 13, 15, 25, 34, 38, 41], "scalingratio": [1, 15], "seqlength": [1, 15], "inputdim": [1, 15], "numberlay": 1, "hiddens": [1, 15], "algo": [1, 15], "bidirect": [1, 15], "inputmod": [1, 15], "dropout": [1, 4, 6, 7, 21, 23, 29, 32, 34, 40, 41], "singlebackpropfeed": [1, 15], "nbanchor": 1, "pixelformat": 1, "nbpropos": 1, "nbclass": 1, "nmsthreshold": 1, "scorethreshold": 1, "numpart": 1, "numtempl": 1, "toppad": [1, 15], "botpad": 1, "leftpad": [1, 15], "rightpad": [1, 15], "pooldim": [1, 15], "scoreindex": 1, "iouindex": 1, "isnm": 1, "meansfactor": 1, "stdfactor": 1, "outputswidth": 1, "outputsheight": 1, "groupsiz": [1, 15], "threshold": [1, 6, 8, 9, 13, 16, 19, 21, 38, 39, 40], "pass": [1, 4, 6, 7, 8, 9, 16, 25, 28, 32, 33, 35], "argument": [1, 4, 6, 7, 8, 19, 23, 29, 32, 36, 37, 38, 40], "tanh": [1, 6, 23], "tanhactivation_frame_float": [1, 2], "virtual": [1, 3, 12, 21], "inherit": [1, 3, 5, 12, 25], "other": [1, 2, 3, 10, 13, 15, 16, 21, 22, 25, 26, 32, 35, 38, 40], "quantizeractiv": 1, "getclip": 1, "getleakslop": 1, "getalpha": 1, "linearactivation_frame_float": 1, "linearactivation_frame_doubl": 1, "linearactivation_frame_cuda_float": 1, "linearactivation_frame_cuda_doubl": 1, "rectifieractivation_frame_float": 1, "rectifieractivation_frame_doubl": 1, "rectifieractivation_frame_cuda_float": 1, "rectifieractivation_frame_cuda_doubl": 1, "tanhactivation_frame_doubl": 1, "tanhactivation_frame_cuda_float": 1, "tanhactivation_frame_cuda_doubl": 1, "swishactivation_frame_float": 1, "swishactivation_frame_doubl": 1, "swishactivation_frame_cuda_float": 1, "swishactivation_frame_cuda_doubl": 1, "A": [1, 3, 8, 12, 13, 14, 16, 20, 21, 23, 25, 26, 35, 37, 40, 41], "associ": [1, 12, 13, 14, 15, 16, 18, 19, 23, 25, 26, 29, 31, 34, 37], "defin": [1, 3, 6, 12, 13, 16, 18, 20, 21, 25, 26, 33, 35, 37, 40], "comput": [1, 3, 4, 6, 7, 8, 13, 15, 16, 18, 19, 21, 23, 25, 29, 32, 36, 37, 38, 40, 41], "loss": [1, 6, 8, 10, 15, 21, 25, 30, 32, 33, 35, 40], "score": [1, 6, 15, 16, 18, 19, 20, 21, 23, 25, 30, 32, 40], "confus": [1, 9, 16, 18, 21, 25, 32], "providetarget": [1, 2], "process": [1, 2, 3, 6, 8, 9, 11, 13, 14, 15, 16, 20, 21, 23, 26, 32, 36, 38, 40], "mnist": [1, 2, 11, 15, 20, 21, 25, 28, 30, 31, 40], "exampl": [1, 3, 5, 6, 8, 9, 10, 13, 14, 16, 18, 20, 21, 22, 23, 24, 28, 29, 31, 32, 41], "targetvalu": [1, 16, 18], "defaultvalu": [1, 16, 18], "targettopn": 1, "labelsmap": [1, 6, 16, 21], "createmissinglabel": [1, 16], "getdefaulttarget": 1, "getdefaultvalu": 1, "roi": [1, 12, 13, 16, 18, 26], "getlabeltarget": 1, "getloss": 1, "getnbtarget": 1, "gettargetlabel": 1, "gettargetlabelsnam": 1, "gettargettopn": 1, "gettargetvalu": 1, "xoffset": 1, "yoffset": 1, "append": [1, 25], "appli": [1, 12, 13, 15, 18, 21, 24, 25, 26, 28, 32, 36, 38, 39, 40, 41], "stimuli": [1, 2, 6, 8, 9, 10, 12, 15, 16, 21, 25, 26, 28, 32, 34, 38], "setdefaulttarget": 1, "setlabeltarget": 1, "setmasklabeltarget": 1, "done": [1, 4, 5, 6, 7, 8, 13, 16, 18, 21, 24, 25, 26, 30, 31, 32, 35, 36, 38, 40], "su": [1, 41], "situat": 1, "instal": [1, 6, 8, 12, 20, 26, 40], "install_dataset": [1, 20], "py": [1, 6, 19, 20, 21, 22, 28, 29, 30, 31, 32, 33, 35, 40], "local": [1, 5, 9, 15, 20, 28], "user": [1, 14, 15, 20, 25, 36, 40], "n2d2_data": [1, 12, 20, 26], "path": [1, 2, 3, 8, 9, 12, 13, 16, 20, 23, 25, 26, 28, 32, 37, 40], "variabl": [1, 2, 4, 6, 11, 12, 13, 15, 20, 36, 40], "onc": [1, 2, 3, 6, 8, 13, 18, 23, 26, 30, 31, 32, 34, 36, 40], "appropri": [1, 32, 34], "here": [1, 3, 8, 12, 13, 16, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 40], "locat": [1, 5, 6, 8, 9, 12, 13, 20, 25, 37, 40], "specif": [1, 3, 8, 9, 12, 13, 15, 17, 24, 26, 29, 34, 35, 38, 40], "sound": [1, 18], "2d": [1, 13, 15, 18, 23], "3d": [1, 15, 18], "point": [1, 3, 7, 9, 13, 16, 18, 20, 21, 33, 36, 38, 40], "global": [1, 4, 6, 11, 13, 21, 38, 40], "stimulu": [1, 6, 8, 9, 12, 21, 25, 26], "handl": [1, 3, 8, 13, 23, 24, 35], "convert": [1, 6, 12, 13, 15, 18, 21, 24, 25, 26, 30, 34, 35, 37, 38], "extract": [1, 12, 13, 18, 19, 20, 26, 32], "mani": [1, 3, 16, 18, 22], "correspond": [1, 6, 8, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 32, 37], "valid": [1, 3, 12, 13, 16, 18, 19, 20, 21, 25, 26, 28, 31, 32, 38, 40], "unpartit": [1, 25, 26, 28], "stimulisetmask": [1, 2], "learnonli": [1, 11, 13, 18, 21, 26, 40], "validationonli": [1, 13, 26], "testonli": [1, 13, 26], "nolearn": [1, 12, 13, 26, 40], "novalid": [1, 13, 26], "notest": [1, 13, 26], "loaddatainmemori": 1, "getlabelnam": 1, "getnbstimuli": 1, "rtype": 1, "getstimuluslabel": 1, "stimulusid": 1, "id": [1, 8, 9, 12, 13, 16, 25, 26, 41], "datapath": [1, 12, 13, 26], "labelpath": [1, 12], "extractroi": 1, "useunlabeledfortest": [1, 12], "incclutt": [1, 12], "singlelabel": [1, 12], "incambigu": [1, 12], "inthewild": 1, "withlandmark": 1, "withpartit": 1, "loaddir": 1, "depth": [1, 12, 13, 15, 26, 40], "labelnam": [1, 12], "labeldepth": [1, 12, 13], "onli": [1, 3, 6, 7, 8, 12, 13, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 36, 37, 38, 39, 40], "current": [1, 4, 6, 12, 13, 14, 18, 22, 23, 25, 26, 39, 40], "dirpath": 1, "sub": [1, 4, 5, 7, 12, 13, 18, 20, 23, 26], "recurs": [1, 12, 14, 20, 25], "its": [1, 3, 6, 8, 12, 13, 14, 21, 24, 25, 39, 40], "p": [1, 13, 15, 16, 36, 38, 41], "string": [1, 3, 8, 12, 25, 26, 39], "setignoremask": 1, "ignoremask": [1, 12, 13], "space": [1, 4, 8, 12, 13, 15, 16, 18, 20, 23, 35, 37], "separ": [1, 3, 12, 13, 15, 16, 21, 23, 24, 29], "mask": [1, 12, 15, 16, 23, 26, 39], "ignor": [1, 12, 13, 14, 16, 19, 21, 23, 24, 25, 26, 38], "usual": [1, 12, 13, 16, 21, 24, 26, 38], "wildcard": [1, 12, 13, 16, 26], "setvalidextens": 1, "validextens": [1, 12], "getvalid": 1, "usevalidationfortest": 1, "backgroundclass": [1, 23], "getbackgroundclass": 1, "getlearn": 1, "getusevalidationfortest": 1, "wikiset": [1, 21], "imdbset": [1, 21], "cropfram": 1, "usenameaslabel": 1, "fulli": [1, 3, 4, 7, 12, 13, 15, 16, 18, 21, 23, 24, 25, 29, 32, 40], "act": [1, 2, 7, 13], "loader": [1, 2], "compositestimuli": [1, 13, 21], "addontheflytransform": [1, 2], "setmask": 1, "ON": 1, "THE": 1, "fly": [1, 2, 13, 21, 26], "cacheabl": 1, "addtransform": [1, 2], "allbatchsprovid": 1, "getbatchs": 1, "getdata": 1, "getdatachannel": 1, "getlabelsdata": 1, "getlabelsdatachannel": 1, "getlabelsroi": 1, "getontheflytransform": 1, "getsiz": 1, "getsizex": 1, "getsizei": 1, "iscompositestimuli": 1, "normalizeintegersstimuli": 1, "envcvdepth": 1, "startindex": 1, "readrandombatch": [1, 2], "whole": [1, 2, 11, 12, 18, 21, 23, 24, 25], "setbatch": 1, "randshuffl": 1, "nbmax": 1, "setstreamedlabel": 1, "streamedlabel": 1, "stream": [1, 4], "directli": [1, 4, 9, 12, 13, 15, 16, 18, 19, 23, 24, 25, 26, 36, 37, 40], "setstreamedtensor": 1, "streamedtensor": 1, "streambatch": 1, "creation": [1, 8, 13, 18], "dist": 1, "elasticgaussians": [1, 2, 13, 18], "21": [1, 2, 13, 18], "elasticsigma": [1, 2, 13, 18], "elasticsc": [1, 2, 13, 18], "36": [1, 2, 6, 15, 40], "rotat": [1, 2, 13, 18, 26], "padcrop": [1, 2, 40], "24": [1, 2, 6, 9, 13, 18, 21, 25], "ct": 1, "push_back": 1, "which": [1, 3, 4, 5, 6, 8, 12, 13, 15, 16, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 33, 34, 35, 36, 37, 40], "tran": [1, 2, 23], "getelasticgaussians": 1, "getelasticsc": 1, "getelasticsigma": 1, "getignoremissingdata": 1, "getrot": 1, "bordertyp": [1, 13, 26], "constantbord": [1, 13, 26], "replicatebord": [1, 13, 26], "reflectbord": [1, 13, 26], "wrapbord": [1, 13, 26], "minusonereflectbord": [1, 13, 26], "meanbord": [1, 13, 26], "getadditivewh": 1, "getbordertyp": 1, "getbordervalu": 1, "getheight": 1, "getwidth": 1, "randomresizecroptransform": [1, 40], "customtransform": 1, "arg0": 1, "plu": [1, 13, 20, 26, 30, 33], "minu": [1, 11, 13, 23, 26], "multipli": [1, 13, 16, 26, 32], "divid": [1, 11, 13, 21, 23, 26, 40], "firstoper": [1, 11, 13, 23, 40], "firstvalu": [1, 11, 13, 23, 40], "secondoper": [1, 11, 13, 23], "secondvalu": [1, 11, 13, 23], "red": [1, 13, 21, 26], "green": [1, 13, 26], "blue": [1, 13, 26], "hue": [1, 13, 16, 26], "satur": [1, 6, 13, 26], "grai": [1, 13, 18, 20, 21, 26, 28, 32], "y": [1, 8, 13, 15, 16, 25, 26, 41], "cb": [1, 13, 26], "cr": [1, 13, 26], "getchannel": 1, "colorspac": [1, 13, 16, 23, 40], "bgr": [1, 12, 13, 26], "rgb": [1, 6, 13, 21, 23, 26, 40], "hsv": [1, 13, 16, 26], "hl": [1, 9, 13, 18, 26, 40], "ycrcb": [1, 13, 26], "cielab": [1, 13, 26], "cieluv": [1, 13, 26], "rgb_to_bgr": [1, 13, 26], "rgb_to_hsv": [1, 13, 26], "rgb_to_hl": [1, 13, 26], "rgb_to_ycrcb": [1, 13, 26], "rgb_to_cielab": [1, 13, 26], "rgb_to_cieluv": [1, 13, 26], "hsv_to_bgr": [1, 13, 26], "hsv_to_rgb": [1, 13, 26], "hls_to_bgr": [1, 13, 26], "hls_to_rgb": [1, 13, 26], "ycrcb_to_bgr": [1, 13, 26], "ycrcb_to_rgb": [1, 13, 26], "cielab_to_bgr": [1, 13, 26], "cielab_to_rgb": [1, 13, 26], "cieluv_to_bgr": [1, 13, 26], "cieluv_to_rgb": [1, 13, 26], "getcolorspac": 1, "twodimension": [1, 13], "stddev": [1, 11, 13, 15], "otsumethod": [1, 13], "offsetx": [1, 13, 15, 40], "offseti": [1, 13, 15, 40], "getallowpad": 1, "getoffsetx": 1, "getoffseti": 1, "getrandomoffsetx": 1, "getrandomoffseti": 1, "getrandomrot": 1, "getrandomrotationrang": 1, "getrandomsc": 1, "getrandomscalingrang": 1, "nbrow": [1, 13], "nbcol": [1, 13], "nbchannel": [1, 13, 23, 40], "getnbcol": 1, "getnbrow": 1, "getkeepaspectratio": 1, "getresizetofit": 1, "getfirstoper": 1, "getfirstvalu": 1, "getsecondoper": 1, "getsecondvalu": 1, "gettrunc": 1, "gainrang": [1, 13], "biasrang": [1, 13], "gammarang": [1, 13], "gainvarprob": [1, 13], "biasvarprob": [1, 13], "gammavarprob": [1, 13], "erod": [1, 13], "dilat": [1, 13, 15, 25], "open": [1, 6, 13, 15, 17, 19, 20, 23, 40], "close": [1, 11, 13, 19, 40], "gradient": [1, 3, 13, 15, 16, 20, 24, 25, 32, 33, 40, 41], "tophat": [1, 13], "blackhat": [1, 13], "applytolabel": [1, 13], "reconstructionbyeros": [1, 13], "reconstructionbydil": [1, 13], "openingbyreconstruct": [1, 13], "closingbyreconstruct": [1, 13], "logscal": [1, 13], "distribut": [1, 9, 15, 25, 38, 40], "auto": [1, 12, 16], "scsale": 1, "delta": [1, 13, 15, 21, 39], "func": 1, "windowfunction_doubl": 1, "kernel": [1, 3, 4, 5, 6, 9, 15, 18, 21, 25, 40], "kernel_doubl": 1, "orient": 1, "horizontalflip": [1, 13], "verticalflip": [1, 13], "gethorizontalflip": 1, "getrandomhorizontalflip": 1, "getrandomverticalflip": 1, "getverticalflip": 1, "hi": 1, "cudatensor_float": 1, "dimb": 1, "dimd": 1, "dimx": 1, "dimi": 1, "dimz": 1, "dim": [1, 25, 29, 37], "empti": [1, 12, 13, 16, 25, 26, 40], "type_info": 1, "gettypenam": 1, "isvalid": 1, "nbdim": 1, "op_assign": 1, "reshap": [1, 13, 23, 34, 37, 40], "resiz": [1, 6, 8, 9, 13, 23, 26, 34, 37, 40], "setvalid": 1, "synchronizedbasedtoh": 1, "synchronizedtoh": 1, "synchronizedtohbas": 1, "synchronizehbasedtod": 1, "synchronizehtod": 1, "synchronizehtodbas": 1, "ndarrai": 1, "float32": [1, 14, 30, 40], "fill": [1, 15, 25, 32, 37, 39, 40], "valab": 1, "tensor_doubl": 1, "float64": [1, 14], "cudabasedevicetensor": 1, "getcudatensor": 1, "cudabasetensor": [1, 37], "devicetensor": 1, "hostbas": 1, "arg1": 1, "arg2": 1, "cudatensor_doubl": 1, "simpl": [2, 6, 12, 13, 14, 16, 18, 21, 25, 32, 40, 41], "convolut": [2, 3, 4, 6, 9, 13, 14, 15, 16, 18, 20, 21, 24, 25, 40], "backbon": [2, 40], "link": [2, 8, 12, 29, 37], "cell": [2, 6, 10, 15, 16, 19, 23, 24, 29, 31, 32, 35, 37, 39], "begin": [2, 13, 14, 21, 25, 26, 28, 30, 33, 40], "initialis": [2, 15], "sinc": [2, 8, 13, 16, 21, 28], "custom": [2, 13, 15, 17, 18, 21, 32, 35], "mnist_idx_databas": [2, 12, 21, 40], "databas": [2, 3, 6, 10, 11, 13, 15, 16, 20, 21, 23, 25, 28, 31, 32, 40], "code": [2, 3, 4, 8, 12, 13, 18, 25, 26, 28, 33, 34, 38, 39, 40], "repres": [2, 3, 7, 12, 18, 19, 21, 26, 37, 40], "distortiontransform": [2, 18, 21], "padcroptransform": [2, 21, 23, 40], "But": [2, 21, 32], "stimuliprovid": [2, 3, 13, 15, 21, 22, 23], "two": [2, 5, 6, 13, 15, 16, 18, 19, 21, 23, 29, 37, 38, 39], "wai": [2, 3, 12, 13, 14, 23, 25, 26, 34, 38, 40, 41], "standard": [2, 3, 6, 7, 13, 15, 23, 25, 40], "normal": [2, 5, 6, 9, 13, 14, 18, 26, 29, 31, 33, 40, 41], "especi": [2, 21], "adapt": [2, 13, 15, 21, 40, 41], "more": [2, 3, 8, 12, 13, 15, 16, 17, 18, 20, 21, 24, 25, 26, 32, 34, 36, 38, 40], "divers": 2, "our": [2, 17, 24, 28, 29, 30, 32, 33, 40], "conv1": [2, 6, 8, 15, 18, 21, 33, 39, 40], "convcell_frame_float": 2, "conv2": [2, 6, 8, 21, 32, 33, 40], "fc1": [2, 8, 18, 21, 29, 33, 40], "fccell_frame_float": 2, "150": [2, 6, 20, 40], "fc2": [2, 8, 18, 21, 29, 33, 40], "conv2map": 2, "t_conv2map": 2, "receiv": [2, 15], "previou": [2, 3, 6, 15, 18, 23, 25, 34, 38, 40], "tar": [2, 12, 22], "targetscor": 2, "loop": [2, 4, 5, 14, 28, 32, 33, 40], "epoch": [2, 25, 30, 31, 32, 33, 39, 40], "rang": [2, 8, 11, 14, 18, 19, 21, 26, 30, 32, 33, 38, 39, 40], "nb_epoch": [2, 25, 31, 32, 40], "epoch_s": 2, "welcom": 3, "develop": [3, 8, 17, 20], "primarili": 3, "11": [3, 4, 6, 9, 12, 13, 15, 31, 35, 38, 40, 41], "cuda": [3, 6, 8, 9, 15, 18, 20, 21, 31, 32, 33, 35, 36, 40], "gpu": [3, 6, 8, 9, 17, 18, 20, 21, 22, 35, 36, 37, 40], "intern": [3, 6, 8, 25, 26, 32, 40, 41], "opencv": [3, 13, 20], "structur": [3, 12, 13, 14, 15, 25], "famili": [3, 5, 22, 40], "being": [3, 13, 15, 34], "review": 3, "main": [3, 4, 6, 13, 14, 15, 18, 19], "summar": [3, 13, 23, 40], "figur": [3, 11, 13, 15, 18, 19, 20, 21, 29, 37, 40], "below": [3, 4, 6, 7, 12, 13, 15, 16, 19, 21, 23, 24, 32, 38, 39, 40], "constitut": [3, 12, 13, 16], "build": [3, 8, 12, 15, 20, 26, 32, 36], "block": [3, 6, 11, 13, 35, 40], "graph": [3, 8, 13, 22, 23, 24, 25, 27, 32, 36, 37, 40], "abstract": [3, 25, 26, 36], "doe": [3, 5, 13, 16, 18, 24, 25, 31], "assumpt": 3, "precis": [3, 4, 6, 8, 9, 16, 18, 19, 20, 25, 34, 38, 40], "even": [3, 12, 13, 19, 21, 23, 31, 38, 40], "hierarchi": 3, "shown": [3, 4, 7, 11, 13, 15, 18, 19, 20, 21, 23], "while": [3, 6, 17, 23, 40], "mai": [3, 6, 8, 13, 14, 15, 16, 20, 21, 23, 34, 36, 41], "seem": 3, "bit": [3, 5, 6, 7, 8, 9, 12, 13, 18, 20, 26, 34, 38, 39, 40, 41], "complic": [3, 23], "wa": [3, 6, 13], "realli": 3, "notion": 3, "mathemat": [3, 16], "actual": [3, 13, 16, 20, 24, 38], "regardless": [3, 6, 12, 13, 16, 26], "algorithm": [3, 15, 16, 21, 25, 32, 38, 41], "For": [3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 26, 28, 29, 30, 32, 36, 37, 38, 39, 40], "fccell": 3, "inner": [3, 15], "product": [3, 16, 18], "frame": [3, 11, 13, 14, 25, 29, 32, 36, 40], "spike": [3, 9, 13, 14], "neuromorph": 3, "program": [3, 8, 9, 15, 18, 20], "either": [3, 6, 7, 13, 18, 25, 36], "plain": [3, 18], "openmp": [3, 4, 9, 18], "cpu": [3, 9, 17, 18, 22, 25, 29, 33, 36, 37, 40], "opencl": [3, 9, 18], "ad": [3, 7, 12, 13, 18, 20, 21, 24, 33, 39, 40], "futur": [3, 13, 18], "when": [3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 19, 23, 25, 26, 30, 32, 34, 35, 37, 38, 39, 40], "simplifi": [3, 7, 23], "cell_spik": 3, "cell_frame_cuda": 3, "half": [3, 8, 13, 40], "doubl": [3, 8, 14, 19, 34, 36, 38], "support": [3, 4, 8, 12, 15, 18, 20, 21, 22, 26, 36, 37, 40], "mandatori": [3, 8, 12], "obtain": [3, 6, 10, 12, 13, 17, 18, 21, 24, 38, 40], "same": [3, 6, 12, 13, 15, 16, 18, 20, 21, 23, 24, 25, 26, 30, 33, 37, 38, 40], "direct": [3, 13, 18], "gemm": [3, 23], "fft": [3, 13], "topolog": 3, "inform": [3, 15, 16, 17, 18, 19, 21, 24, 32, 34, 35, 37, 40], "dimens": [3, 8, 13, 15, 23, 25, 26, 33, 37, 40], "among": [3, 18], "inlin": [3, 4], "size_t": [3, 8], "getoutputsdim": 3, "togeth": 3, "thank": [3, 4, 8, 11, 21, 25], "anoth": [3, 13, 15, 21, 28, 34, 38], "entri": [3, 25], "up": [3, 6, 27, 36, 40], "depend": [3, 6, 8, 13, 15, 21, 22, 24, 25, 36, 37, 38, 40], "refer": [3, 4, 5, 8, 10, 15, 16, 17, 21, 24, 25, 33, 34, 36, 37, 38], "pure": 3, "given": [3, 6, 8, 12, 13, 15, 16, 18, 21, 25, 26], "nd": 3, "bi": 3, "differenti": [3, 16], "compris": [3, 32], "backward": [3, 33, 35, 40], "non": [3, 8, 13, 15, 16, 18, 19, 21, 25, 40], "contain": [3, 6, 12, 13, 14, 16, 20, 21, 23, 25, 26, 37, 38], "share": [3, 15, 25, 36, 37, 40], "than": [3, 4, 5, 12, 13, 15, 16, 18, 19, 21, 24, 25, 26, 32, 38, 39, 40], "alreadi": [3, 6, 12, 14, 21, 22, 28, 32], "getter": 3, "filler": [3, 21, 24, 32, 40], "solver": [3, 24, 33, 35, 40], "facil": [3, 11], "particular": 3, "becaus": [3, 9, 16, 21, 22, 31, 37, 40], "Its": [3, 6, 19], "guarante": [3, 40], "continu": [3, 4], "arbitrari": [3, 9, 11, 12, 13, 15, 18, 23], "stride": [3, 4, 12, 13, 15, 16, 18, 21, 25, 40], "reorgan": 3, "appear": [3, 13, 14, 16], "restrict": 3, "assum": [3, 12, 13, 15, 20, 24], "choic": [3, 15, 36], "hold": [3, 38], "copi": [3, 4, 6, 8, 19, 20, 35, 37, 40], "assign": [3, 15, 21, 37], "clone": [3, 20], "explicitli": [3, 13, 16, 25], "part": [3, 6, 13, 15, 21, 23, 25, 29, 37], "known": [3, 8, 12, 20, 21, 23, 26, 32, 40], "convers": [3, 6, 22, 26], "tensor_cast": 3, "down": [3, 18], "zero": [3, 6, 13, 16, 21, 26, 33], "overhead": [3, 18, 37], "memori": [3, 6, 8, 12, 15, 16, 18, 26, 32, 34, 35, 37, 38, 39, 40, 41], "alloc": [3, 4, 6, 8, 18, 23], "lifetim": 3, "made": [3, 12, 18, 26], "tensor_cast_nocopi": 3, "still": [3, 33, 36, 38], "incur": 3, "mobilenet_onnx": [4, 5, 6, 7, 8, 23, 38], "w": [4, 5, 6, 7, 8, 15, 19, 23, 38, 40, 41], "null": [4, 5, 6, 7, 8, 9, 23, 38], "featur": [4, 6, 9, 15, 18, 19, 25, 36, 40, 41], "avail": [4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 19, 20, 21, 22, 25, 26, 32, 36, 37, 38, 39, 40], "post": [4, 6, 7, 10, 13, 14, 15, 21, 23], "awar": [4, 7, 10, 13], "summari": [4, 21, 25, 35], "standalon": [4, 8, 34], "compliant": 4, "No": [4, 15, 23, 34, 36, 40], "except": [4, 12, 16, 33], "often": [4, 15, 16, 21], "disabl": [4, 7, 9, 12, 15, 34], "embed": [4, 5, 15, 17, 18, 19, 23, 24, 30, 32, 35], "bloat": 4, "dynam": [4, 13, 15, 18, 23, 25], "align": [4, 15, 25], "parallel": [4, 25, 40], "hwc": 4, "ohwc": 4, "u": [4, 9, 15, 21, 29, 32, 33, 36, 40], "do": [4, 5, 6, 13, 21, 23, 24, 28, 31, 32, 34, 37, 40], "kernel_width": 4, "nb_channel": [4, 26], "sequenti": [4, 15, 25, 30, 35], "necessari": [4, 5, 6, 8, 12, 21, 23, 26, 40], "mac": [4, 6, 32], "heavili": 4, "most": [4, 8, 13, 15, 16, 18, 21, 22, 25, 38, 40], "better": [4, 5, 6, 15, 18, 21, 38, 41], "easier": 4, "unrol": [4, 5], "come": [4, 6, 15, 18, 24, 34, 40], "cost": [4, 16, 17, 18, 40], "larger": [4, 13, 19], "binari": [4, 5, 6, 9, 12, 13, 15, 16, 26, 30, 36, 39, 40], "forc": [4, 9], "As": [4, 13, 21, 24, 25, 37, 40], "previous": [4, 5, 40], "increas": [4, 5, 12, 21, 39], "faster": [4, 5, 15], "boundari": 4, "fix": [4, 13, 15, 18, 21, 23, 38], "through": [4, 8, 12, 17, 32, 40, 41], "step": [4, 11, 12, 15, 18, 20, 21, 24, 25, 26, 31, 32, 33, 34, 36, 38, 39, 40], "skip": [4, 12], "equal": [4, 7, 13, 14, 15, 16, 18, 21, 23, 26, 34], "batchnorm": [4, 6, 7, 9, 23, 24, 40], "automat": [4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 25, 26, 40], "fuse": [4, 5, 6, 7, 9, 12, 25, 34, 38, 40], "preced": [4, 7, 13, 15, 16, 25], "conv": [4, 6, 7, 9, 14, 16, 18, 21, 23, 24, 29, 31, 32, 34, 39, 40], "fc": [4, 6, 7, 9, 14, 18, 21, 24, 29, 31, 32, 34, 39, 40], "pad": [4, 6, 7, 9, 13, 16, 18, 21, 23, 26, 34, 40], "remov": [4, 6, 7, 13, 21, 25, 31, 35, 37, 40], "static": [4, 15, 23, 24, 25, 39], "buffer": 4, "concaten": [4, 25, 29], "wrap": [4, 25, 30, 33, 35], "re": [4, 6, 13, 21, 25], "place": [4, 6, 15, 37], "mobilenet": [4, 22, 23, 24], "v2": 4, "largest": 4, "overlap": [4, 13, 15, 16, 21, 40], "optimizebuffermemori": 4, "next": [4, 14, 16, 18, 19, 21, 24, 28, 33, 40], "extra": [4, 6, 7, 8, 12, 26, 36], "command": [4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23, 36, 40, 41], "includeinputinbuff": 4, "try": [4, 23, 34, 36, 40], "optimizenobranchconcat": 4, "memoryalign": 4, "byte": [4, 6], "memorymanagerstrategi": 4, "optimizemaxlifetimemaxsizefirst": 4, "strategi": [4, 16, 40], "weights_valid": [4, 5, 7], "nbbit": [4, 5, 6, 7, 8, 9, 38], "calib": [4, 5, 6, 7, 8, 9, 38], "db": [4, 5, 6, 7, 9, 26, 32], "100": [4, 5, 7, 12, 15, 19, 21, 24, 25, 26, 32, 34, 40], "export_cpp_int8": 4, "readi": [4, 5, 6, 8, 18, 22, 23, 33, 40], "makefil": [4, 5, 8, 18], "softmax": [4, 6, 8, 9, 16, 18, 21, 23, 24, 30, 31, 32, 34, 40], "low": [4, 8, 13, 21, 25, 40, 41], "integ": [4, 5, 6, 7, 9, 13, 18, 26, 34, 40], "cpp_stm32": 5, "optim": [5, 6, 8, 13, 18, 23, 25, 33, 34, 40, 41], "cortex": [5, 20], "m4": 5, "m7": 5, "simd": 5, "smlad": 5, "intrins": [5, 15], "sign": [5, 13, 14, 26, 32, 38, 41], "accumul": [5, 6, 21, 32, 40], "extend": [5, 12, 13, 21, 41], "xtb16": 5, "pragma": 5, "gcc": [5, 8, 20], "nb_iter": 5, "alwai": [5, 12, 13, 16, 21, 23, 36], "expect": [5, 6, 13, 22, 23], "manual": [5, 6, 17, 18, 25], "further": [5, 21, 24], "arm": [5, 20], "prefer": 5, "ssat": 5, "usat": 5, "clamp": [5, 15, 21, 25, 29, 31], "naiv": 5, "export_cpp_stm32_int8": 5, "cross": [5, 13, 15, 16, 34], "gnu": [5, 20, 36], "toolchain": 5, "eabi": 5, "elf": 5, "bin": [5, 6, 8, 9, 11, 12, 20, 36], "n2d2_stm32": 5, "flash": 5, "board": 5, "openocd": 5, "usr": [5, 9, 20], "stm32h7x3i_ev": 5, "cfg": 5, "stm32h7x3i": 5, "evalu": [5, 6, 8, 10, 12, 20, 21, 30, 40], "These": [5, 8, 13, 16, 19, 32, 40], "ip": [6, 10, 13, 18, 19], "upon": [6, 13, 15, 19, 25], "request": [6, 8, 12, 13, 19, 39], "dneuro_v2": 6, "rtl": [6, 40], "synthetiz": 6, "dataflow": [6, 17], "architectur": [6, 9, 20, 38, 40, 41], "cnn": [6, 12, 15, 21], "fine": 6, "grain": [6, 38], "control": [6, 8, 13], "dsp": [6, 17, 18, 40], "resourc": [6, 40], "maxim": 6, "topologi": [6, 8, 18, 40], "minim": [6, 8, 38], "latenc": [6, 8, 17], "flow": [6, 13, 23], "few": [6, 16, 18, 41], "potenti": [6, 8], "ddr": 6, "veri": [6, 8, 13, 21, 23], "high": [6, 9, 18, 20, 34, 40], "per": [6, 8, 9, 12, 15, 16, 18, 21, 25, 26, 28, 32, 34, 38, 40], "cycl": [6, 18], "90": [6, 21, 40], "typic": [6, 13, 16, 18, 19, 21, 22, 40], "special": [6, 14, 16], "bloc": 6, "chain": [6, 25], "form": [6, 12, 17, 26], "full": [6, 7, 8, 9, 11, 13, 15, 18, 19, 21, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 40], "extrem": [6, 20], "behav": 6, "pipelin": [6, 13], "fifo": 6, "level": [6, 8, 9, 12, 13, 18, 25, 26, 29, 36, 40, 41], "entiti": 6, "describ": [6, 8, 15, 18, 19, 21, 23, 25, 38, 40], "640": 6, "480": [6, 21], "80": [6, 15, 40], "constant": [6, 13, 15, 21, 23, 40], "g_batch_siz": 6, "posit": [6, 13, 14, 15, 16, 19, 21, 25], "g_fifo_depth": 6, "g_data_length": 6, "g_acc_s_length": 6, "g_nb_outputs_inst_n_1_env": 6, "g_nb_outputs_merg_n_1_env": 6, "port": [6, 18], "clk": 6, "std_logic": 6, "rstn": 6, "i_data": 6, "std_logic_vector": 6, "downto": 6, "i_valid_data": 6, "o_en": 6, "o_data": 6, "o_valid_data": 6, "i_en": 6, "end": [6, 8, 12, 13, 14, 15, 21, 25, 32, 37, 39, 40], "comment": [6, 8, 33], "n": [6, 15, 16, 21, 25, 31, 32, 38, 40, 41], "innerproduct": 6, "rightarrow": 6, "transform": [6, 11, 18, 21, 23, 28, 31, 32, 33, 34, 36, 40], "merg": [6, 13, 16, 40], "concat": [6, 23], "implicit": [6, 7, 13, 25], "deconv": [6, 9, 34, 40], "elemwis": [6, 9, 40], "eltwis": 6, "rbf": [6, 18], "lrn": [6, 9, 23, 40], "maxout": 6, "sortlabel": 6, "unpool": [6, 16, 40], "upscal": [6, 16], "sort": [6, 19], "linear": [6, 13, 15, 18, 21, 24, 29, 31, 32, 33, 40], "arithmet": [6, 40], "logist": [6, 16, 25], "approxim": [6, 15, 18], "relu": [6, 15, 21, 23, 25, 30, 32, 33, 40], "rectifi": [6, 21, 29, 31, 32, 39, 40, 41], "brelu": 6, "softplu": [6, 23], "too": [6, 20], "pre": [6, 8, 12, 13, 14, 21, 23, 24, 26, 32, 36, 40], "tb": 6, "network_tb": 6, "vhd": 6, "testbench": [6, 18], "clock": [6, 18], "frequenc": [6, 41], "100mhz": 6, "estimationfrequ": 6, "out_fil": 6, "txt": [6, 12], "simu": 6, "vsimtool": 6, "modelsim": 6, "cd": [6, 8, 9, 12, 20, 36], "vsim": 6, "accur": [6, 18, 21, 41], "By": [6, 7, 20, 21, 26, 28, 37, 39], "ones": [6, 13, 15, 24], "purpos": [6, 13, 36, 40], "acc_nb_bit": 6, "cxxflag": 6, "dacc_nb_bit": 6, "dneuro_v2_emul": 6, "individu": [6, 13], "good": [6, 36], "bad": 6, "classif": [6, 8, 13, 16, 19, 21, 25, 26, 32, 41], "env00": 6, "ppm": 6, "feed": [6, 13, 18, 21, 32], "layer_name_output": 6, "tensor": [6, 10, 15, 25, 26, 28, 29, 32, 36, 39], "vivado": [6, 9, 18], "quartu": 6, "pythontool": 6, "vivadogener": 6, "vivadotool": 6, "project_export_dneuro": 6, "organ": [6, 12, 25, 26], "setup": [6, 36], "properli": [6, 24, 36], "conv_common": 6, "conv_tn_oy_chy_k1_sy_p1": 6, "conv_tn_oy_chy_k1_sy_pn": 6, "nbdsp": 6, "maximum": [6, 8, 13, 15, 16, 18, 19, 21, 25, 26, 34], "nbmemorybyt": 6, "hdl": 6, "200": [6, 32], "fp": [6, 38], "accumulationnbbit": 6, "data_length": 6, "outputmaptorgb": 6, "outputmaptorgbbackgroundclass": 6, "background": [6, 13, 16, 19, 21, 26], "overlai": 6, "color": [6, 12, 13, 18, 20, 21, 26], "transpar": [6, 40], "outputmaptorgbcolormask": 6, "outputmaptorgbbinarythresholdupp": 6, "upper": 6, "outputmaptorgbbinarythresholdlow": 6, "lower": [6, 13, 15, 25], "debug": [6, 13], "rtltype": 6, "modul": [6, 10, 12, 17, 21, 26, 33, 35, 39, 40], "nbchannelsinstanti": 6, "instanti": [6, 13, 21, 40], "nboutputsinstanti": 6, "kernelheightinstanti": 6, "kernelwidthinstanti": 6, "bullet": 6, "legend": 6, "ok": 6, "224x224": 6, "resolut": [6, 40], "ultraram": 6, "xilinx": [6, 9, 18], "m20k": 6, "insuffici": 6, "equival": [6, 14, 20, 21, 37], "column": [6, 12, 13, 15, 16, 20, 21, 32, 40], "altern": 6, "small": [6, 8], "accuraci": [6, 19, 25, 30, 31, 35, 38, 40], "arria": 6, "term": [6, 15, 18, 20, 21, 40, 41], "gx": 6, "sx": [6, 16], "160": [6, 15], "220": 6, "270": 6, "320": 6, "570": 6, "660": 6, "900": 6, "1150": 6, "mb": [6, 12, 20, 40], "12": [6, 9, 12, 13, 15, 18, 25, 41], "87": 6, "25": [6, 12, 25, 26, 29, 31, 40, 41], "156": [6, 40], "830": 6, "985": 6, "368": 6, "523": 6, "688": 6, "518": 6, "mult": 6, "312": 6, "382": 6, "970": 6, "736": 6, "046": 6, "376": 6, "036": 6, "mobilenet_v1_0": 6, "75": [6, 9, 15, 21, 40], "mobilenet_v1_1": [6, 22, 23, 24], "squeezenet_v1": 6, "mobilenet_v2_0": 6, "mobilenet_v2_1": 6, "alexnet": 6, "vgg": 6, "googlenet": 6, "34": 6, "stratix": 6, "400": 6, "650": 6, "850": 6, "1100": 6, "1650": 6, "2100": 6, "2500": 6, "2800": 6, "13": [6, 8, 12, 31, 41], "14": [6, 8, 20, 28], "15": [6, 12, 13, 18, 25, 26, 31, 40, 41], "28": [6, 11, 25, 28, 29, 30, 31], "648": [6, 40], "152": 6, "016": [6, 41], "592": 6, "145": 6, "744": 6, "011": 6, "760": 6, "296": 6, "304": 6, "032": 6, "290": [6, 12], "488": 6, "022": 6, "520": 6, "zynq": 6, "ultrascal": 6, "zu2": 6, "zu3": 6, "zu4": 6, "zu5": 6, "zu6": 6, "zu7": 6, "zu9": 6, "zu11": 6, "zu15": 6, "zu17": 6, "zu19": 6, "eg": 6, "bram": 6, "95": [6, 38, 40], "56": 6, "01": [6, 15, 21, 24, 25, 29, 31, 32, 40], "63": [6, 9, 40], "27": [6, 9], "68": [6, 38, 40], "81": 6, "93": [6, 9, 40], "58": [6, 38, 40], "ram": [6, 20], "74": 6, "44": [6, 40], "08": [6, 8, 11, 25], "82": [6, 38, 40], "240": 6, "360": [6, 13, 21, 26], "728": 6, "248": 6, "973": 6, "928": 6, "528": 6, "590": 6, "968": 6, "720": 6, "456": 6, "496": 6, "946": 6, "040": 6, "856": 6, "056": 6, "180": 6, "936": 6, "kintex": 6, "ku3p": 6, "ku5p": 6, "ku9p": 6, "ku11p": 6, "ku13p": 6, "ku15p": 6, "825": 6, "vga": 6, "720p": 6, "640x480": 6, "1280x720": 6, "80x60": 6, "160x90": 6, "nativ": [6, 18, 22, 40], "int8": [6, 8, 34], "nn": [6, 32, 33, 35, 40], "complex": [6, 13, 38, 40], "sim": 6, "1gmac": 6, "5gmac": 6, "100k": 6, "speed": [6, 25], "120": [6, 21, 29, 33, 40], "transport": 6, "asset": 6, "aircraft": 6, "larg": [6, 18, 19, 32, 41], "vehicl": 6, "ship": [6, 33], "ground": [6, 15], "harbor": 6, "sport": 6, "field": [6, 23], "swim": 6, "storag": [6, 25], "tank": 6, "17mb": 6, "mem": 6, "1mb": 6, "mhz": 6, "gmac": 6, "th": [6, 21, 25, 32], "166gmac": 6, "332gmac": 6, "real": [6, 13, 41], "150gmac": 6, "300gmac": 6, "effici": [6, 21, 25, 40, 41], "web": 6, "freeli": [6, 22], "navig": 6, "characterist": 6, "combin": [6, 12, 13, 19], "openlay": 6, "visual": [6, 11, 20, 28, 32, 41], "api": [6, 8, 25, 27, 29, 34, 40], "ign": [6, 41], "f": [6, 9, 13, 21, 25, 29, 33, 41], "g\u00e9oportail": 6, "microsoft": [6, 19], "bing": 6, "server": [6, 20, 40], "displai": [6, 8, 16, 19, 21, 25, 32], "right": [6, 13, 15, 16, 19, 20, 25, 38, 40], "view": [6, 25, 32, 40], "tablet": 6, "send": [6, 37], "via": [6, 25, 35, 36, 41], "hdmi": 6, "tensorrt": [6, 10, 18], "mobilenet_demo": 6, "cpp_tensorrt": [6, 8, 9, 34], "export_cpp_tensorrt_float32": [6, 8], "wrapper_python": [6, 8], "cp": 6, "n2d2_tensorrt_infer": 6, "generate_model": 6, "n2d2_tensorrt_model": 6, "dat": [6, 16, 21, 26], "http": [6, 8, 12, 20, 22, 23, 26, 27, 30, 32, 33, 36, 40, 41], "127": [6, 13, 23], "8888": 6, "weights_norm": 6, "mobilenet_demo_dneuro": 6, "reload": [6, 34, 38], "export_dneuro_v2_int8": 6, "capabl": [6, 8, 18, 20, 40], "nvidia": [6, 8, 9, 18, 20], "calibr": [6, 8, 9, 12, 31, 34, 38], "select": [6, 8, 9, 13, 20, 21, 25, 28], "absolut": [6, 13, 15], "avoid": [6, 13, 21, 32, 38, 40], "sec": [6, 15, 21, 40], "dneuroparam": 6, "dataset": [6, 8, 9, 11, 13, 14, 16, 18, 21, 26, 28, 30, 32, 33, 34, 36, 38, 39, 40, 41], "conv1_3x3_dw": 6, "conv1_1x1": 6, "conv2_3x3_dw": 6, "conv2_1x1": 6, "conv3_3x3_dw": 6, "conv3_1x1": 6, "conv4_3x3_dw": 6, "conv4_1x1": 6, "conv5_3x3_dw": 6, "conv5_1x1": 6, "conv6_3x3_dw": 6, "conv6_1x1": 6, "conv7_1_3x3_dw": 6, "conv7_1_1x1": 6, "conv7_2_3x3_dw": 6, "conv7_2_1x1": 6, "conv7_3_3x3_dw": 6, "conv9_1x1": 6, "5529600": 6, "affect": [6, 13, 21, 36], "921600": 6, "1152": 6, "calcul": [6, 23], "1536": 6, "resize_nearest_neighbour": 6, "855187968": 6, "794": 6, "72": [6, 40], "kib": 6, "937": 6, "1012": 6, "22": 6, "1953": 6, "162": 6, "76": 6, "slowest": 6, "appfacedetect": 6, "imdb": [6, 21], "wiki": [6, 21], "imdbwiki": [6, 21], "uncom": 6, "abl": [6, 8, 12, 13, 20, 26, 29], "fc3": [6, 21, 33], "gender": 6, "branch": [6, 38], "look": [6, 9, 11, 13, 21, 24, 26, 34, 40], "outputwidth": [6, 15], "outputheight": [6, 15], "configsect": [6, 13, 15, 16, 21, 24, 25, 32, 39, 40], "config": [6, 13, 14, 15, 16, 21, 24, 25, 39, 40], "aligncorn": [6, 15], "imdbwiki_target_fac": [6, 21], "nodisplaylabel": [6, 16, 21], "common": [6, 8, 12, 13, 15, 16, 21, 24, 26, 39, 40], "000": [6, 12, 20, 21, 32], "constraint": [6, 40], "614400": 6, "256": [6, 12, 20, 23, 40, 41], "to_rgb": 6, "value_to_rgb": 6, "10102864576": 6, "404": 6, "30": [6, 9, 21, 40], "1024": [6, 12], "1428": 6, "1000": [6, 15, 19, 25, 38, 40], "17": [6, 12, 21, 31, 41], "beforehand": 7, "qat": [7, 25, 34, 39, 40], "implicitcast": 7, "cast": [7, 23], "insert": [7, 13, 14, 15, 21, 22, 23, 25], "fakequant": 7, "fake": [7, 38, 40], "notabl": 7, "convinteg": 7, "matmulinteg": 7, "rescal": [7, 13, 16, 18, 21, 31, 32, 34, 40], "strict": 7, "adher": 7, "enforc": 7, "explicit": [7, 14], "represent": [7, 13, 25, 29, 37, 38, 40, 41], "remain": [7, 12, 13, 15, 26], "almost": [7, 21], "ident": [7, 13, 15, 21, 39], "due": [7, 34, 35, 36], "numer": [7, 8, 13], "cannot": [7, 8, 13, 16, 21, 35, 37], "exactli": [7, 40], "impli": [7, 15], "export_onnx_int8": 7, "reason": [8, 16, 23], "exploit": [8, 40], "o": [8, 13, 15, 19], "under": [8, 12, 40], "cudnn": [8, 9, 15, 18, 20], "cubla": [8, 20], "ensur": [8, 13, 21, 40], "correct": [8, 13, 16], "archiv": [8, 12, 20], "page": [8, 10, 39, 41], "doc": 8, "com": [8, 20, 22, 27, 36, 40], "deeplearn": 8, "html": [8, 33], "version": [8, 15, 18, 20, 21, 33, 35, 37, 40], "notic": [8, 12], "been": [8, 26, 31, 36, 40], "strong": 8, "limit": [8, 13, 15, 21, 40, 41], "wide": [8, 40], "decod": 8, "segment": [8, 12, 13, 19, 32], "detector": [8, 15], "task": [8, 13, 40], "inferior": 8, "plugin": 8, "find": [8, 13, 21, 23, 27, 28, 30, 31, 32, 33, 34, 36, 38, 40], "about": [8, 10, 34, 37], "how": [8, 12, 16, 18, 21, 25, 26, 27, 28, 29, 31, 34, 35, 38, 40], "guid": 8, "add_custom_lay": 8, "genstimulicalib": 8, "bewar": [8, 38], "take": [8, 13, 15, 16, 23, 24, 25, 26, 32, 38, 40], "lot": [8, 13, 40], "disk": [8, 20], "identifi": [8, 40], "bottleneck": 8, "assess": 8, "acceler": [8, 17, 18, 20, 21, 41], "factor": [8, 13, 15, 16, 17, 25, 39], "eventu": 8, "batches_calib": 8, "iint8entropycalibrator2": 8, "procedur": [8, 40], "optimizing_int8_c": 8, "n2d2_tensorrt_test": 8, "launch": [8, 19], "fp16": 8, "relat": [8, 9, 24, 39], "devic": [8, 9, 12, 15, 25, 26, 29, 31, 33, 36, 37], "env0000": [8, 9], "pgm": [8, 9, 18], "prof": 8, "wise": [8, 12, 13, 15, 21, 25, 26], "profil": [8, 9], "mechan": [8, 13], "decreas": [8, 9], "builder": 8, "best": [8, 21, 40], "tactic": 8, "long": [8, 15, 20, 41], "reus": [8, 34, 38], "cach": [8, 13, 20, 21, 25, 26], "entropi": [8, 15, 16], "report": [8, 11, 20, 21, 25, 34, 38, 41], "At": [8, 20, 25], "19": [8, 12, 26], "conv1_activ": 8, "0219467": 8, "m": [8, 12, 13, 15, 16, 21, 22, 38, 41], "05": [8, 15, 21, 25, 29, 31, 39, 40], "pool1": [8, 18, 21, 40], "00675573": 8, "conv2_activ": 8, "0159089": 8, "pool2": [8, 21, 40], "00616047": 8, "conv3": [8, 21, 40], "conv3_activ": 8, "0159713": 8, "fc1_activ": 8, "0222242": 8, "0149013": 8, "0100633": 8, "113932": 8, "impact": [8, 21, 40], "variou": [8, 18, 21, 32], "wrapper": [8, 25, 35, 37], "libboost": 8, "librabri": 8, "wrapper_cpp": 8, "libn2d2_tensorrt_infer": 8, "python3": [8, 22, 36], "6m": 8, "detail": [8, 21, 29, 36], "argsnam": 8, "n2d2_network": 8, "dnn": [8, 14, 17, 18, 21, 40], "setmaxbatchs": 8, "usag": [8, 15, 21], "setdeviceid": 8, "setprecis": 8, "usedla": 8, "dla": 8, "core": [8, 17, 20, 36, 40], "setmaxworkspaces": 8, "int64_t": 8, "maxworkspaces": 8, "1073741824": 8, "workspac": 8, "influenc": [8, 15], "optimis": 8, "setdetectorthreshold": 8, "uint": 8, "lengththreshold": 8, "confid": [8, 16], "bypass": 8, "setdetectornm": 8, "thresholdnm": 8, "maxima": 8, "suppress": 8, "setinputengin": 8, "enginepath": 8, "serial": 8, "plan": [8, 23], "portabl": 8, "across": [8, 34], "platform": [8, 18, 22, 23], "exact": 8, "were": [8, 37], "built": [8, 18, 21, 26], "setoutputengin": 8, "where": [8, 11, 12, 13, 16, 17, 18, 19, 21, 25, 26, 32, 39, 40], "setcalibcach": 8, "calibpath": 8, "setcalibfold": 8, "folderpath": 8, "setparampath": 8, "parmpath": 8, "engin": 8, "context": [8, 16, 19, 23], "setprofil": 8, "getinputdimx": 8, "getinputdimi": 8, "getinputdimz": 8, "z": [8, 15, 41], "getoutputnbtarget": 8, "getoutputdimx": 8, "outputnumb": 8, "getoutputdimi": 8, "getoutputdimz": 8, "getoutputtarget": 8, "syncex": 8, "inputdata": 8, "synchron": [8, 9], "log_output": [8, 25], "cpyoutput": 8, "outputid": 8, "usegpu": 8, "clip": [8, 13, 15, 18, 23, 25, 29, 31, 34, 40], "tailor": [9, 18, 40], "cpp_cuda": 9, "sc_spike": 9, "systemc": 9, "64": [9, 14, 15, 18, 20, 30, 34, 40], "runtim": [9, 16, 25], "kl": [9, 38], "determin": [9, 13, 21, 25, 38], "truncat": [9, 13, 15], "unlimit": [9, 34], "export_c_int8": 9, "n2d2_test": 9, "1652": 9, "1762": 9, "avg": 9, "757094": 9, "1653": 9, "1763": 9, "760635": 9, "1654": 9, "1764": 9, "764172": 9, "187": 9, "548186": 9, "thread": 9, "329": 9, "97": 9, "48": [9, 15, 21, 32, 40], "692": 9, "98": [9, 21, 38, 40], "86": [9, 41], "29": [9, 13, 18, 28, 32], "609": 9, "57": [9, 28, 38, 40], "83": [9, 38], "96": [9, 15], "preprocessor": 9, "generate_kbin": 9, "cl": [9, 15], "load_kbin": 9, "sdk": 9, "mali": 9, "mali_opencl_sdk_vxxx": 9, "intel": 9, "opt": 9, "amd": 9, "amdappsdk": 9, "xxx": [9, 13], "export_cpp_opencl_float32": 9, "n2d2_opencl_test": 9, "arch32": 9, "export_cpp_cudnn_float32": 9, "n2d2_cudnn_test": 9, "export_c_hls_int8": 9, "synthesi": [9, 18], "vivado_hl": 9, "run_hl": 9, "tcl": 9, "fmp": [9, 40], "objectdet": [9, 40], "rp": [9, 40], "mention": 9, "tutori": [10, 28, 30, 33], "prune": 10, "stm32": 10, "dneuro": [10, 17], "legaci": 10, "adversari": 10, "interoper": [10, 27, 34, 36], "search": [10, 40], "enabl": [11, 12, 13, 15, 16, 18, 21, 25, 26, 32, 35, 36, 40], "env": [11, 13, 18, 21, 36, 40], "stimulidata": [11, 13], "applyto": [11, 12, 13, 18, 21, 40], "logsizerang": 11, "logvaluerang": 11, "60000": 11, "255": [11, 13, 16, 28, 30, 39, 40], "3184": 11, "5675": 11, "rangeaffinetransform": [11, 23, 40], "_globalvalu": 11, "unknown": [11, 21], "analys": 11, "extern": [11, 18, 23], "manipul": [11, 25, 26, 27], "424074": 11, "82154": 11, "64796e": 11, "check": [11, 13, 15, 16, 20, 25, 26, 36, 40], "fig": [11, 15, 18, 20, 21, 40], "frame0mean1stddev": 11, "affinetransform": 11, "meandata": 11, "_meandata": 11, "png": [11, 13, 18, 19, 20, 25, 28, 33, 40], "becom": [11, 12, 15, 23, 26, 40], "139": 11, "554": 11, "254": 11, "979": 11, "45583e": 11, "1288": [11, 41], "frameminusmean": 11, "keep": [11, 13, 16, 19, 21, 26, 38], "mind": 11, "annot": [12, 13, 16, 19, 21, 25, 26], "commun": [12, 26], "cifar10": [12, 33], "That": [12, 26, 40], "defaultlabel": [12, 13, 16, 21], "composit": [12, 13, 40], "area": [12, 13, 15, 18, 19, 25], "outsid": [12, 13, 21], "roismargin": 12, "margin": [12, 13, 41], "around": [12, 13, 21, 35], "randompartit": [12, 23, 40], "partit": [12, 18, 25, 26, 28], "otherwis": [12, 13, 16, 22, 25, 34], "datafilelabel": 12, "targetdatapath": 12, "conjunct": [12, 13, 40], "dataastarget": [12, 16], "multichannelmatch": 12, "multichannelreplac": 12, "said": 12, "labelid": 12, "loadstimuluslabelsdata": 12, "fetch": 12, "disjoint": [12, 15], "interpret": [12, 13, 23, 36], "seri": 12, "yet": [12, 15, 40], "convent": [12, 24, 37], "match": [12, 13, 15, 16, 19, 20, 21, 36], "Then": [12, 15, 20, 26, 37, 40], "second": [12, 13, 15, 16, 18, 21, 23, 25, 26, 28, 29, 40], "dir_databas": [12, 13, 26], "express": [12, 15, 40, 41], "anyth": 12, "_0": 12, "extens": [12, 13, 26], "replac": [12, 13, 14, 15, 21, 40], "what": [12, 13, 25, 31], "_1": 12, "1_1": 12, "1_0": 12, "note": [12, 13, 15, 20, 21, 32], "regexp": 12, "pattern": [12, 15, 21, 41], "miss": [12, 13, 19], "messag": [12, 13], "issu": [12, 21, 27, 34], "geometr": 12, "readlabel": 12, "lbbh98": [12, 26, 41], "fraction": [12, 15, 21, 26, 38, 41], "digit": [12, 21], "sssi12": [12, 41], "39": 12, "209": [12, 40], "630": 12, "gtsrb_dir_databas": 12, "hand": [12, 18, 21, 26], "suppos": [12, 13, 26], "gst": [12, 26], "airplan": [12, 26], "800": [12, 26], "car_sid": [12, 26], "123": [12, 26, 41], "face": [12, 26, 41], "435": [12, 26], "motorbik": [12, 26], "798": [12, 26], "instanci": [12, 14, 21, 26], "40": [12, 13, 32, 38, 40], "smallest": [12, 13], "categori": [12, 13, 26, 41], "49": [12, 26], "4x123": 12, "2x123": 12, "subdirectori": [12, 26], "equi": [12, 26], "abov": [12, 13, 16, 21, 23, 26, 38], "5ex": [12, 26], "726": [12, 26], "361": [12, 26], "724": [12, 26], "1860": [12, 26], "perlabelpartit": 12, "loadinmemori": 12, "equivlabelpartit": [12, 13], "consid": [12, 13, 15, 16, 19, 25, 26, 27, 37, 40], "loadmor": 12, "roifil": 12, "fewest": [12, 26], "gst_test": 12, "releas": [12, 20], "googl": [12, 23, 24], "warden18": [12, 41], "speech_commands_v0": 12, "wav": 12, "_background_noise_": 12, "csv_databas": 12, "driver": [12, 13, 16, 21, 26, 28, 32, 40], "labelcolumn": 12, "nbheaderlin": 12, "header": [12, 20], "electr": 12, "grid": [12, 13], "stabil": 12, "ic": 12, "uci": 12, "edu": 12, "ml": 12, "data_for_uci_nam": 12, "tau1": 12, "tau2": 12, "tau3": 12, "tau4": 12, "p1": [12, 14], "p2": [12, 14, 40], "p3": 12, "p4": 12, "g1": 12, "g2": 12, "g3": 12, "g4": 12, "stab": 12, "stabf": 12, "95906002455997": 12, "07988520422811": 12, "38102539191882": 12, "78075443222607": 12, "76308477206316": 12, "782603630987543": 12, "25739482958732": 12, "7230863114883": 12, "650456460887227": 12, "859578105752345": 12, "887444920638513": 12, "958033987602737": 12, "0553474891727752": 12, "unstabl": 12, "3040972346785": 12, "90252411201167": 12, "04754072762177": 12, "36935735529605": 12, "06781210427845": 12, "94005842705193": 12, "87274168559721": 12, "25501199162931": 12, "41344056837935": 12, "862414076352903": 12, "562139050527675": 12, "781759910653126": 12, "00595746432603695": 12, "stabl": [12, 36], "97170690932022": 12, "84842842134833": 12, "04647874898866": 12, "21451813833956": 12, "40515818001095": 12, "20745559234302": 12, "27721014673295": 12, "92049244093498": 12, "163041039311334": 12, "766688656526962": 12, "839444015400588": 12, "109853244952427": 12, "00347087904838871": 12, "716414776295121": 12, "66959964406565": 12, "48664083058949": 12, "34056298396795": 12, "96379106326633": 12, "02747330413905": 12, "9389441526466": 12, "997373606480681": 12, "446208906537321": 12, "976744082924302": 12, "929380522872661": 12, "36271777426931": 12, "028870543444887": 12, "13411155161342": 12, "60877161603408": 12, "94375930178099": 12, "85757326996638": 12, "52581081652096": 12, "12553095451115": 12, "84597485447561": 12, "554305007534195": 12, "797109525792467": 12, "455449947148291": 12, "656946658473716": 12, "820923486481631": 12, "0498603734837059": 12, "There": [12, 13, 14, 15, 19, 23, 25, 36, 38], "last": [12, 13, 14, 15, 16, 24, 25, 26, 36, 40], "split": [12, 30], "actitrack": 12, "wisdm": [12, 41], "lab": 12, "lwx": [12, 41], "unlabel": 12, "wisdm_at_v2": 12, "kri09": [12, 26, 41], "cifar": [12, 26, 40], "cifar100": [12, 40], "usecoars": 12, "coars": [12, 26], "cohn": [12, 41], "kanad": [12, 41], "ck": [12, 41], "recognit": [12, 18, 40, 41], "luceycohnkanad": [12, 41], "caltech": [12, 41], "101": [12, 41], "fffp04": [12, 41], "background_googl": 12, "101_objectcategori": 12, "ghp07": [12, 41], "256_objectcategori": 12, "pedestrian": [12, 41], "dollarwsp09": [12, 41], "seq": 12, "video": 12, "dbextract": 12, "matlab": 12, "download": [12, 26, 33, 40], "websit": [12, 20], "caltechpedestrian": 12, "usa": [12, 41], "setxx": 12, "piotr_toolbox": 12, "toolbox": 12, "piotr": [12, 41], "getenv": 12, "addpath": 12, "genpath": 12, "dbinfo": 12, "person": 12, "peopl": 12, "bound": [12, 13, 16, 21, 25], "box": [12, 13, 15, 16, 21], "ambigu": 12, "cityscap": [12, 41], "cor": [12, 26, 41], "inctrainextra": 12, "trainextra": [12, 26], "998": [12, 26], "singleinstancelabel": 12, "group": [12, 13, 14, 15, 25, 26], "instanc": [12, 15, 26], "cargroup": [12, 26], "car": [12, 26, 32, 33], "leftimg8bit": 12, "cityscapes_dataset": 12, "deduc": 12, "libjsoncpp": [12, 26], "packag": [12, 20, 26, 40], "json": [12, 13, 25, 26], "ubuntu": 12, "sudo": 12, "apt": [12, 20], "daimler": 12, "monocular": 12, "detect": [12, 16, 19, 41], "benchmark": [12, 18, 25, 26, 32, 41], "dota": [12, 41], "xbd": [12, 41], "fddb": [12, 41], "jlm10": [12, 41], "decompress": 12, "originalp": 12, "gz": 12, "fold": 12, "tgz": [12, 22], "gtsdb": 12, "hss": [12, 41], "fullijcnn2013": 12, "ilsvrc2012": [12, 40], "rd": [12, 26, 41], "synset": 12, "kitti": 12, "autonom": 12, "drive": 12, "percept": 12, "util": [12, 18, 30, 33, 40], "licens": [12, 17], "condit": [12, 13], "email": 12, "registr": 12, "www": [12, 20], "cvlib": 12, "eval_track": 12, "php": 12, "gb": [12, 20], "trainl": 12, "track": 12, "road": 12, "289": 12, "eval_road": 12, "kit": 12, "7481": 12, "7518": 12, "80256": 12, "eval_object": 12, "obj_benchmark": 12, "lef": 12, "kitti_object": 12, "liti": 12, "rouen": 12, "audio": [12, 41], "scene": [12, 18, 41], "rg14": [12, 41], "data_rouen": 12, "attribut": [12, 16, 23, 25], "effect": [12, 13, 16, 21, 32, 40], "2048": 12, "stridex": [12, 13, 15], "stridei": [12, 13, 15], "randomshuffl": 12, "randomli": [12, 13, 26, 39], "shuffl": [12, 15, 26, 33], "implicitli": [13, 16], "applic": [13, 14, 18, 19, 32, 40], "channeltransform": 13, "cachepath": 13, "accept": 13, "dedic": [13, 17, 18, 40], "event": [13, 21], "stimulustyp": [13, 21], "singleburst": 13, "period": [13, 15, 21], "jitteredperiod": [13, 21], "poissonian": 13, "discardedlatestimuli": 13, "never": 13, "periodmeanmin": [13, 21], "timem": 13, "minimum": [13, 15, 16, 18, 21, 25], "overlin": 13, "t_": [13, 15], "min": [13, 15, 21, 23, 25, 40], "tempor": 13, "signific": 13, "periodmeanmax": [13, 21], "least": [13, 18, 20, 40], "reach": [13, 21, 39, 40], "periodrelstddev": [13, 21], "rel": [13, 15, 32], "deviat": [13, 15, 25], "periodmin": [13, 21], "interv": [13, 15], "problem": [13, 21, 32, 36, 40], "datasignedmap": 13, "bmp": 13, "jpeg": [13, 18], "batch_siz": [13, 23, 25, 26, 28, 30, 31, 32, 33, 35, 40], "unless": 13, "afterward": 13, "rangeaffin": [13, 40], "three": [13, 25], "deal": [13, 32], "patch": 13, "bigger": 13, "cover": 13, "over": [13, 15, 16, 19, 21, 25, 33, 34, 40], "achiev": [13, 21, 24, 35, 40], "ontheflytransform": [13, 18, 21, 40], "randomoffsetx": 13, "randomoffseti": 13, "allowpad": 13, "regularli": 13, "slide": 13, "bottom": [13, 15, 25], "intend": [13, 16], "mark": 13, "count": [13, 19], "twice": 13, "mirror": [13, 21, 26], "introduc": [13, 18], "illustr": [13, 16, 19], "work": [13, 18, 19, 21, 25, 35, 36, 37, 39], "principl": 13, "database_object": 13, "sp_object": 13, "whether": [13, 15], "mix": [13, 24, 40], "typemix": 13, "densiti": 13, "densityrang": 13, "horizont": [13, 16, 21, 25, 26], "marginh": 13, "vertic": [13, 16, 25, 26, 28], "marginv": 13, "smoothedg": 13, "blendingsmooths": 13, "savepath": 13, "attach": [13, 16, 21, 39], "TO": 13, "pipe": 13, "itself": [13, 14, 15, 40], "data_path": [13, 25, 26, 28, 31, 32, 40], "simuli": 13, "randomrot": [13, 26], "randomsc": 13, "randomscalingrang": 13, "smooth": 13, "transit": 13, "compon": [13, 16, 40], "labelsegment": 13, "keepcomposit": 13, "minsiz": [13, 16], "filterminheight": [13, 16, 21], "filterminwidth": [13, 16, 21], "filterminaspectratio": [13, 16, 21], "filtermaxaspectratio": [13, 16, 21], "mergemaxhdist": [13, 16], "mergemaxvdist": [13, 16], "On": [13, 15, 18, 20, 36], "channelontheflytransform": 13, "channelstransform": 13, "channelsontheflytransform": 13, "suffix": [13, 21], "cschannel": [13, 18, 21], "element": [13, 14, 15, 16, 24, 25, 26, 37], "affin": [13, 26], "b_": [13, 15], "1st": [13, 40], "2nd": 13, "substract": 13, "odot": 13, "substack": 13, "op_": 13, "apod": 13, "windownam": 13, "rectangular": [13, 15, 18], "hann": 13, "ham": 13, "cosin": 13, "sigma": [13, 26], "beta": [13, 15], "centroid": 13, "crop": [13, 18, 26], "center": [13, 15], "both": [13, 15, 21, 25, 40], "axi": [13, 15], "just": [13, 21, 24, 37, 38, 40], "practic": [13, 16, 23, 25, 36, 40], "respect": [13, 15, 16, 20, 21], "inde": [13, 19, 21, 23], "blendingalpha": 13, "blendingbeta": 13, "blur": 13, "equat": 13, "And": [13, 30, 31, 32, 33, 35, 40], "r": [13, 15, 22, 32, 40, 41], "linearbydist": 13, "frac": [13, 15, 16, 21], "border": [13, 26], "text": [13, 14, 15, 16, 18, 21], "neq": [13, 16], "_blur": 13, "smoothedgelinearbydist": 13, "might": [13, 36], "consol": 13, "cat": [13, 16, 33], "bird": [13, 33], "happen": 13, "encout": 13, "alphabet": [13, 16, 26], "subset": 13, "solv": [13, 34], "translat": [13, 21], "emit": 13, "drop": [13, 15, 21, 25, 40], "dropprob": 13, "probabl": [13, 15, 16, 21, 25, 34], "dropvalu": 13, "third": [13, 18, 22, 26], "ycbcr": [13, 26], "misalign": 13, "verticalrang": 13, "horizontalrang": 13, "uniform": [13, 15, 25], "round": [13, 15], "interpol": [13, 15, 25], "bordervalu": [13, 26], "replic": [13, 26], "throughout": [13, 26], "aaaaaa": [13, 26], "abcdefgh": [13, 26], "hhhhhhh": [13, 26], "reflect": [13, 26], "fedcba": [13, 26], "hgfedcb": [13, 26], "cdefgh": [13, 26], "abcdefg": [13, 26], "slight": [13, 26], "gfedcb": [13, 26], "gfedcba": [13, 26], "67": [13, 38, 40], "truncatednorm": 13, "bgra": [13, 26], "dft": 13, "imaginari": 13, "underli": 13, "elast": [13, 18, 26], "distort": [13, 18, 21], "amplitud": [13, 26], "percentag": [13, 19, 26], "histogram": [13, 18, 38, 40, 41], "clahe": [13, 18], "contrast": 13, "clahe_cliplimit": 13, "clahe_grids": 13, "tile": 13, "expand": 13, "1x1": [13, 21], "laplacian": 13, "Of": [13, 15, 40], "mat": 13, "major": [13, 16], "coeffici": 13, "squar": [13, 14, 15, 38], "sqrt": [13, 15], "sigma1": 13, "sigma2": 13, "theta": 13, "lambda": [13, 15], "psi": 13, "pi": 13, "gamma": [13, 39], "flip": [13, 15, 18, 25, 28, 40], "randomhorizontalflip": [13, 21, 40], "randomverticalflip": 13, "gradientfilt": 13, "sobel": 13, "scharr": 13, "kernels": [13, 15], "3x3": [13, 18], "invthreshold": 13, "gradientscal": 13, "kept": [13, 16, 40], "With": [13, 16, 25, 26, 28, 34, 39], "belong": [13, 21], "randomrotationrang": 13, "degre": [13, 26], "counterclockwis": [13, 26], "slicesmargin": 13, "neg": [13, 15, 19, 25], "reduc": [13, 15, 16, 18, 25, 39, 40, 41], "reduct": [13, 18], "smaller": [13, 16, 26], "ignorenovalid": 13, "excludelabel": 13, "exclud": 13, "spars": 13, "occurr": [13, 16, 20], "unbalanc": [13, 19], "toward": [13, 21, 41], "balanc": [13, 15], "behavior": [13, 16], "lead": [13, 14, 19, 38], "incorrect": 13, "magnitud": [13, 18], "phase": [13, 21, 32, 40], "m_": 13, "j": [13, 15, 16, 33, 36, 41], "x_": [13, 16], "_": [13, 33], "theta_": 13, "atan2": 13, "y_": [13, 16], "morpholog": 13, "reconstruct": 13, "eros": 13, "shape": [13, 18, 23, 25, 30, 35, 37], "morphologi": 13, "ellipt": 13, "hat": 13, "black": 13, "minmax": 13, "linf": 13, "normvalu": 13, "Such": 13, "l_": [13, 15], "normmin": 13, "normmax": 13, "whose": [13, 15], "rather": 13, "compositelabel": 13, "fewer": [13, 16], "discard": [13, 16], "aspect": [13, 15, 16, 21, 26], "distanc": [13, 16, 38], "gain": 13, "mutual": [13, 15], "exclus": [13, 15, 25], "bright": 13, "less": [13, 18, 21], "exposur": 13, "variat": [13, 18], "disjointgamma": 13, "channelsmask": 13, "_limit": 13, "_integ": 13, "v": [13, 18, 41], "cv": 13, "_cast": 13, "val_": 13, "rangemin": 13, "rangemax": 13, "keepaspectratio": [13, 21, 26, 40], "resizetofit": [13, 40], "along": [13, 26, 40], "longest": [13, 26], "chosen": [13, 18, 26, 40], "stripe": 13, "length": [13, 15], "randomoffset": 13, "stepoffset": 13, "account": [13, 15, 16, 23, 25, 38], "otsu": 13, "binaryinvert": [13, 15], "tozero": [13, 15, 21], "tozeroinvert": [13, 15], "maxvalu": [13, 15], "trim": 13, "nblevel": 13, "discret": [13, 18, 40], "k": [13, 15, 16, 19], "walli": 13, "meaning": 13, "primari": 14, "lightweight": 14, "friendli": [14, 36], "complet": [14, 18, 20, 21, 40, 41], "hyperparamet": [14, 15, 40], "delimit": 14, "arbitrarili": 14, "bracket": 14, "declar": [14, 21, 23, 30, 32, 37], "nest": [14, 37], "b": [14, 32, 41], "semicolon": 14, "middl": 14, "etc": [14, 39, 40], "trail": 14, "backslash": 14, "immedi": 14, "eol": 14, "caus": 14, "incept": 14, "inception_model": 14, "tpl": 14, "layer_x": 14, "content": [14, 21], "section_nam": 14, "_layer1": 14, "_layer2": 14, "_arrai": 14, "prop1": 14, "prop2": 14, "endblock": 14, "inception_layer1": 14, "inception_layer2": 14, "inception_array0": 14, "configconv": 14, "inception_array1": 14, "configpool": 14, "var": [14, 15], "item": [14, 20, 25, 33], "endfor": 14, "op": 14, "endif": 14, "not_exist": 14, "defaultmodel": [14, 15, 21, 23, 40], "transcod": 14, "frame_cuda": [14, 21, 23, 25, 31, 32, 33, 36, 40], "defaultdatatyp": [14, 15], "float16": [14, 40], "insertbatchnormafterconv": 14, "comma": [15, 24], "datatyp": [15, 25, 29, 32, 36, 37, 40], "bias": [15, 25, 34, 35, 37, 38, 39, 40], "weightsfil": [15, 16, 21, 24, 32, 39, 40], "weights_init": 15, "weightsinitdistrib": 15, "fillernam": 15, "nonlinear": [15, 25], "hzrs15": [15, 25, 41], "sometim": [15, 16, 25], "msra": [15, 25], "variancenorm": [15, 40], "fanin": [15, 25], "fanout": [15, 25, 40], "fan": 15, "gb10": [15, 25, 41], "sgd": [15, 21, 29, 31, 32, 33, 35, 40, 41], "solvernam": 15, "learningr": [15, 21, 24, 40], "momentum": [15, 21, 24, 25, 29, 31, 32, 33, 40], "decai": [15, 21, 24, 25, 29, 31, 32, 40], "learningratepolici": [15, 21, 24, 40], "polici": [15, 25, 40], "stepdecai": [15, 21, 24, 25], "exponentialdecai": [15, 25], "invtdecai": [15, 25], "polydecai": 15, "learningratesteps": [15, 21, 24], "learningratedecai": [15, 21, 24], "power": [15, 17, 25, 29, 31], "polynomi": 15, "rule": [15, 21, 40], "maxiter": [15, 40], "alpha_": [15, 21], "exp": [15, 16], "invdecai": 15, "adam": [15, 21, 35, 40, 41], "kb14": [15, 41], "001": [15, 25, 33, 39], "stepsiz": [15, 39, 40], "beta1": [15, 25], "exponenti": [15, 21, 25], "move": [15, 25, 26], "moment": [15, 25], "beta2": [15, 25], "999": [15, 25], "0e": [15, 21, 25], "activationfunct": [15, 16, 21, 24, 25, 39, 40], "leakslop": 15, "leak": [15, 21, 25], "slope": [15, 25], "7159": 15, "shot": 15, "regress": 15, "featuremapwidth": 15, "coordin": 15, "featuremapheight": 15, "positivei": 15, "iou": [15, 16], "higher": [15, 18, 40], "truth": 15, "negativei": 15, "losslambda": 15, "losspositivesampl": 15, "lossnegativesampl": 15, "rpn": 15, "kernelwidth": [15, 16, 18, 21, 40], "kernelheight": [15, 16, 18, 21, 40], "112": 15, "144": 15, "layout": 15, "let": [15, 25, 37, 40], "h": [15, 20], "tensorflow": [15, 22, 25, 30, 35], "outputsremap": 15, "is15": [15, 25, 41], "neuron": [15, 16, 18, 21, 25], "scalesshar": 15, "biasesshar": 15, "meansshar": 15, "variancesshar": 15, "scalesolv": 15, "biassolv": 15, "formula": [15, 25], "choos": [15, 25, 39, 40], "movingaveragemomentum": [15, 24], "closer": [15, 25], "kerneldepth": 15, "d": [15, 33, 41], "subsamplex": 15, "subsampl": [15, 25], "subsamplei": 15, "subsamplez": 15, "stridez": 15, "paddingx": 15, "paddingi": 15, "paddingz": 15, "dilationx": 15, "dilationi": 15, "dilationz": 15, "biasfil": 15, "nbgroup": 15, "channelspergroup": 15, "canva": 15, "weightsshar": 15, "nobia": [15, 21, 40], "weightssolv": [15, 21, 24], "outermost": 15, "leftmost": 15, "innermost": 15, "rightmost": 15, "weightsexportflip": 15, "experiment": 15, "wrong": 15, "suscept": 15, "incomingdelai": [15, 21], "timep": 15, "timef": 15, "synapt": [15, 20, 21], "incom": [15, 21, 25], "delai": [15, 21], "w_": 15, "spike_rram": 15, "i_": 15, "thre": [15, 21], "bipolarthreshold": [15, 21], "tau_": 15, "refractori": 15, "refrac": 15, "weightsrelinit": 15, "init": 15, "weightsminmean": 15, "weightsmaxmean": 15, "weightsminvarslop": 15, "oxram": 15, "weightsminvarorigin": 15, "weightsmaxvarslop": 15, "weightsmaxvarorigin": 15, "weightssetproba": 15, "p_": [15, 16], "puls": 15, "statist": [15, 21, 25, 32, 33, 41], "experi": [15, 21, 36, 40], "rram": 15, "weightsresetproba": 15, "reset": [15, 19], "synapticredund": 15, "redund": 15, "synaps": [15, 21], "bipolarweight": 15, "bipolar": 15, "bipolarintegr": 15, "ltpproba": 15, "extrins": 15, "stdp": 15, "ltp": 15, "cumul": 15, "ltdproba": 15, "ltd": 15, "stdpltp": 15, "window": [15, 19, 25], "inhibitrefractori": 15, "later": [15, 32, 34, 38], "inhibit": 15, "enablestdp": 15, "refractoryintegr": 15, "digitalintegr": 15, "analog": 15, "deconvolut": [15, 16, 25], "shk": [15, 25, 41], "would": [15, 16, 21, 22, 23, 25, 28, 32, 40], "sum_": [15, 16], "s_": 15, "prod_": 15, "max_": 15, "elemwise_sum": 15, "layer1": 15, "layer2": 15, "elemwise_weighted_sum": 15, "elemwise_scal": 15, "elemwise_ab": 15, "ab": [15, 41], "gra14": [15, 41], "region": [15, 18, 26], "pseudorandom": 15, "sequenc": [15, 18, 32, 34, 40], "dropconnect": 15, "terminatedelta": [15, 21], "respons": 15, "a_": 15, "limits_": 15, "short": [15, 25, 29, 36, 41], "hs97": [15, 41], "actualis": 15, "allgatesweightsfil": 15, "gate": 15, "allgatesbiasfil": 15, "weightsinputgatefil": 15, "recurr": 15, "weightsforgetgatefil": 15, "weightscellgatefil": 15, "weightsoutputgatefil": 15, "biasinputgatefil": 15, "biasrecurrentforgetgatefil": 15, "show": [15, 18, 19, 26, 29, 33, 40], "converg": 15, "biaspreviouslayerforgetgatefil": 15, "biascellgatefil": 15, "biasoutputgatefil": 15, "hxfiller": 15, "cxfiller": 15, "aren": 15, "provisd": 15, "rnn": 15, "proper": [15, 23, 24], "sai": [15, 40], "cours": [15, 40], "strength": 15, "granular": [15, 40], "wheteh": 15, "sentenc": 15, "word": [15, 19, 40], "vocabulari": [15, 41], "could": [15, 25, 36], "relev": 15, "predict": [15, 16, 22, 23, 24, 33], "throught": 15, "fonction": 15, "opposit": [15, 35], "regard": [15, 16], "carri": [15, 39], "entir": [15, 40], "flexibl": [15, 36], "accord": 15, "emphseqlength": 15, "senquenc": 15, "occur": [15, 16, 38], "big": 15, "tmax": 15, "longer": 15, "lstmcell_frame_cuda": 15, "within": [15, 16, 18, 40], "articul": 15, "bottompad": 15, "asymmetr": [15, 25], "ax": [15, 25], "frame_ext_cuda": 15, "simultan": 15, "consecut": 15, "pair": [15, 19], "maxout_lay": 15, "poolwidth": [15, 18, 21, 40], "poolheight": [15, 18, 21, 40], "pooldepth": 15, "poolsiz": 15, "radial": [15, 18], "basi": [15, 18], "centersfil": 15, "scalingfil": 15, "centerssolv": 15, "scalingsolv": 15, "rbfapprox": 15, "gaussian": [15, 18, 26], "semilinear": 15, "corner": [15, 25], "multinomi": [15, 25], "divisor": [15, 25], "delta_": 15, "ij": 15, "thresholdtransform": [15, 21], "morpho": 15, "morphologytransform": 15, "argmax": 15, "layernam": 16, "thrown": 16, "exceed": 16, "capac": [16, 21], "simpli": [16, 20, 21, 24, 38, 40], "seg_output": 16, "logisticwithloss": [16, 21], "xavierfil": [16, 21, 24, 40], "One": [16, 21, 26, 40], "sens": 16, "reserv": [16, 25], "defect": [16, 19], "charact": 16, "greedi": [16, 40], "alon": 16, "invalid": 16, "strongli": 16, "advis": 16, "sure": [16, 20, 22, 24, 30, 36], "labels_map": [16, 25], "classifi": [16, 29, 32], "macro": 16, "perfectli": 16, "rid": 16, "easili": [16, 18, 19, 23, 29, 37], "resampl": 16, "agnost": 16, "why": [16, 32, 37, 40], "weak": 16, "weaktarget": 16, "mse": [16, 34, 38], "cell_fram": 16, "_cuda": [16, 21], "deriv": [16, 21, 25], "simplif": [16, 23], "l": [16, 41], "dog": [16, 33], "fish": 16, "natur": 16, "partial": [16, 23], "x_i": 16, "sum_ky_k": 16, "p_k": 16, "y_i": 16, "p_i": 16, "y_k": 16, "p_kp_i": 16, "y_ip_i": 16, "sum_k": 16, "topn": [16, 23, 25], "binarythreshold": 16, "encod": 16, "macropixel": 16, "masklabeltarget": [16, 21], "maskedlabel": [16, 21], "maskedlabelvalu": 16, "labelshueoffset": [16, 21], "estimatedlabelsvaluedisplai": 16, "valuethreshold": 16, "imagelogformat": 16, "jpg": 16, "metric": [16, 18, 25, 30, 35, 38, 40], "ccl": 16, "approach": [16, 40, 41], "classic": [16, 21, 40], "ssd": 16, "yolo": 16, "minoverlap": [16, 21], "scoretopn": 16, "agreement": 17, "cea": [17, 20, 27, 36], "interest": [17, 18, 26], "contact": 17, "busi": 17, "sandrin": 17, "varenn": 17, "fr": 17, "expertis": 17, "solut": [17, 18, 22, 40], "hardwar": [17, 40], "system": [17, 32, 36, 40], "constrain": [17, 18], "cot": 17, "pneuro": 17, "programm": [17, 40], "fpga": [17, 18, 38], "asic": 17, "comprehens": 18, "fast": [18, 21], "autom": 18, "construct": 18, "particularli": [18, 23, 24, 38], "explor": [18, 19, 21], "prototyp": [18, 21], "compar": [18, 33, 40], "computationn": 18, "briefli": 18, "capabilit": 18, "augment": [18, 27, 40], "improv": [18, 21, 36, 39, 41], "fourth": 18, "fifth": [18, 41], "toolflow": 18, "conclud": 18, "summaris": 18, "everyth": [18, 36, 37], "advanc": [18, 32], "circular": 18, "polygon": 18, "pixelwis": 18, "datafil": 18, "grayscal": 18, "channelextractiontransform": [18, 21], "29x29": [18, 32], "rescaletransform": [18, 21, 23, 40], "equalizetransform": 18, "extent": 18, "gabor": 18, "slice": [18, 19, 26], "trime": 18, "withing": 18, "highli": [18, 21, 40], "modular": [18, 40], "serv": 18, "rest": 18, "2x2": [18, 21], "dnnexampl": 18, "ten": 18, "minut": 18, "hour": [18, 41], "dai": 18, "week": 18, "softwar": [18, 20], "satisfi": 18, "rout": 18, "desir": [18, 38], "trade": 18, "off": 18, "mesur": 18, "targetsbenchmark": 18, "desktop": 18, "gpusand": 18, "synthes": [18, 25], "todai": [18, 40], "knownledg": 18, "manag": [18, 25], "month": 18, "verif": 18, "effort": 18, "ongo": 18, "recal": 19, "much": 19, "portion": 19, "definit": [19, 36], "confusionmatrix_": [19, 25], "_score": [19, 25], "sensit": [19, 25, 40], "overal": 19, "transpos": [19, 22, 33, 34, 40], "reorder": 19, "\u00f8": 19, "click": [19, 20, 40], "press": 19, "enter": [19, 32], "scoretun": 19, "f1": [19, 40], "ctrl": 19, "keyboard": 19, "shortcut": 19, "past": [19, 40], "libreoffic": 19, "writer": 19, "tabular": 19, "nbmainhit": 19, "hit": 19, "thresmainhit": 19, "nbmainconfus": 19, "thresmainconfus": 19, "mismatch": 19, "nbmainmiss": 19, "thresmainmiss": 19, "processor": 20, "a15": 20, "tegra": 20, "k1": 20, "a53": 20, "a57": 20, "x1": [20, 40], "pentium": 20, "pc": 20, "iii": 20, "athlon": 20, "recent": 20, "geq": 20, "2012": [20, 41], "studio": 20, "2015": [20, 41], "debian": 20, "04": 20, "hard": [20, 23, 26], "350": 20, "kepler": 20, "micro": 20, "512": 20, "cmake": [20, 36], "gnuplot": 20, "devel": 20, "x86_64": [20, 36], "workstat": 20, "repositori": 20, "rpm": 20, "uhv": 20, "repo": 20, "rhel6": 20, "yum": 20, "clean": 20, "expir": 20, "regist": 20, "latest": [20, 40], "lib64": 20, "ld_library_path": 20, "libopencv": 20, "libcv": 20, "libhighgui": 20, "wget": [20, 22], "1404": 20, "x86": 20, "_64": 20, "_7": 20, "18_": 20, "amd64": 20, "deb": 20, "dpkg": 20, "machin": [20, 41], "_4": 20, "2_": 20, "cudart": 20, "curand": 20, "libcudnn5": 20, "symlink": 20, "ln": 20, "org": [20, 22, 33, 41], "dirent": 20, "github": [20, 22, 23, 27, 40], "tronkko": 20, "put": [20, 26], "info": 20, "opencv_dir": 20, "x64": 20, "vc12": 20, "toolkit": 20, "local_instal": 20, "cuda_8": 20, "44_window": 20, "ex": 20, "renam": [20, 33], "compiler_8": 20, "cublas_8": 20, "cublas_dev_8": 20, "cudart_8": 20, "curand_8": 20, "curand_dev_8": 20, "programfil": 20, "v8": 20, "libnvvp": 20, "redist": 20, "v5": 20, "windows7": 20, "7z": 20, "git": [20, 36], "pybind11": 20, "submodul": 20, "mkdir": [20, 36], "newli": [20, 35, 40], "all_build": 20, "gtsrb": [20, 32], "gtk": 20, "write": [20, 25, 39], "600": [20, 40], "600000": 20, "10000": [20, 21, 25, 28], "occasion": 20, "fail": [20, 34, 36], "targetscore_": 20, "success_valid": 20, "validationscor": 20, "confusionmatrix": 20, "Or": [20, 25, 40], "ideali": 20, "diagon": 20, "mistak": 20, "confusionmatrix_learn": 20, "confusionmatrix_valid": 20, "confusionmatrix_test": 20, "analyz": [20, 32], "outputs_init": 20, "momemtum": 21, "significantli": 21, "wilsonroelofsstern": [21, 41], "lr": [21, 33], "findlrrang": 21, "plot": [21, 28, 29, 37], "findlr": 21, "lstinlin": 21, "iterations": [21, 40], "sgdsolver": 21, "recommand": [21, 36], "gdollarg": [21, 41], "eff": 21, "0001": 21, "residu": [21, 41], "zeroinit": 21, "overcom": 21, "zdm19": [21, 41], "handwritten": 21, "know": [21, 40], "28x28": 21, "32x32": [21, 26], "transformation_1": 21, "reproduc": 21, "lenet": [21, 29, 31, 32], "5x5": 21, "84": [21, 29, 33, 40], "tell": 21, "hyperbol": 21, "tangent": 21, "fed": 21, "thing": 21, "carefulli": [21, 32], "dead": [21, 32], "unit": [21, 32, 41], "stuck": [21, 32], "infti": 21, "popular": 21, "par": 21, "tune": 21, "0005": [21, 24, 32], "_epochs": [21, 24], "993": [21, 24, 32], "weightsolv": 21, "imdbwiki_databas": 21, "differenci": 21, "oppos": 21, "fliptransform": [21, 40], "drop1": 21, "drop2": 21, "focu": [21, 40], "60x45": 21, "stage": 21, "n2d2_model": [21, 30, 40], "easi": 21, "femal": 21, "idea": [21, 40], "male": 21, "imdbwiki_target_gend": 21, "ag": 21, "99": [21, 40], "targetroi": 21, "roislabeltarget": 21, "helper": 21, "targetvisu": 21, "emb": [21, 35], "histor": 21, "xnet": 21, "buildingclassifiernn": 21, "formal": 21, "transcode_cuda": 21, "st": 21, "did": 21, "nor": 21, "jitter": 21, "leaki": 21, "fire": 21, "lif": 21, "IF": 21, "uniti": 21, "decis": 21, "lenet_spik": 21, "6000000": 21, "100000": 21, "stats_spik": 21, "654124": 21, "counterpart": [21, 40], "torch": [22, 27, 35, 36], "pytorch_to_onnx": 22, "mobilenetv2": [22, 38], "mobilenet_v2": 22, "dummy_input": 22, "randn": 22, "224": [22, 23, 40], "pretrain": 22, "input_nam": 22, "output_nam": 22, "mobilenet_v2_pytorch": 22, "verbos": [22, 25, 29, 30, 31, 35, 36], "parti": 22, "keras2onnx": 22, "tf2onnx": 22, "maintain": [22, 40], "frozen": 22, "pb": 22, "nchw": [22, 35], "nhwc": 22, "unexpect": 22, "conv2d_77_input": 22, "got": 22, "mandat": 22, "tfmodel": 22, "0_224_frozen": 22, "onnxmodel": 22, "0_224": [22, 23, 24], "url": [22, 41], "mobilenet_v1_2018_08_02": 22, "q": 22, "zxvf": 22, "fi": 22, "opset": [22, 35], "mobilenetv1": [22, 23, 24], "reshape_1": 22, "mobilenet_v1_to_onnx": [22, 24], "sh": [22, 24], "mobilenet_v2_to_onnx": 22, "mobilenet_v3_to_onnx": 22, "zoo": [22, 38, 40], "blob": 22, "master": 22, "readm": 22, "md": 22, "dl": 23, "vastli": 23, "unnecessari": 23, "ilsvrc2012_databas": [23, 40], "colorspacetransform": [23, 40], "top5": 23, "viewer": [23, 40], "netron": [23, 40], "lutzroed": [23, 40], "io": [23, 30, 40], "ignoreinputs": 23, "8000": 23, "perm": [23, 25], "sound_processing_graph": 23, "remark": 23, "averagepool": 23, "exc": 23, "ceil_mod": 23, "count_include_pad": 23, "div": 23, "operand": 23, "globalaveragepool": 23, "globalmaxpool": 23, "leakyrelu": 23, "matmul": [23, 34], "maxpool": 23, "mul": 23, "sigmoid": 23, "squeez": 23, "upsampl": 23, "schedul": 24, "transfer": [24, 40], "imagenet": [24, 40, 41], "propos": [24, 32, 40], "v1": 24, "conv__252": 24, "BE": 24, "logit": 24, "avgpool_1a": 24, "avgpool": 24, "conv_def": [24, 25, 40], "onnxsect": 24, "n2d2celltype_def": 24, "fc_def": [24, 40], "won": 24, "batchnorm_def": [24, 40], "bn_notrain": 24, "prevent": [24, 41], "conv__250": 24, "notrain": 24, "mobilenet_v1_onnx_transf": 24, "soon": 24, "atom": 25, "node": 25, "logic": 25, "collect": 25, "onnx": [25, 27, 35, 36, 38], "similar": [25, 40], "dictionari": [25, 32], "__call__": 25, "get_cel": 25, "is_integr": 25, "set_back_propag": 25, "back_propag": [25, 29, 31, 32, 37, 40], "boolean": [25, 26, 37], "trainabl": 25, "set_solv": 25, "optimiz": 25, "to_deepnet_cel": [25, 34], "dataprovid": [25, 26, 28, 31, 32, 34, 40], "constructor": [25, 29, 37], "load_from_onnx": [25, 31, 40], "load_from_ini": 25, "fit": [25, 30, 31, 40], "n2d2_object": 25, "children": 25, "export_free_paramet": [25, 29], "dir_nam": 25, "learn_epoch": [25, 31], "log_epoch": 25, "avg_window": 25, "bench": 25, "ban_multi_devic": 25, "valid_metr": [25, 31], "stop_valid": 25, "log_kernel": 25, "negativepredictivevalu": 25, "missrat": 25, "fallout": 25, "falsediscoveryr": 25, "falseomissionr": 25, "f1score": 25, "informed": [25, 40], "marked": 25, "get_deepnet": [25, 26, 37, 40], "get_embedded_deepnet": [25, 40], "get_input_cel": 25, "get_output_cel": 25, "import_free_paramet": [25, 40], "ignore_not_exist": [25, 40], "classmethod": [25, 26, 37], "model_path": 25, "ini_fil": 25, "ignore_cel": 25, "ignore_input_s": 25, "instruct": 25, "onnxmodl": 25, "log_confusion_matrix": [25, 32], "file_nam": 25, "targetnam": 25, "otpionn": 25, "log_stat": [25, 32, 40], "log_success": [25, 32], "encapsul": [25, 29], "shall": 25, "child": 25, "run_test": [25, 31], "nb_test": 25, "test_index": 25, "test_id": 25, "qat_sat": [25, 34], "wt_round_mod": [25, 34], "b_round_mod": [25, 34], "c_round_mod": [25, 34], "act_scaling_mod": [25, 34], "float_mult": [25, 34], "log_json": 25, "curv": [25, 32], "sat": [25, 34], "rintf": [25, 34], "fixed_mult16": [25, 34], "single_shift": [25, 34], "double_shift": [25, 34], "set_provid": 25, "learnabl": [25, 40, 41], "onnx_path": 25, "with_loss": [25, 31, 32, 40], "input_tensor": [25, 37], "output_tensor": 25, "config_paramet": [25, 26, 39], "celltype_id": 25, "get_diffinput": 25, "get_diffoutput": 25, "get_output": [25, 29], "get_paramet": [25, 26, 39], "kei": [25, 26, 39], "is_exportable_to": 25, "export_nam": [25, 34], "set_activ": 25, "nb_input": [25, 29, 31], "nb_output": [25, 29, 31], "kernel_dim": [25, 29, 31, 40], "nb_input_cel": 25, "who": [25, 36], "sub_sample_dim": [25, 31], "stride_dim": [25, 29, 31, 32, 40], "padding_dim": [25, 31], "dilation_dim": [25, 31], "overrid": [25, 40], "weights_fil": [25, 29, 31, 32], "bias_fil": [25, 29, 31], "normalfil": 25, "weights_solv": [25, 29, 31, 32, 40], "bias_solv": [25, 29, 31, 40], "no_bia": [25, 29, 31, 32, 40], "weights_export_flip": [25, 31], "global_vari": [25, 29, 31, 32, 33, 36, 40], "default_datatyp": [25, 36], "default_model": [25, 31, 32, 33, 36, 40], "get_bia": 25, "output_index": 25, "get_bias": 25, "get_weight": 25, "channel_index": 25, "has_quant": 25, "refill_bia": [25, 40], "refill_weight": 25, "set_bia": 25, "set_bias_fil": [25, 40], "refil": [25, 40], "set_fil": 25, "set_solver_paramet": [25, 40], "set_weight": 25, "set_weights_fil": [25, 40], "has_bia": [25, 40], "top_pad": 25, "bot_pad": 25, "left_pad": 25, "right_pad": 25, "group_siz": [25, 31], "intput": 25, "scale_solv": [25, 40], "moving_average_momentum": 25, "pool_dim": [25, 29, 31, 40], "outputs_width": 25, "outputs_height": 25, "resize_mod": 25, "align_corn": 25, "permut": 25, "those": 25, "wether": 25, "conv_config": [25, 32], "concis": [25, 32], "def": [25, 28, 33, 40], "set_valu": [25, 32, 37], "nb_channels_per_group": 25, "create_map": 25, "nb_group": 25, "coupl": 25, "learning_r": [25, 29, 31, 32, 40], "cell1": 25, "cell2": 25, "sequence_0": [25, 29], "fc_0": [25, 29], "drop_connect": [25, 29], "outputs_remap": [25, 29, 31], "weights_export_format": [25, 29, 31], "iteration_s": [25, 29, 31, 40], "learning_rate_decai": [25, 29, 31, 32], "learning_rate_polici": [25, 29, 31, 40], "learning_rate_step_s": [25, 29, 31], "max_iter": [25, 29, 31, 40], "min_decai": [25, 29, 31], "polyak_momentum": [25, 29, 31], "warm_up_dur": [25, 29, 31], "warm_up_lr_frac": [25, 29, 31], "std_dev": [25, 29, 31], "fc_1": [25, 29, 40], "1e": 25, "weight_fil": 25, "filer": 25, "set_biases_fil": 25, "observ": [25, 31, 40], "32238": 25, "0233932": 25, "kaim": [25, 41], "variance_norm": [25, 40], "mean_norm": 25, "activationquant": 25, "leak_slop": [25, 29, 31], "understand": [25, 37, 41], "target_id": 25, "target_valu": 25, "default_valu": 25, "top_n": 25, "create_missing_label": 25, "clear_scor": 25, "clear_success": [25, 32, 40], "get_average_scor": [25, 40], "negativepredict": 25, "iu": 25, "get_average_top_n_success": 25, "get_loss": 25, "get_partit": [25, 26], "data_dim": 26, "seek": 26, "label_path": [26, 40], "partition_stimuli": 26, "set_partit": [26, 28, 32, 40], "inputs_tensor": 26, "read_random_batch": [26, 28, 40], "equiv_label_partit": 26, "exterior": 26, "label_depth": 26, "roi_fil": 26, "roi_dir": 26, "roi_extens": 26, "per_label_partit": 26, "ignore_mask": 26, "valid_extens": 26, "load_data_in_memori": 26, "get_label_nam": 26, "label_idx": 26, "get_nb_stimuli": [26, 40], "fo": [26, 32], "get_partition_summari": [26, 28], "is_download": 26, "extract_roi": 26, "use_validation_for_test": 26, "use_coars": 26, "inc_train_extra": 26, "single_instance_label": 26, "german": [26, 32], "traffic": [26, 32, 41], "rub": [26, 32], "de": [26, 32], "challeng": [26, 32, 41], "held": [26, 32], "joint": [26, 32, 41], "confer": [26, 32, 41], "ijcnn": [26, 32], "2011": [26, 32, 41], "apply_to": [26, 40], "get_transform": 26, "border_typ": 26, "border_valu": 26, "elastic_gaussian_s": 26, "elastic_sigma": 26, "elastic_sc": 26, "keep_aspect_ratio": [26, 40], "resize_to_fit": [26, 40], "nb_row": 26, "nb_col": 26, "color_spac": 26, "horizontal_flip": 26, "vertical_flip": [26, 28], "random_horizontal_flip": [26, 40], "random_vertical_flip": 26, "first_oper": 26, "first_valu": 26, "second_oper": 26, "second_valu": 26, "offset_x": [26, 40], "offset_i": [26, 40], "random_offset_x": 26, "random_offset_i": 26, "random_rot": 26, "random_rotation_rang": 26, "random_sc": 26, "random_scaling_rang": 26, "allow_pad": 26, "add_transform": [26, 28, 31, 32, 40], "random_read": 26, "composite_stimuli": 26, "get_batch": 26, "get_random_batch": 26, "provider_id": 26, "add_on_the_fly_transform": [26, 28, 40], "all_batchs_provid": 26, "get_batch_s": 26, "get_data": 26, "get_databas": [26, 40], "get_label": [26, 28], "get_nam": 26, "onthefli": 26, "normalize_stimuli": 26, "read_batch": [26, 28, 40], "set_batch": 26, "set_reading_randomli": [26, 32], "date": 27, "leav": [27, 36], "kera": [27, 34, 36], "data_augment": 28, "matplotlib": [28, 33], "plot_tensor": 28, "pyplot": [28, 33], "plt": [28, 33], "imshow": [28, 33], "cmap": 28, "vmin": 28, "vmax": 28, "savefig": [28, 33], "parition": 28, "70000": 28, "54000": 28, "77": 28, "6000": 28, "to_numpi": [28, 37], "first_stimuli": 28, "first_stimuli_flip": 28, "negat": 28, "second_stimuli": 28, "draw": 29, "certain": 29, "graph_exampl": 29, "possess": 29, "vebos": 29, "compulsori": 29, "784": 29, "visibl": [29, 35], "graph_onli": [29, 36], "tensorplaceholder_0": 29, "draw_associated_graph": [29, 37], "example_graph": 29, "extractor": 29, "pool2d": [29, 32, 40], "last_fulli": 29, "conv_0": [29, 40], "tensorplaceholder_1": 29, "pool2d_0": 29, "conv_1": 29, "pool2d_1": 29, "conv_2": 29, "fc_2": 29, "dropout_0": 29, "full_lenet_graph": 29, "first_fulli": 29, "0135485": 29, "0359611": 29, "0285292": 29, "0732218": 29, "0318365": 29, "0930403": 29, "0467896": 29, "108823": 29, "0305202": 29, "0055611": 29, "convnet_paramet": 29, "syntxt": 29, "conv_0_quant": 29, "pool2d_0_quant": 29, "conv_1_quant": 29, "pool2d_1_quant": 29, "conv_2_quant": 29, "vision": [30, 41], "mnist_convnet": 30, "keras_exampl": 30, "np": [30, 33], "keras_to_n2d2": [30, 35], "num_class": 30, "input_shap": 30, "x_train": 30, "y_train": 30, "x_test": 30, "y_test": 30, "load_data": 30, "astyp": 30, "expand_dim": 30, "matric": 30, "to_categor": 30, "customsequenti": [30, 35], "tf_model": [30, 35], "conv2d": [30, 33], "kernel_s": 30, "maxpooling2d": 30, "pool_siz": 30, "dens": [30, 34], "for_export": [30, 35], "again": [30, 33], "categorical_crossentropi": [30, 35], "validation_split": 30, "successfulli": [30, 31], "get_deepnet_cel": [30, 34, 35], "lenet_onnx": 31, "cuda_devic": [31, 36, 40], "deepnetcel": [31, 34, 35, 40], "deepnetcell_0": 31, "576": 31, "export_cpp": [31, 34], "nb_bit": [31, 34], "performance_analysi": 32, "recogn": 32, "assist": 32, "ada": 32, "taken": [32, 38], "front": 32, "camera": 32, "lifelik": 32, "15x15": 32, "250x250": 32, "channelextract": 32, "nuanc": 32, "grei": 32, "inspir": 32, "solver_config": 32, "fc_config": 32, "xavier": [32, 40], "neuralnetworkcel": [32, 37], "conv2_map": 32, "crossentropyclassifi": 32, "nepoch": 32, "batch_numb": 32, "3f": [32, 33, 40], "val": [32, 40], "2f": [32, 40], "get_average_success": [32, 40], "vis_gtsrb": 32, "footprint": [32, 39], "logarithm": 32, "pytorch": [33, 34], "beginn": 33, "blitz": 33, "cifar10_tutori": 33, "torch_exampl": 33, "firstli": [33, 40], "pytorch_to_n2d2": [33, 35], "torchvis": 33, "is_avail": 33, "totensor": 33, "trainset": 33, "trainload": 33, "dataload": 33, "num_work": 33, "testset": 33, "testload": 33, "plane": 33, "deer": 33, "frog": 33, "hors": 33, "truck": 33, "img": 33, "img_path": 33, "unnorm": 33, "cpu_img": 33, "npimg": 33, "super": [33, 40], "maxpool2d": 33, "intial": 33, "torch_net": 33, "backend": [33, 35], "criterion": 33, "crossentropyloss": 33, "remind": 33, "e_t": 33, "running_loss": 33, "enumer": 33, "zero_grad": 33, "1999": 33, "mini": 33, "5d": 33, "expoch": 33, "finish": 33, "datait": 33, "make_grid": 33, "torch_infer": 33, "groundtruth": 33, "join": 33, "ot": 34, "list_exportable_cel": 34, "export_c": 34, "deepnet_cel": [34, 35], "batchnorm2d": [34, 40], "ye": 34, "export_no_unsign": 34, "export_no_cross_layer_equ": 34, "wt_clipping_mod": 34, "kl_diverg": 34, "act_clipping_mod": 34, "quantil": [34, 38], "act_quantile_valu": 34, "9999": [34, 38], "act_rescale_per_output": 34, "calibration_reload": 34, "export_nb_stimuli_max": 34, "find_lr": 34, "untrain": 34, "runtimeerror": 34, "warn": [34, 39], "78614": 34, "fall": 34, "optimize_buffer_memori": 34, "deactiv": [34, 36], "export_tensor_rt": 34, "frontend": 35, "eager": 35, "union": [35, 37], "opset_vers": 35, "transfert": 35, "intermedi": 35, "outputs_shap": 35, "output_shap": 35, "tf": 35, "overwritten": 35, "custom_op": 35, "autograd": 35, "vice": 35, "versa": 35, "contigu": [35, 37], "host": [35, 37], "torch_model": 35, "input_s": 35, "in_nam": 35, "out_nam": 35, "pytorch_interoper": 35, "need_to_flatten": 35, "get_block": 35, "notat": 36, "realiz": [36, 40], "newer": 36, "virtualenv": 36, "pip": 36, "went": 36, "feel": 36, "anymor": 36, "go": 36, "projet": 36, "bdist_wheel": 36, "seomeon": 36, "contribut": 36, "n2d2_build_path": 36, "n2d2_path": 36, "bashrc": 36, "verifi": 36, "modulenotfounderror": 36, "site": 36, "cpython": 36, "37m": 36, "linux": 36, "bellow": 36, "dpython_execut": 36, "path_to_python_binari": 36, "path_to_n2d2_cmakefil": 36, "absenc": 36, "7m": 36, "reboot": 36, "whatev": 36, "chose": 36, "environn": 36, "exit": 36, "notifi": 36, "produc": 37, "edg": 37, "dim_format": 37, "coher": 37, "revers": 37, "data_typ": 37, "detach": 37, "therebi": 37, "dtoh": 37, "from_n2d2": 37, "n2d2_tensor": 37, "from_numpi": 37, "np_arrai": 37, "htod": 37, "nb_dim": 37, "new_dim": 37, "anytim": 37, "noth": 37, "old": 37, "finer": 38, "expens": 38, "kullback": 38, "leibler": 38, "diverg": 38, "simpler": 38, "wors": 38, "wt": 38, "point16": 38, "point32": 38, "altogeth": 38, "fpu": 38, "wherea": 38, "overflow": 38, "fallback": 38, "acc": 38, "resnet18v1": [38, 40], "69": [38, 40], "mobilenetv20_output_flatten0_reshape0": 38, "70": [38, 40], "65": [38, 40], "squeezenet": 38, "far": 39, "prunecel": 39, "finetun": 39, "prune_mod": 39, "gradual": 39, "prune_fil": 39, "iternonstruct": 39, "iteract": 39, "add_bias": 39, "diff_bias": 39, "diff": 39, "add_weight": 39, "diff_weight": 39, "get_current_threshold": 39, "get_pruned_mask": 39, "input_idx": 39, "pruner": 39, "get_quantized_weight": 39, "isinst": [39, 40], "explan": 39, "until": 39, "dataset_s": 39, "enough": 39, "quant_mod": 39, "qweight": [39, 40], "pruningmod": 39, "pruningfil": 39, "startthreshold": 39, "stepsizethreshold": 39, "gammathreshold": 39, "hefil": 39, "Theses": 40, "scheme": 40, "art": 40, "dot": 40, "besid": 40, "leverag": 40, "market": 40, "compress": 40, "manner": 40, "qact": 40, "beyond": 40, "advantag": 40, "clearli": 40, "obviou": 40, "independ": 40, "burden": 40, "intens": 40, "treatment": 40, "overview": 40, "bln": [40, 41], "tri": 40, "stepoptinitsteps": 40, "adjust": 40, "jyl19": [40, 41], "promis": 40, "author": 40, "techniqu": 40, "boost": 40, "surpass": [40, 41], "dorefa": 40, "applyquant": 40, "applysc": 40, "paper": 40, "optimum": 40, "cg": 40, "pact": 40, "lstm": 40, "absorb": 40, "fusion": 40, "pick": 40, "s3": 40, "amazonaw": 40, "install_onnx_model": 40, "resnet18": 40, "inistruct": 40, "demonstr": 40, "scalemin": 40, "scalemax": 40, "ratiomin": 40, "ratiomax": 40, "sliceextractiontransform": 40, "decid": 40, "overwrit": 40, "cosinedecai": 40, "00004": 40, "192175050": 40, "1281167": 40, "physic": 40, "hyper": 40, "bn_train": 40, "onnx_init": 40, "soft1": 40, "resnetv15_dense0_fwd": 40, "weights_clamp": 40, "congratul": 40, "plai": 40, "reluq_def": 40, "qactsolv": 40, "resnetv15_relu0_fwd": 40, "resnetv15_stage1_relu0_fwd": 40, "resnetv15_stage1_activation0": 40, "resnetv15_stage1_relu1_fwd": 40, "resnetv15_stage1_activation1": 40, "resnetv15_stage2_relu0_fwd": 40, "resnetv15_stage2_activation0": 40, "resnetv15_stage2_relu1_fwd": 40, "resnetv15_stage2_activation1": 40, "resnetv15_stage3_relu0_fwd": 40, "resnetv15_stage3_activation0": 40, "resnetv15_stage3_relu1_fwd": 40, "resnetv15_stage3_activation1": 40, "resnetv15_stage4_relu0_fwd": 40, "resnetv15_stage4_activation0": 40, "resnetv15_stage4_relu1_fwd": 40, "resnetv15_stage4_activation1": 40, "focus": 40, "resnetv15_conv0_fwd": 40, "showcas": 40, "scrip": 40, "random_partit": 40, "compact": 40, "syntax": 40, "randomresizecrop": 40, "scale_min": 40, "scale_max": 40, "ratio_min": 40, "ratio_max": 40, "sliceextract": 40, "flip_tran": 40, "path_to_onnx": 40, "satcel": 40, "apply_sc": 40, "apply_quant": 40, "modif": 40, "met": 40, "resnet_weights_clamp": 40, "loss_funct": 40, "max_precis": 40, "math": 40, "ceil": 40, "batch_idx": 40, "nplote": 40, "draw_graph": 40, "resnet18v1_clamp": 40, "resnet18v1_clamped_stat": 40, "export_network_free_paramet": 40, "et": 40, "satact": 40, "115305030": 40, "set_quant": 40, "set_rang": 40, "wieght": 40, "resnet18v1_qu": 40, "resnet18v1_quant_stat": 40, "resnet_weights_sat": 40, "methodologi": 40, "correctli": 40, "transformation_0": 40, "connct": 40, "bn_def": 40, "bn1": 40, "bn2": 40, "bn3": 40, "94": [40, 41], "79": 40, "conv3_weights_qu": 40, "distrib": 40, "173293": 40, "90895": 40, "172422": 40, "836": 40, "172195": 40, "082242": 40, "essenti": 40, "obvious": 40, "answer": 40, "deepnetqat": 40, "weights_quant": 40, "handmad": 40, "folow": 40, "n2d2_ip": 40, "conv_conf": 40, "solver_conf": 40, "fc_conf": 40, "bn_conf": 40, "new_weight": 40, "fuse_qat": 40, "lenet_qu": 40, "induc": 40, "involv": 40, "mitig": 40, "huge": 40, "handicap": 40, "realist": 40, "reli": 40, "a100": 40, "2080": 40, "rtx": 40, "ti": 40, "45": 40, "xx": 40, "instabl": 40, "088": 40, "71": 40, "816": 40, "319": 40, "463": 40, "46": 40, "214": 40, "048": 40, "506": 40, "880": 40, "73": 40, "006": 40, "yash": 41, "bhalgat": 41, "jinwon": 41, "lee": 41, "marku": 41, "nagel": 41, "tijmen": 41, "blankevoort": 41, "nojun": 41, "kwak": 41, "lsq": 41, "2020": 41, "arxiv": 41, "2004": 41, "09576": 41, "mariu": 41, "cordt": 41, "moham": 41, "omran": 41, "sebastian": 41, "ramo": 41, "timo": 41, "rehfeld": 41, "enzweil": 41, "rodrigo": 41, "benenson": 41, "uw": 41, "frank": 41, "stefan": 41, "roth": 41, "bernt": 41, "schiel": 41, "semant": 41, "urban": 41, "proc": 41, "ieee": 41, "cvpr": 41, "2016": 41, "doll\u00e1r": 41, "wojek": 41, "perona": 41, "2009": 41, "fei": 41, "fergu": 41, "increment": 41, "bayesian": 41, "workshop": 41, "glorot": 41, "bengio": 41, "difficulti": 41, "feedforward": 41, "artifici": 41, "intellig": 41, "249": 41, "2010": 41, "priya": 41, "goyal": 41, "doll": 41, "\u00e1": 41, "ross": 41, "girshick": 41, "pieter": 41, "noordhui": 41, "lukasz": 41, "wesolowski": 41, "aapo": 41, "kyrola": 41, "andrew": 41, "tulloch": 41, "yangq": 41, "jia": 41, "he": 41, "minibatch": 41, "corr": 41, "2017": 41, "1706": 41, "02677": 41, "benjamin": 41, "graham": 41, "2014": 41, "gregori": 41, "griffin": 41, "alex": 41, "holub": 41, "pietro": 41, "technic": 41, "2007": 41, "xiangyu": 41, "zhang": 41, "shaoq": 41, "ren": 41, "jian": 41, "sun": 41, "delv": 41, "human": 41, "proceed": 41, "iccv": 41, "1026": 41, "1034": 41, "doi": 41, "1109": 41, "sepp": 41, "hochreit": 41, "j\u00fcrgen": 41, "schmidhub": 41, "1735": 41, "1780": 41, "1997": 41, "1162": 41, "neco": 41, "houben": 41, "johann": 41, "stallkamp": 41, "jan": 41, "salmen": 41, "marc": 41, "schlips": 41, "christian": 41, "igel": 41, "world": 41, "erman": 41, "raffic": 41, "etect": 41, "enchmark": 41, "2013": 41, "sergei": 41, "ioff": 41, "szegedi": 41, "covari": 41, "vidit": 41, "jain": 41, "erik": 41, "miller": 41, "unconstrain": 41, "um": 41, "009": 41, "univers": 41, "massachusett": 41, "amherst": 41, "qing": 41, "jin": 41, "linji": 41, "yang": 41, "zhenyu": 41, "liao": 41, "2019": 41, "1912": 41, "10207": 41, "diederik": 41, "kingma": 41, "jimmi": 41, "ba": 41, "stochast": 41, "1412": 41, "6980": 41, "krizhevski": 41, "tini": 41, "lecun": 41, "bottou": 41, "haffner": 41, "volum": 41, "2278": 41, "2324": 41, "1998": 41, "jeffrei": 41, "lockhart": 41, "gari": 41, "weiss": 41, "jack": 41, "xue": 41, "shaun": 41, "gallagh": 41, "grosner": 41, "toni": 41, "pulick": 41, "consider": 41, "smart": 41, "phone": 41, "sensor": 41, "mine": 41, "discoveri": 41, "sensorkdd": 41, "york": 41, "ny": 41, "acm": 41, "1145": 41, "2003653": 41, "2003656": 41, "rakotomamonji": 41, "gasso": 41, "olga": 41, "russakovski": 41, "deng": 41, "hao": 41, "jonathan": 41, "kraus": 41, "sanjeev": 41, "satheesh": 41, "sean": 41, "ma": 41, "zhiheng": 41, "huang": 41, "andrej": 41, "karpathi": 41, "aditya": 41, "khosla": 41, "michael": 41, "bernstein": 41, "alexand": 41, "berg": 41, "li": 41, "journal": 41, "ijcv": 41, "115": 41, "211": 41, "252": 41, "1007": 41, "s11263": 41, "015": 41, "0816": 41, "nitish": 41, "srivastava": 41, "geoffrei": 41, "hinton": 41, "ilya": 41, "sutskev": 41, "ruslan": 41, "salakhutdinov": 41, "voverfit": 41, "research": 41, "1929": 41, "1958": 41, "man": 41, "1016": 41, "neunet": 41, "gui": 41, "song": 41, "xia": 41, "xiang": 41, "bai": 41, "ding": 41, "zhen": 41, "zhu": 41, "serg": 41, "belongi": 41, "jiebo": 41, "luo": 41, "mihai": 41, "datcu": 41, "marcello": 41, "pelillo": 41, "liangpei": 41, "aerial": 41, "1711": 41, "10398": 41, "hongyi": 41, "yann": 41, "dauphin": 41, "tengyu": 41, "openreview": 41, "forum": 41, "h1gsz30ckx": 41, "lucei": 41, "saragih": 41, "ambadar": 41, "matthew": 41, "action": 41, "emot": 41, "societi": 41, "june": 41, "cvprw": 41, "5543262": 41, "warden": 41, "speech": 41, "april": 41, "2018": 41, "1804": 41, "03209": 41, "ashia": 41, "wilson": 41, "rebecca": 41, "roelof": 41, "mitchel": 41, "stern": 41, "nathan": 41, "srebro": 41, "recht": 41, "1705": 41, "08292": 41}, "objects": {"": [[3, 0, 1, "_CPPv4N4N2D24CellE", "N2D2::Cell"], [3, 0, 1, "_CPPv4N4N2D24CellE", "N2D2::Cell"], [3, 1, 1, "_CPPv4N4N2D24Cell8addInputEP4CellRK6TensorIbE", "N2D2::Cell::addInput"], [3, 1, 1, "_CPPv4N4N2D24Cell8addInputEP4Celljjjj", "N2D2::Cell::addInput"], [3, 1, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjRK6TensorIbE", "N2D2::Cell::addInput"], [3, 1, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjjRK6TensorIbE", "N2D2::Cell::addInput"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputEP4CellRK6TensorIbE", "N2D2::Cell::addInput::cell"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputEP4Celljjjj", "N2D2::Cell::addInput::cell"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjjRK6TensorIbE", "N2D2::Cell::addInput::channel"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputEP4Celljjjj", "N2D2::Cell::addInput::height"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjRK6TensorIbE", "N2D2::Cell::addInput::height"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjjRK6TensorIbE", "N2D2::Cell::addInput::height"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputEP4CellRK6TensorIbE", "N2D2::Cell::addInput::mapping"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjRK6TensorIbE", "N2D2::Cell::addInput::mapping"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjjRK6TensorIbE", "N2D2::Cell::addInput::mapping"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjRK6TensorIbE", "N2D2::Cell::addInput::sp"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjjRK6TensorIbE", "N2D2::Cell::addInput::sp"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputEP4Celljjjj", "N2D2::Cell::addInput::width"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjRK6TensorIbE", "N2D2::Cell::addInput::width"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjjRK6TensorIbE", "N2D2::Cell::addInput::width"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputEP4Celljjjj", "N2D2::Cell::addInput::x0"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjRK6TensorIbE", "N2D2::Cell::addInput::x0"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjjRK6TensorIbE", "N2D2::Cell::addInput::x0"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputEP4Celljjjj", "N2D2::Cell::addInput::y0"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjRK6TensorIbE", "N2D2::Cell::addInput::y0"], [3, 2, 1, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjjRK6TensorIbE", "N2D2::Cell::addInput::y0"], [3, 1, 1, "_CPPv4NK4N2D24Cell13getInputsDimsEv", "N2D2::Cell::getInputsDims"], [3, 1, 1, "_CPPv4NK4N2D24Cell7getNameEv", "N2D2::Cell::getName"], [3, 1, 1, "_CPPv4NK4N2D24Cell14getOutputsDimsEv", "N2D2::Cell::getOutputsDims"], [3, 1, 1, "_CPPv4NK4N2D24Cell7getTypeEv", "N2D2::Cell::getType"], [3, 1, 1, "_CPPv4N4N2D24Cell10initializeEv", "N2D2::Cell::initialize"], [3, 0, 1, "_CPPv4N4N2D214Cell_Frame_TopE", "N2D2::Cell_Frame_Top"], [3, 0, 1, "_CPPv4N4N2D214Cell_Frame_TopE", "N2D2::Cell_Frame_Top"], [3, 1, 1, "_CPPv4N4N2D214Cell_Frame_Top13backPropagateEv", "N2D2::Cell_Frame_Top::backPropagate"], [3, 1, 1, "_CPPv4NK4N2D214Cell_Frame_Top13getActivationEv", "N2D2::Cell_Frame_Top::getActivation"], [3, 1, 1, "_CPPv4N4N2D214Cell_Frame_Top9propagateEb", "N2D2::Cell_Frame_Top::propagate"], [3, 2, 1, "_CPPv4N4N2D214Cell_Frame_Top9propagateEb", "N2D2::Cell_Frame_Top::propagate::inference"], [3, 1, 1, "_CPPv4N4N2D214Cell_Frame_Top13setActivationERKNSt10shared_ptrI10ActivationEE", "N2D2::Cell_Frame_Top::setActivation"], [3, 2, 1, "_CPPv4N4N2D214Cell_Frame_Top13setActivationERKNSt10shared_ptrI10ActivationEE", "N2D2::Cell_Frame_Top::setActivation::activation"], [3, 1, 1, "_CPPv4N4N2D214Cell_Frame_Top6updateEv", "N2D2::Cell_Frame_Top::update"], [3, 0, 1, "_CPPv4N4N2D28ConvCellE", "N2D2::ConvCell"], [3, 1, 1, "_CPPv4NK4N2D28ConvCell7getBiasEjR10BaseTensor", "N2D2::ConvCell::getBias"], [3, 2, 1, "_CPPv4NK4N2D28ConvCell7getBiasEjR10BaseTensor", "N2D2::ConvCell::getBias::output"], [3, 2, 1, "_CPPv4NK4N2D28ConvCell7getBiasEjR10BaseTensor", "N2D2::ConvCell::getBias::value"], [3, 1, 1, "_CPPv4NK4N2D28ConvCell9getWeightEjjR10BaseTensor", "N2D2::ConvCell::getWeight"], [3, 2, 1, "_CPPv4NK4N2D28ConvCell9getWeightEjjR10BaseTensor", "N2D2::ConvCell::getWeight::channel"], [3, 2, 1, "_CPPv4NK4N2D28ConvCell9getWeightEjjR10BaseTensor", "N2D2::ConvCell::getWeight::output"], [3, 2, 1, "_CPPv4NK4N2D28ConvCell9getWeightEjjR10BaseTensor", "N2D2::ConvCell::getWeight::value"], [3, 1, 1, "_CPPv4N4N2D28ConvCell7setBiasEjRK10BaseTensor", "N2D2::ConvCell::setBias"], [3, 2, 1, "_CPPv4N4N2D28ConvCell7setBiasEjRK10BaseTensor", "N2D2::ConvCell::setBias::output"], [3, 2, 1, "_CPPv4N4N2D28ConvCell7setBiasEjRK10BaseTensor", "N2D2::ConvCell::setBias::value"], [3, 1, 1, "_CPPv4N4N2D28ConvCell13setBiasFillerERKNSt10shared_ptrI6FillerEE", "N2D2::ConvCell::setBiasFiller"], [3, 2, 1, "_CPPv4N4N2D28ConvCell13setBiasFillerERKNSt10shared_ptrI6FillerEE", "N2D2::ConvCell::setBiasFiller::filler"], [3, 1, 1, "_CPPv4N4N2D28ConvCell13setBiasSolverERKNSt10shared_ptrI6SolverEE", "N2D2::ConvCell::setBiasSolver"], [3, 2, 1, "_CPPv4N4N2D28ConvCell13setBiasSolverERKNSt10shared_ptrI6SolverEE", "N2D2::ConvCell::setBiasSolver::solver"], [3, 1, 1, "_CPPv4N4N2D28ConvCell9setWeightEjjRK10BaseTensor", "N2D2::ConvCell::setWeight"], [3, 2, 1, "_CPPv4N4N2D28ConvCell9setWeightEjjRK10BaseTensor", "N2D2::ConvCell::setWeight::channel"], [3, 2, 1, "_CPPv4N4N2D28ConvCell9setWeightEjjRK10BaseTensor", "N2D2::ConvCell::setWeight::output"], [3, 2, 1, "_CPPv4N4N2D28ConvCell9setWeightEjjRK10BaseTensor", "N2D2::ConvCell::setWeight::value"], [3, 1, 1, "_CPPv4N4N2D28ConvCell16setWeightsFillerERKNSt10shared_ptrI6FillerEE", "N2D2::ConvCell::setWeightsFiller"], [3, 2, 1, "_CPPv4N4N2D28ConvCell16setWeightsFillerERKNSt10shared_ptrI6FillerEE", "N2D2::ConvCell::setWeightsFiller::filler"], [3, 1, 1, "_CPPv4N4N2D28ConvCell16setWeightsSolverERKNSt10shared_ptrI6SolverEE", "N2D2::ConvCell::setWeightsSolver"], [3, 2, 1, "_CPPv4N4N2D28ConvCell16setWeightsSolverERKNSt10shared_ptrI6SolverEE", "N2D2::ConvCell::setWeightsSolver::solver"]], "N2D2": [[1, 3, 1, "", "AER_Database"], [1, 3, 1, "", "Actitracker_Database"], [1, 3, 1, "", "Activation"], [1, 3, 1, "", "AffineTransformation"], [1, 3, 1, "", "AnchorCell"], [1, 3, 1, "", "AnchorCell_Frame"], [1, 3, 1, "", "AnchorCell_Frame_CUDA"], [1, 3, 1, "", "ApodizationTransformation"], [1, 3, 1, "", "BaseTensor"], [1, 3, 1, "", "BatchNormCell"], [1, 3, 1, "", "BatchNormCell_Frame_CUDA_double"], [1, 3, 1, "", "BatchNormCell_Frame_CUDA_float"], [1, 3, 1, "", "BatchNormCell_Frame_double"], [1, 3, 1, "", "BatchNormCell_Frame_float"], [1, 3, 1, "", "CIFAR_Database"], [1, 3, 1, "", "CKP_Database"], [1, 3, 1, "", "Caltech101_DIR_Database"], [1, 3, 1, "", "Caltech256_DIR_Database"], [1, 3, 1, "", "CaltechPedestrian_Database"], [1, 3, 1, "", "CelebA_Database"], [1, 3, 1, "", "Cell"], [1, 3, 1, "", "Cell_Frame_CUDA_double"], [1, 3, 1, "", "Cell_Frame_CUDA_float"], [1, 3, 1, "", "Cell_Frame_Top"], [1, 3, 1, "", "Cell_Frame_double"], [1, 3, 1, "", "Cell_Frame_float"], [1, 3, 1, "", "ChannelExtractionTransformation"], [1, 3, 1, "", "ColorSpaceTransformation"], [1, 3, 1, "", "CompositeTransformation"], [1, 3, 1, "", "CompressionNoiseTransformation"], [1, 3, 1, "", "ConvCell"], [1, 3, 1, "", "ConvCell_Frame_CUDA_double"], [1, 3, 1, "", "ConvCell_Frame_CUDA_float"], [1, 3, 1, "", "ConvCell_Frame_double"], [1, 3, 1, "", "ConvCell_Frame_float"], [1, 3, 1, "", "CudaBaseDeviceTensor"], [1, 3, 1, "", "CudaBaseTensor"], [1, 3, 1, "", "CudaTensor_double"], [1, 3, 1, "", "CudaTensor_float"], [1, 3, 1, "", "DCTTransformation"], [1, 3, 1, "", "DFTTransformation"], [1, 3, 1, "", "DIR_Database"], [1, 3, 1, "", "DOTA_Database"], [1, 3, 1, "", "Daimler_Database"], [1, 3, 1, "", "Database"], [1, 3, 1, "", "DeconvCell"], [1, 3, 1, "", "DeconvCell_Frame_CUDA_double"], [1, 3, 1, "", "DeconvCell_Frame_CUDA_float"], [1, 3, 1, "", "DeconvCell_Frame_double"], [1, 3, 1, "", "DeconvCell_Frame_float"], [1, 3, 1, "", "DeepNet"], [1, 3, 1, "", "DistortionTransformation"], [1, 3, 1, "", "DropoutCell"], [1, 3, 1, "", "DropoutCell_Frame_CUDA_double"], [1, 3, 1, "", "DropoutCell_Frame_CUDA_float"], [1, 3, 1, "", "DropoutCell_Frame_double"], [1, 3, 1, "", "DropoutCell_Frame_float"], [1, 3, 1, "", "ElemWiseCell"], [1, 3, 1, "", "ElemWiseCell_Frame"], [1, 3, 1, "", "ElemWiseCell_Frame_CUDA"], [1, 3, 1, "", "EqualizeTransformation"], [1, 3, 1, "", "ExpandLabelTransformation"], [1, 3, 1, "", "FDDB_Database"], [1, 3, 1, "", "FMPCell"], [1, 3, 1, "", "FMPCell_Frame"], [1, 3, 1, "", "FMPCell_Frame_CUDA"], [1, 3, 1, "", "Fashion_MNIST_IDX_Database"], [1, 3, 1, "", "FcCell"], [1, 3, 1, "", "FcCell_Frame_CUDA_double"], [1, 3, 1, "", "FcCell_Frame_CUDA_float"], [1, 3, 1, "", "FcCell_Frame_double"], [1, 3, 1, "", "FcCell_Frame_float"], [1, 3, 1, "", "Filler"], [1, 3, 1, "", "FilterTransformation"], [1, 3, 1, "", "FlipTransformation"], [1, 3, 1, "", "GTSDB_DIR_Database"], [1, 3, 1, "", "GTSRB_DIR_Database"], [1, 3, 1, "", "GradientFilterTransformation"], [1, 3, 1, "", "IDX_Database"], [1, 3, 1, "", "ILSVRC2012_Database"], [1, 3, 1, "", "IMDBWIKI_Database"], [1, 3, 1, "", "KITTI_Database"], [1, 3, 1, "", "KITTI_Object_Database"], [1, 3, 1, "", "KITTI_Road_Database"], [1, 3, 1, "", "LITISRouen_Database"], [1, 3, 1, "", "LRNCell"], [1, 3, 1, "", "LRNCell_Frame_CUDA_double"], [1, 3, 1, "", "LRNCell_Frame_CUDA_float"], [1, 3, 1, "", "LRNCell_Frame_double"], [1, 3, 1, "", "LRNCell_Frame_float"], [1, 3, 1, "", "LSTMCell"], [1, 3, 1, "", "LSTMCell_Frame_CUDA_double"], [1, 3, 1, "", "LSTMCell_Frame_CUDA_float"], [1, 3, 1, "", "LabelExtractionTransformation"], [1, 3, 1, "", "LabelSliceExtractionTransformation"], [1, 3, 1, "", "LinearActivation"], [1, 3, 1, "", "LinearActivation_Frame_CUDA_double"], [1, 3, 1, "", "LinearActivation_Frame_CUDA_float"], [1, 3, 1, "", "LinearActivation_Frame_double"], [1, 3, 1, "", "LinearActivation_Frame_float"], [1, 3, 1, "", "LogisticActivation"], [1, 3, 1, "", "MNIST_IDX_Database"], [1, 3, 1, "", "MagnitudePhaseTransformation"], [1, 3, 1, "", "MorphologicalReconstructionTransformation"], [1, 3, 1, "", "MorphologyTransformation"], [1, 3, 1, "", "N_MNIST_Database"], [1, 3, 1, "", "NormalizeCell"], [1, 3, 1, "", "NormalizeCell_Frame_CUDA_double"], [1, 3, 1, "", "NormalizeCell_Frame_CUDA_float"], [1, 3, 1, "", "NormalizeCell_Frame_double"], [1, 3, 1, "", "NormalizeCell_Frame_float"], [1, 3, 1, "", "NormalizeTransformation"], [1, 3, 1, "", "ObjectDetCell"], [1, 3, 1, "", "ObjectDetCell_Frame"], [1, 3, 1, "", "ObjectDetCell_Frame_CUDA"], [1, 3, 1, "", "PadCropTransformation"], [1, 3, 1, "", "PaddingCell"], [1, 3, 1, "", "PaddingCell_Frame"], [1, 3, 1, "", "PaddingCell_Frame_CUDA"], [1, 3, 1, "", "PoolCell"], [1, 3, 1, "", "PoolCell_Frame_CUDA_double"], [1, 3, 1, "", "PoolCell_Frame_CUDA_float"], [1, 3, 1, "", "PoolCell_Frame_EXT_CUDA_double"], [1, 3, 1, "", "PoolCell_Frame_EXT_CUDA_float"], [1, 3, 1, "", "PoolCell_Frame_double"], [1, 3, 1, "", "PoolCell_Frame_float"], [1, 3, 1, "", "ProposalCell"], [1, 3, 1, "", "ProposalCell_Frame"], [1, 3, 1, "", "ProposalCell_Frame_CUDA"], [1, 3, 1, "", "ROIPoolingCell"], [1, 3, 1, "", "ROIPoolingCell_Frame"], [1, 3, 1, "", "ROIPoolingCell_Frame_CUDA"], [1, 3, 1, "", "RPCell"], [1, 3, 1, "", "RPCell_Frame"], [1, 3, 1, "", "RPCell_Frame_CUDA"], [1, 3, 1, "", "RandomAffineTransformation"], [1, 3, 1, "", "RangeAffineTransformation"], [1, 3, 1, "", "RangeClippingTransformation"], [1, 3, 1, "", "RectifierActivation"], [1, 3, 1, "", "RectifierActivation_Frame_CUDA_double"], [1, 3, 1, "", "RectifierActivation_Frame_CUDA_float"], [1, 3, 1, "", "RectifierActivation_Frame_double"], [1, 3, 1, "", "RectifierActivation_Frame_float"], [1, 3, 1, "", "RescaleTransformation"], [1, 3, 1, "", "ReshapeTransformation"], [1, 3, 1, "", "ResizeCell"], [1, 3, 1, "", "ResizeCell_Frame"], [1, 3, 1, "", "ResizeCell_Frame_CUDA"], [1, 3, 1, "", "SaturationActivation"], [1, 3, 1, "", "ScalingCell"], [1, 3, 1, "", "ScalingCell_Frame_CUDA_double"], [1, 3, 1, "", "ScalingCell_Frame_CUDA_float"], [1, 3, 1, "", "ScalingCell_Frame_double"], [1, 3, 1, "", "ScalingCell_Frame_float"], [1, 3, 1, "", "SliceExtractionTransformation"], [1, 3, 1, "", "SoftmaxCell"], [1, 3, 1, "", "SoftmaxCell_Frame_CUDA_double"], [1, 3, 1, "", "SoftmaxCell_Frame_CUDA_float"], [1, 3, 1, "", "SoftmaxCell_Frame_double"], [1, 3, 1, "", "SoftmaxCell_Frame_float"], [1, 3, 1, "", "SoftplusActivation"], [1, 3, 1, "", "Solver"], [1, 3, 1, "", "StimuliProvider"], [1, 3, 1, "", "SwishActivation"], [1, 3, 1, "", "SwishActivation_Frame_CUDA_double"], [1, 3, 1, "", "SwishActivation_Frame_CUDA_float"], [1, 3, 1, "", "SwishActivation_Frame_double"], [1, 3, 1, "", "SwishActivation_Frame_float"], [1, 3, 1, "", "TanhActivation"], [1, 3, 1, "", "TanhActivation_Frame_CUDA_double"], [1, 3, 1, "", "TanhActivation_Frame_CUDA_float"], [1, 3, 1, "", "TanhActivation_Frame_double"], [1, 3, 1, "", "TanhActivation_Frame_float"], [1, 3, 1, "", "Target"], [1, 3, 1, "", "TargetBiasCell"], [1, 3, 1, "", "TargetBiasCell_Frame_CUDA_double"], [1, 3, 1, "", "TargetBiasCell_Frame_CUDA_float"], [1, 3, 1, "", "TargetBiasCell_Frame_double"], [1, 3, 1, "", "TargetBiasCell_Frame_float"], [1, 3, 1, "", "Tensor_bool"], [1, 3, 1, "", "Tensor_double"], [1, 3, 1, "", "Tensor_float"], [1, 3, 1, "", "ThresholdCell"], [1, 3, 1, "", "ThresholdCell_Frame"], [1, 3, 1, "", "ThresholdCell_Frame_CUDA"], [1, 3, 1, "", "ThresholdTransformation"], [1, 3, 1, "", "Transformation"], [1, 3, 1, "", "TransformationCell"], [1, 3, 1, "", "TransformationCell_Frame"], [1, 3, 1, "", "TransformationCell_Frame_CUDA"], [1, 3, 1, "", "UnpoolCell"], [1, 3, 1, "", "UnpoolCell_Frame"], [1, 3, 1, "", "UnpoolCell_Frame_CUDA"], [1, 3, 1, "", "WallisFilterTransformation"]], "N2D2.AER_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.AER_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.AER_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Actitracker_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.Actitracker_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Actitracker_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Activation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "setQuantizer"]], "N2D2.AffineTransformation": [[1, 3, 1, "", "Operator"], [1, 4, 1, "", "__init__"]], "N2D2.AffineTransformation.Operator": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.AnchorCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.AnchorCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.AnchorCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.AnchorCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.AnchorCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.AnchorCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.AnchorCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.AnchorCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ApodizationTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.BaseTensor": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "clear"], [1, 4, 1, "", "dimB"], [1, 4, 1, "", "dimD"], [1, 4, 1, "", "dimX"], [1, 4, 1, "", "dimY"], [1, 4, 1, "", "dimZ"], [1, 4, 1, "", "dims"], [1, 4, 1, "", "empty"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getTypeName"], [1, 4, 1, "", "isValid"], [1, 4, 1, "", "nbDims"], [1, 4, 1, "", "op_assign"], [1, 4, 1, "", "reshape"], [1, 4, 1, "", "resize"], [1, 4, 1, "", "setValid"], [1, 4, 1, "", "size"], [1, 4, 1, "", "synchronizeDBasedToH"], [1, 4, 1, "", "synchronizeDToH"], [1, 4, 1, "", "synchronizeDToHBased"], [1, 4, 1, "", "synchronizeHBasedToD"], [1, 4, 1, "", "synchronizeHToD"], [1, 4, 1, "", "synchronizeHToDBased"]], "N2D2.BatchNormCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getEpsilon"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMeans"], [1, 4, 1, "", "getMovingAverageMomentum"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaleSolver"], [1, 4, 1, "", "getScales"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getVariances"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setMean"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setScale"], [1, 4, 1, "", "setScaleSolver"], [1, 4, 1, "", "setVariance"]], "N2D2.BatchNormCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.BatchNormCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getEpsilon"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getMeans"], [1, 4, 1, "", "getMovingAverageMomentum"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaleSolver"], [1, 4, 1, "", "getScales"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getVariances"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setMean"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setScale"], [1, 4, 1, "", "setScaleSolver"], [1, 4, 1, "", "setVariance"], [1, 4, 1, "", "update"]], "N2D2.BatchNormCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.BatchNormCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.BatchNormCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getEpsilon"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getMeans"], [1, 4, 1, "", "getMovingAverageMomentum"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaleSolver"], [1, 4, 1, "", "getScales"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getVariances"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setMean"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setScale"], [1, 4, 1, "", "setScaleSolver"], [1, 4, 1, "", "setVariance"], [1, 4, 1, "", "update"]], "N2D2.BatchNormCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.BatchNormCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.BatchNormCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getEpsilon"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getMeans"], [1, 4, 1, "", "getMovingAverageMomentum"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaleSolver"], [1, 4, 1, "", "getScales"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getVariances"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setMean"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setScale"], [1, 4, 1, "", "setScaleSolver"], [1, 4, 1, "", "setVariance"], [1, 4, 1, "", "update"]], "N2D2.BatchNormCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.BatchNormCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.BatchNormCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getEpsilon"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getMeans"], [1, 4, 1, "", "getMovingAverageMomentum"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaleSolver"], [1, 4, 1, "", "getScales"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getVariances"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setMean"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setScale"], [1, 4, 1, "", "setScaleSolver"], [1, 4, 1, "", "setVariance"], [1, 4, 1, "", "update"]], "N2D2.BatchNormCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.BatchNormCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CIFAR_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.CIFAR_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CIFAR_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CKP_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.CKP_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CKP_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Caltech101_DIR_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.Caltech101_DIR_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Caltech101_DIR_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Caltech256_DIR_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.Caltech256_DIR_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Caltech256_DIR_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CaltechPedestrian_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.CaltechPedestrian_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CaltechPedestrian_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CelebA_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.CelebA_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CelebA_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.Cell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.Cell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.Cell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell_Frame_Top": [[1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "update"]], "N2D2.Cell_Frame_Top.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.Cell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.Cell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Cell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ChannelExtractionTransformation": [[1, 3, 1, "", "Channel"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getChannel"]], "N2D2.ChannelExtractionTransformation.Channel": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ColorSpaceTransformation": [[1, 3, 1, "", "ColorSpace"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getColorSpace"]], "N2D2.ColorSpaceTransformation.ColorSpace": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CompositeTransformation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "push_back"], [1, 4, 1, "", "size"]], "N2D2.CompressionNoiseTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.ConvCell": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getSubSampleX"], [1, 4, 1, "", "getSubSampleY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"]], "N2D2.ConvCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDiffSynapses"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getSubSampleX"], [1, 4, 1, "", "getSubSampleY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "initializeWeightQuantizer"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetBias"], [1, 4, 1, "", "resetWeights"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.ConvCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_CUDA_double.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDiffSynapses"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getSubSampleX"], [1, 4, 1, "", "getSubSampleY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "initializeWeightQuantizer"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetBias"], [1, 4, 1, "", "resetWeights"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.ConvCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_CUDA_float.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getSubSampleX"], [1, 4, 1, "", "getSubSampleY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "initializeWeightQuantizer"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetBias"], [1, 4, 1, "", "resetWeights"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.ConvCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_double.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getSubSampleX"], [1, 4, 1, "", "getSubSampleY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "initializeWeightQuantizer"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetBias"], [1, 4, 1, "", "resetWeights"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.ConvCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ConvCell_Frame_float.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.CudaBaseDeviceTensor": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getCudaTensor"], [1, 4, 1, "", "getType"]], "N2D2.CudaBaseTensor": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "deviceTensor"], [1, 4, 1, "", "hostBased"]], "N2D2.CudaTensor_double": [[1, 4, 1, "", "__init__"]], "N2D2.CudaTensor_float": [[1, 4, 1, "", "__init__"]], "N2D2.DCTTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.DFTTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.DIR_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.DIR_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DIR_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DOTA_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.DOTA_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DOTA_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Daimler_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.Daimler_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Daimler_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeconvCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"]], "N2D2.DeconvCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeconvCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.DeconvCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeconvCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeconvCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.DeconvCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeconvCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeconvCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.DeconvCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeconvCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeconvCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getBiases"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDilationX"], [1, 4, 1, "", "getDilationY"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getKernelHeight"], [1, 4, 1, "", "getKernelWidth"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.DeconvCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeconvCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DeepNet": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "addCMonitor"], [1, 4, 1, "", "addCell"], [1, 4, 1, "", "addMonitor"], [1, 4, 1, "", "addTarget"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "cReset"], [1, 4, 1, "", "cTargetsProcess"], [1, 4, 1, "", "cTicks"], [1, 4, 1, "", "exportNetworkFreeParameters"], [1, 4, 1, "", "exportNetworkSolverParameters"], [1, 4, 1, "", "fuseBatchNorm"], [1, 4, 1, "", "getCMonitor"], [1, 4, 1, "", "getCell"], [1, 4, 1, "", "getCell_Frame_Top"], [1, 4, 1, "", "getCells"], [1, 4, 1, "", "getChildCells"], [1, 4, 1, "", "getDatabase"], [1, 4, 1, "", "getLayers"], [1, 4, 1, "", "getMasterDevice"], [1, 4, 1, "", "getMonitor"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNetwork"], [1, 4, 1, "", "getParentCells"], [1, 4, 1, "", "getStimuliProvider"], [1, 4, 1, "", "getTargets"], [1, 4, 1, "", "importNetworkFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeCMonitors"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadNetworkParameters"], [1, 4, 1, "", "log"], [1, 4, 1, "", "logEstimatedLabels"], [1, 4, 1, "", "logEstimatedLabelsJSON"], [1, 4, 1, "", "logFreeParameters"], [1, 4, 1, "", "logLabelsLegend"], [1, 4, 1, "", "logLabelsMapping"], [1, 4, 1, "", "logReceptiveFields"], [1, 4, 1, "", "logStats"], [1, 4, 1, "", "logTimings"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "removeCell"], [1, 4, 1, "", "removeDropout"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveNetworkParameters"], [1, 4, 1, "", "setDatabase"], [1, 4, 1, "", "setStimuliProvider"], [1, 4, 1, "", "spikeCodingCompare"], [1, 4, 1, "", "test"], [1, 4, 1, "", "update"]], "N2D2.DistortionTransformation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getElasticGaussianSize"], [1, 4, 1, "", "getElasticScaling"], [1, 4, 1, "", "getElasticSigma"], [1, 4, 1, "", "getIgnoreMissingData"], [1, 4, 1, "", "getRotation"], [1, 4, 1, "", "getScaling"]], "N2D2.DropoutCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDropout"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.DropoutCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DropoutCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDropout"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.DropoutCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DropoutCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DropoutCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDropout"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.DropoutCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DropoutCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DropoutCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDropout"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.DropoutCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DropoutCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DropoutCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getDropout"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.DropoutCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.DropoutCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell": [[1, 3, 1, "", "CoeffMode"], [1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Operation"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getCoeffMode"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOperation"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getShifts"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeights"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.ElemWiseCell.CoeffMode": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell.Operation": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell_Frame": [[1, 3, 1, "", "CoeffMode"], [1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Operation"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getCoeffMode"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOperation"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getShifts"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeights"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ElemWiseCell_Frame.CoeffMode": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell_Frame.Operation": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell_Frame_CUDA": [[1, 3, 1, "", "CoeffMode"], [1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Operation"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getCoeffMode"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOperation"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getShifts"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeights"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ElemWiseCell_Frame_CUDA.CoeffMode": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell_Frame_CUDA.Operation": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ElemWiseCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.EqualizeTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.ExpandLabelTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.FDDB_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.FDDB_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FDDB_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FMPCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.FMPCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FMPCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.FMPCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FMPCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FMPCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.FMPCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FMPCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Fashion_MNIST_IDX_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.Fashion_MNIST_IDX_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Fashion_MNIST_IDX_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"]], "N2D2.FcCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "initializeWeightQuantizer"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetBias"], [1, 4, 1, "", "resetWeights"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.FcCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_CUDA_double.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "initializeWeightQuantizer"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetBias"], [1, 4, 1, "", "resetWeights"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.FcCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_CUDA_float.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "initializeWeightQuantizer"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetBias"], [1, 4, 1, "", "resetWeights"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.FcCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_double.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 3, 1, "", "WeightsExportFormat"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBias"], [1, 4, 1, "", "getBiasFiller"], [1, 4, 1, "", "getBiasSolver"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getQuantizer"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWeight"], [1, 4, 1, "", "getWeightsFiller"], [1, 4, 1, "", "getWeightsSolver"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "initializeWeightQuantizer"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "resetBias"], [1, 4, 1, "", "resetWeights"], [1, 4, 1, "", "resetWeightsSolver"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setBias"], [1, 4, 1, "", "setBiasFiller"], [1, 4, 1, "", "setBiasSolver"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setQuantizer"], [1, 4, 1, "", "setWeight"], [1, 4, 1, "", "setWeightsFiller"], [1, 4, 1, "", "setWeightsSolver"], [1, 4, 1, "", "update"]], "N2D2.FcCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.FcCell_Frame_float.WeightsExportFormat": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Filler": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getType"]], "N2D2.FilterTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.FlipTransformation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getHorizontalFlip"], [1, 4, 1, "", "getRandomHorizontalFlip"], [1, 4, 1, "", "getRandomVerticalFlip"], [1, 4, 1, "", "getVerticalFlip"]], "N2D2.GTSDB_DIR_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.GTSDB_DIR_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.GTSDB_DIR_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.GTSRB_DIR_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "getValidation"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.GTSRB_DIR_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.GTSRB_DIR_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.GradientFilterTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.IDX_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.IDX_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.IDX_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ILSVRC2012_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getBackgroundClass"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getLearn"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "getUseValidationForTest"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.ILSVRC2012_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ILSVRC2012_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.IMDBWIKI_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.IMDBWIKI_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.IMDBWIKI_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.KITTI_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.KITTI_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.KITTI_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.KITTI_Object_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.KITTI_Object_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.KITTI_Object_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.KITTI_Road_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.KITTI_Road_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.KITTI_Road_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LITISRouen_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "loadDir"], [1, 4, 1, "", "setIgnoreMasks"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setValidExtensions"]], "N2D2.LITISRouen_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LITISRouen_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LRNCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.LRNCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LRNCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.LRNCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LRNCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LRNCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.LRNCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LRNCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LRNCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.LRNCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LRNCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LRNCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.LRNCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LRNCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LSTMCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.LSTMCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LSTMCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.LSTMCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LSTMCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LSTMCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.LSTMCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LSTMCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.LabelExtractionTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.LabelSliceExtractionTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.LinearActivation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getClipping"]], "N2D2.LinearActivation_Frame_CUDA_double": [[1, 4, 1, "", "__init__"]], "N2D2.LinearActivation_Frame_CUDA_float": [[1, 4, 1, "", "__init__"]], "N2D2.LinearActivation_Frame_double": [[1, 4, 1, "", "__init__"]], "N2D2.LinearActivation_Frame_float": [[1, 4, 1, "", "__init__"]], "N2D2.LogisticActivation": [[1, 4, 1, "", "__init__"]], "N2D2.MNIST_IDX_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.MNIST_IDX_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.MNIST_IDX_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.MagnitudePhaseTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.MorphologicalReconstructionTransformation": [[1, 3, 1, "", "Operation"], [1, 4, 1, "", "__init__"]], "N2D2.MorphologicalReconstructionTransformation.Operation": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.MorphologyTransformation": [[1, 3, 1, "", "Operation"], [1, 4, 1, "", "__init__"]], "N2D2.MorphologyTransformation.Operation": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.N_MNIST_Database": [[1, 3, 1, "", "StimuliSet"], [1, 3, 1, "", "StimuliSetMask"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getLabelName"], [1, 4, 1, "", "getNbStimuli"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getStimulusLabel"], [1, 4, 1, "", "load"], [1, 4, 1, "", "setParameter"]], "N2D2.N_MNIST_Database.StimuliSet": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.N_MNIST_Database.StimuliSetMask": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Norm"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.NormalizeCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell.Norm": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Norm"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.NormalizeCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_CUDA_double.Norm": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Norm"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.NormalizeCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_CUDA_float.Norm": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Norm"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.NormalizeCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_double.Norm": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Norm"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.NormalizeCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_float.Norm": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.NormalizeTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.ObjectDetCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.ObjectDetCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ObjectDetCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ObjectDetCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ObjectDetCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ObjectDetCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ObjectDetCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ObjectDetCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PadCropTransformation": [[1, 3, 1, "", "BorderType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getAdditiveWH"], [1, 4, 1, "", "getBorderType"], [1, 4, 1, "", "getBorderValue"], [1, 4, 1, "", "getHeight"], [1, 4, 1, "", "getWidth"]], "N2D2.PadCropTransformation.BorderType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PaddingCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBotPad"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getLeftPad"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getRightPad"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getTopPad"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.PaddingCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PaddingCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBotPad"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getLeftPad"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getRightPad"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getTopPad"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.PaddingCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PaddingCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PaddingCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getBotPad"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getLeftPad"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getRightPad"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getTopPad"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.PaddingCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PaddingCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPoolHeight"], [1, 4, 1, "", "getPoolWidth"], [1, 4, 1, "", "getPooling"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.PoolCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPoolHeight"], [1, 4, 1, "", "getPoolWidth"], [1, 4, 1, "", "getPooling"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.PoolCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_CUDA_double.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPoolHeight"], [1, 4, 1, "", "getPoolWidth"], [1, 4, 1, "", "getPooling"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.PoolCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_CUDA_float.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_EXT_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPoolHeight"], [1, 4, 1, "", "getPoolWidth"], [1, 4, 1, "", "getPooling"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.PoolCell_Frame_EXT_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_EXT_CUDA_double.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_EXT_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_EXT_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPoolHeight"], [1, 4, 1, "", "getPoolWidth"], [1, 4, 1, "", "getPooling"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.PoolCell_Frame_EXT_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_EXT_CUDA_float.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_EXT_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPoolHeight"], [1, 4, 1, "", "getPoolWidth"], [1, 4, 1, "", "getPooling"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.PoolCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_double.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getPaddingX"], [1, 4, 1, "", "getPaddingY"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPoolHeight"], [1, 4, 1, "", "getPoolWidth"], [1, 4, 1, "", "getPooling"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getStrideX"], [1, 4, 1, "", "getStrideY"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.PoolCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_float.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.PoolCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ProposalCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.ProposalCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ProposalCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ProposalCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ProposalCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ProposalCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ProposalCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ProposalCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ROIPoolingCell": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "ROIPooling"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.ROIPoolingCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ROIPoolingCell.ROIPooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ROIPoolingCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "ROIPooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ROIPoolingCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ROIPoolingCell_Frame.ROIPooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ROIPoolingCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ROIPoolingCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "ROIPooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ROIPoolingCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ROIPoolingCell_Frame_CUDA.ROIPooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ROIPoolingCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.RPCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.RPCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.RPCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.RPCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.RPCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.RPCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.RPCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.RPCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.RandomAffineTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.RangeAffineTransformation": [[1, 3, 1, "", "Operator"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getFirstOperator"], [1, 4, 1, "", "getFirstValue"], [1, 4, 1, "", "getSecondOperator"], [1, 4, 1, "", "getSecondValue"], [1, 4, 1, "", "getTruncate"]], "N2D2.RangeAffineTransformation.Operator": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.RangeClippingTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.RectifierActivation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getClipping"], [1, 4, 1, "", "getLeakSlope"]], "N2D2.RectifierActivation_Frame_CUDA_double": [[1, 4, 1, "", "__init__"]], "N2D2.RectifierActivation_Frame_CUDA_float": [[1, 4, 1, "", "__init__"]], "N2D2.RectifierActivation_Frame_double": [[1, 4, 1, "", "__init__"]], "N2D2.RectifierActivation_Frame_float": [[1, 4, 1, "", "__init__"]], "N2D2.RescaleTransformation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getHeight"], [1, 4, 1, "", "getKeepAspectRatio"], [1, 4, 1, "", "getResizeToFit"], [1, 4, 1, "", "getWidth"]], "N2D2.ReshapeTransformation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbCols"], [1, 4, 1, "", "getNbRows"]], "N2D2.ResizeCell": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "ResizeMode"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMode"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getResizeOutputHeight"], [1, 4, 1, "", "getResizeOutputWidth"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.ResizeCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ResizeCell.ResizeMode": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ResizeCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "ResizeMode"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getMode"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getResizeOutputHeight"], [1, 4, 1, "", "getResizeOutputWidth"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ResizeCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ResizeCell_Frame.ResizeMode": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ResizeCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ResizeCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "ResizeMode"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getMode"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getResizeOutputHeight"], [1, 4, 1, "", "getResizeOutputWidth"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ResizeCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ResizeCell_Frame_CUDA.ResizeMode": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ResizeCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SaturationActivation": [[1, 4, 1, "", "__init__"]], "N2D2.ScalingCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaling"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.ScalingCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ScalingCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaling"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ScalingCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ScalingCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ScalingCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaling"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ScalingCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ScalingCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ScalingCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaling"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ScalingCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ScalingCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ScalingCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getScaling"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ScalingCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ScalingCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SliceExtractionTransformation": [[1, 3, 1, "", "BorderType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "getAllowPadding"], [1, 4, 1, "", "getBorderType"], [1, 4, 1, "", "getBorderValue"], [1, 4, 1, "", "getHeight"], [1, 4, 1, "", "getOffsetX"], [1, 4, 1, "", "getOffsetY"], [1, 4, 1, "", "getRandomOffsetX"], [1, 4, 1, "", "getRandomOffsetY"], [1, 4, 1, "", "getRandomRotation"], [1, 4, 1, "", "getRandomRotationRange"], [1, 4, 1, "", "getRandomScaling"], [1, 4, 1, "", "getRandomScalingRange"], [1, 4, 1, "", "getWidth"]], "N2D2.SliceExtractionTransformation.BorderType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftmaxCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getGroupSize"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWithLoss"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWithLoss"]], "N2D2.SoftmaxCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftmaxCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getGroupSize"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWithLoss"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWithLoss"], [1, 4, 1, "", "update"]], "N2D2.SoftmaxCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftmaxCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftmaxCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getGroupSize"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWithLoss"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWithLoss"], [1, 4, 1, "", "update"]], "N2D2.SoftmaxCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftmaxCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftmaxCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getGroupSize"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWithLoss"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWithLoss"], [1, 4, 1, "", "update"]], "N2D2.SoftmaxCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftmaxCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftmaxCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getGroupSize"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "getWithLoss"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "setWithLoss"], [1, 4, 1, "", "update"]], "N2D2.SoftmaxCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftmaxCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.SoftplusActivation": [[1, 4, 1, "", "__init__"]], "N2D2.Solver": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getType"]], "N2D2.StimuliProvider": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "addOnTheFlyTransformation"], [1, 4, 1, "", "addTransformation"], [1, 4, 1, "", "allBatchsProvided"], [1, 4, 1, "", "getBatchSize"], [1, 4, 1, "", "getData"], [1, 4, 1, "", "getDataChannel"], [1, 4, 1, "", "getDatabase"], [1, 4, 1, "", "getLabelsData"], [1, 4, 1, "", "getLabelsDataChannel"], [1, 4, 1, "", "getLabelsROIs"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getOnTheFlyTransformation"], [1, 4, 1, "", "getSize"], [1, 4, 1, "", "getSizeD"], [1, 4, 1, "", "getSizeX"], [1, 4, 1, "", "getSizeY"], [1, 4, 1, "", "getTransformation"], [1, 4, 1, "", "isCompositeStimuli"], [1, 4, 1, "", "normalizeIntegersStimuli"], [1, 4, 1, "", "readBatch"], [1, 4, 1, "", "readRandomBatch"], [1, 4, 1, "", "setBatch"], [1, 4, 1, "", "setStreamedLabel"], [1, 4, 1, "", "setStreamedTensor"], [1, 4, 1, "", "streamBatch"]], "N2D2.SwishActivation": [[1, 4, 1, "", "__init__"]], "N2D2.SwishActivation_Frame_CUDA_double": [[1, 4, 1, "", "__init__"]], "N2D2.SwishActivation_Frame_CUDA_float": [[1, 4, 1, "", "__init__"]], "N2D2.SwishActivation_Frame_double": [[1, 4, 1, "", "__init__"]], "N2D2.SwishActivation_Frame_float": [[1, 4, 1, "", "__init__"]], "N2D2.TanhActivation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getAlpha"]], "N2D2.TanhActivation_Frame_CUDA_double": [[1, 4, 1, "", "__init__"]], "N2D2.TanhActivation_Frame_CUDA_float": [[1, 4, 1, "", "__init__"]], "N2D2.TanhActivation_Frame_double": [[1, 4, 1, "", "__init__"]], "N2D2.TanhActivation_Frame_float": [[1, 4, 1, "", "__init__"]], "N2D2.Target": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "clear"], [1, 4, 1, "", "getCell"], [1, 4, 1, "", "getDefaultTarget"], [1, 4, 1, "", "getDefaultValue"], [1, 4, 1, "", "getEstimatedLabel"], [1, 4, 1, "", "getEstimatedLabels"], [1, 4, 1, "", "getEstimatedLabelsValue"], [1, 4, 1, "", "getLabelTarget"], [1, 4, 1, "", "getLoss"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbTargets"], [1, 4, 1, "", "getStimuliProvider"], [1, 4, 1, "", "getTargetLabels"], [1, 4, 1, "", "getTargetLabelsName"], [1, 4, 1, "", "getTargetTopN"], [1, 4, 1, "", "getTargetValue"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "labelsMapping"], [1, 4, 1, "", "log"], [1, 4, 1, "", "logEstimatedLabels"], [1, 4, 1, "", "logEstimatedLabelsJSON"], [1, 4, 1, "", "logLabelsLegend"], [1, 4, 1, "", "logLabelsMapping"], [1, 4, 1, "", "process"], [1, 4, 1, "", "provideTargets"], [1, 4, 1, "", "setDefaultTarget"], [1, 4, 1, "", "setLabelTarget"], [1, 4, 1, "", "setMaskLabelTarget"], [1, 4, 1, "", "setStimuliProvider"]], "N2D2.TargetBiasCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.TargetBiasCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TargetBiasCell_Frame_CUDA_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.TargetBiasCell_Frame_CUDA_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TargetBiasCell_Frame_CUDA_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TargetBiasCell_Frame_CUDA_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.TargetBiasCell_Frame_CUDA_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TargetBiasCell_Frame_CUDA_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TargetBiasCell_Frame_double": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.TargetBiasCell_Frame_double.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TargetBiasCell_Frame_double.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TargetBiasCell_Frame_float": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.TargetBiasCell_Frame_float.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TargetBiasCell_Frame_float.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.Tensor_bool": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "fill"], [1, 4, 1, "", "mean"], [1, 4, 1, "", "sum"]], "N2D2.Tensor_double": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "fill"], [1, 4, 1, "", "mean"], [1, 4, 1, "", "sum"]], "N2D2.Tensor_float": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "fill"], [1, 4, 1, "", "mean"], [1, 4, 1, "", "sum"]], "N2D2.ThresholdCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.ThresholdCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ThresholdCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ThresholdCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ThresholdCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ThresholdCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.ThresholdCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ThresholdCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.ThresholdTransformation": [[1, 4, 1, "", "__init__"]], "N2D2.Transformation": [[1, 4, 1, "", "__init__"], [1, 4, 1, "", "getType"]], "N2D2.TransformationCell": [[1, 3, 1, "", "FreeParametersType"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getTransformation"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.TransformationCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TransformationCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getTransformation"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.TransformationCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TransformationCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TransformationCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getTransformation"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.TransformationCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.TransformationCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.UnpoolCell": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "load"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setParameter"]], "N2D2.UnpoolCell.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.UnpoolCell.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.UnpoolCell_Frame": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.UnpoolCell_Frame.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.UnpoolCell_Frame.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.UnpoolCell_Frame.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.UnpoolCell_Frame_CUDA": [[1, 3, 1, "", "FreeParametersType"], [1, 3, 1, "", "Pooling"], [1, 3, 1, "", "Signals"], [1, 4, 1, "", "__init__"], [1, 4, 1, "", "addInput"], [1, 4, 1, "", "addInputBis"], [1, 4, 1, "", "addMultiscaleInput"], [1, 4, 1, "", "applyLoss"], [1, 4, 1, "", "backPropagate"], [1, 4, 1, "", "checkGradient"], [1, 4, 1, "", "clearInputTensors"], [1, 4, 1, "", "clearInputs"], [1, 4, 1, "", "clearOutputTensors"], [1, 4, 1, "", "exportActivationParameters"], [1, 4, 1, "", "exportFreeParameters"], [1, 4, 1, "", "exportQuantFreeParameters"], [1, 4, 1, "", "getActivation"], [1, 4, 1, "", "getAssociatedDeepNet"], [1, 4, 1, "", "getChildrenCells"], [1, 4, 1, "", "getDiffInputs"], [1, 4, 1, "", "getDiffOutputs"], [1, 4, 1, "", "getInputs"], [1, 4, 1, "", "getInputsDims"], [1, 4, 1, "", "getInputsSize"], [1, 4, 1, "", "getMapping"], [1, 4, 1, "", "getMaxOutput"], [1, 4, 1, "", "getName"], [1, 4, 1, "", "getNbChannels"], [1, 4, 1, "", "getNbOutputs"], [1, 4, 1, "", "getOutputs"], [1, 4, 1, "", "getOutputsHeight"], [1, 4, 1, "", "getOutputsWidth"], [1, 4, 1, "", "getParameterAndType"], [1, 4, 1, "", "getParameters"], [1, 4, 1, "", "getParentsCells"], [1, 4, 1, "", "getPyDataType"], [1, 4, 1, "", "getPyModel"], [1, 4, 1, "", "getQuantizedNbBits"], [1, 4, 1, "", "getStats"], [1, 4, 1, "", "getType"], [1, 4, 1, "", "importActivationParameters"], [1, 4, 1, "", "importFreeParameters"], [1, 4, 1, "", "initialize"], [1, 4, 1, "", "initializeDataDependent"], [1, 4, 1, "", "initializeParameters"], [1, 4, 1, "", "linkInput"], [1, 4, 1, "", "load"], [1, 4, 1, "", "propagate"], [1, 4, 1, "", "save"], [1, 4, 1, "", "saveFreeParameters"], [1, 4, 1, "", "setActivation"], [1, 4, 1, "", "setDiffInputs"], [1, 4, 1, "", "setDiffInputsValid"], [1, 4, 1, "", "setMapping"], [1, 4, 1, "", "setOutputErrors"], [1, 4, 1, "", "setOutputTarget"], [1, 4, 1, "", "setOutputTargets"], [1, 4, 1, "", "setParameter"], [1, 4, 1, "", "update"]], "N2D2.UnpoolCell_Frame_CUDA.FreeParametersType": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.UnpoolCell_Frame_CUDA.Pooling": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.UnpoolCell_Frame_CUDA.Signals": [[1, 4, 1, "", "__init__"], [1, 5, 1, "", "name"]], "N2D2.WallisFilterTransformation": [[1, 4, 1, "", "__init__"]], "keras_to_n2d2": [[35, 3, 1, "", "CustomSequential"], [35, 6, 1, "", "wrap"]], "keras_to_n2d2.CustomSequential": [[35, 4, 1, "", "__init__"], [35, 4, 1, "", "call"], [35, 4, 1, "", "compile"], [35, 4, 1, "", "custom_op"], [35, 4, 1, "", "get_deepnet_cell"], [35, 4, 1, "", "summary"]], "n2d2": [[25, 3, 1, "", "ConfigSection"], [37, 3, 1, "", "Tensor"]], "n2d2.Tensor": [[37, 4, 1, "", "N2D2"], [37, 4, 1, "", "__init__"], [37, 4, 1, "", "back_propagate"], [37, 4, 1, "", "copy"], [37, 4, 1, "", "cpu"], [37, 4, 1, "", "cuda"], [37, 4, 1, "", "data_type"], [37, 4, 1, "", "detach"], [37, 4, 1, "", "dims"], [37, 4, 1, "", "draw_associated_graph"], [37, 4, 1, "", "dtoh"], [37, 4, 1, "", "from_N2D2"], [37, 4, 1, "", "from_numpy"], [37, 4, 1, "", "get_deepnet"], [37, 4, 1, "", "htod"], [37, 4, 1, "", "nb_dims"], [37, 4, 1, "", "reshape"], [37, 4, 1, "", "resize"], [37, 4, 1, "", "set_values"], [37, 4, 1, "", "shape"], [37, 4, 1, "", "to_numpy"], [37, 4, 1, "", "update"]], "n2d2.activation": [[25, 3, 1, "", "ActivationFunction"], [25, 3, 1, "", "Linear"], [25, 3, 1, "", "Rectifier"], [25, 3, 1, "", "Tanh"]], "n2d2.activation.ActivationFunction": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.activation.Linear": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.activation.Rectifier": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.activation.Tanh": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.cells": [[25, 3, 1, "", "Activation"], [25, 3, 1, "", "BatchNorm2d"], [25, 3, 1, "", "Block"], [25, 3, 1, "", "Conv"], [25, 3, 1, "", "Deconv"], [25, 3, 1, "", "DeepNetCell"], [25, 3, 1, "", "Dropout"], [25, 3, 1, "", "ElemWise"], [25, 3, 1, "", "Fc"], [25, 3, 1, "", "Layer"], [25, 3, 1, "", "NeuralNetworkCell"], [25, 3, 1, "", "Padding"], [25, 3, 1, "", "Pool"], [25, 3, 1, "", "Reshape"], [25, 3, 1, "", "Resize"], [25, 3, 1, "", "Scaling"], [25, 3, 1, "", "Sequence"], [25, 3, 1, "", "Softmax"], [25, 3, 1, "", "Transformation"], [25, 3, 1, "", "Transpose"]], "n2d2.cells.Activation": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.BatchNorm2d": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"], [25, 4, 1, "", "set_solver"], [25, 4, 1, "", "set_solver_parameter"]], "n2d2.cells.Block": [[25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_cell"], [25, 4, 1, "", "get_cells"], [25, 4, 1, "", "is_integral"], [25, 4, 1, "", "set_back_propagate"], [25, 4, 1, "", "set_solver"], [25, 4, 1, "", "to_deepnet_cell"]], "n2d2.cells.Conv": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_bias"], [25, 4, 1, "", "get_biases"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "get_weight"], [25, 4, 1, "", "get_weights"], [25, 4, 1, "", "has_quantizer"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "refill_bias"], [25, 4, 1, "", "refill_weights"], [25, 4, 1, "", "set_activation"], [25, 4, 1, "", "set_bias"], [25, 4, 1, "", "set_bias_filler"], [25, 4, 1, "", "set_filler"], [25, 4, 1, "", "set_solver"], [25, 4, 1, "", "set_solver_parameter"], [25, 4, 1, "", "set_weight"], [25, 4, 1, "", "set_weights_filler"]], "n2d2.cells.Deconv": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_bias"], [25, 4, 1, "", "get_biases"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "get_weight"], [25, 4, 1, "", "get_weights"], [25, 4, 1, "", "has_quantizer"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "refill_bias"], [25, 4, 1, "", "refill_weights"], [25, 4, 1, "", "set_activation"], [25, 4, 1, "", "set_bias"], [25, 4, 1, "", "set_filler"], [25, 4, 1, "", "set_solver"], [25, 4, 1, "", "set_weight"]], "n2d2.cells.DeepNetCell": [[25, 4, 1, "", "__init__"], [25, 4, 1, "", "export_free_parameters"], [25, 4, 1, "", "fit"], [25, 4, 1, "", "get_cell"], [25, 4, 1, "", "get_cells"], [25, 4, 1, "", "get_deepnet"], [25, 4, 1, "", "get_embedded_deepnet"], [25, 4, 1, "", "get_input_cells"], [25, 4, 1, "", "get_output_cells"], [25, 4, 1, "", "import_free_parameters"], [25, 4, 1, "", "is_integral"], [25, 4, 1, "", "learn"], [25, 4, 1, "", "load_from_INI"], [25, 4, 1, "", "load_from_ONNX"], [25, 4, 1, "", "log_confusion_matrix"], [25, 4, 1, "", "log_stats"], [25, 4, 1, "", "log_success"], [25, 4, 1, "", "remove"], [25, 4, 1, "", "run_test"], [25, 4, 1, "", "set_back_propagate"], [25, 4, 1, "", "set_provider"], [25, 4, 1, "", "set_solver"], [25, 4, 1, "", "summary"], [25, 4, 1, "", "test"], [25, 4, 1, "", "to_deepnet_cell"], [25, 4, 1, "", "update"]], "n2d2.cells.Dropout": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.ElemWise": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.Fc": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_bias"], [25, 4, 1, "", "get_biases"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "get_weight"], [25, 4, 1, "", "get_weights"], [25, 4, 1, "", "has_bias"], [25, 4, 1, "", "has_quantizer"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "refill_bias"], [25, 4, 1, "", "refill_weights"], [25, 4, 1, "", "set_activation"], [25, 4, 1, "", "set_bias"], [25, 4, 1, "", "set_bias_filler"], [25, 4, 1, "", "set_filler"], [25, 4, 1, "", "set_solver"], [25, 4, 1, "", "set_solver_parameter"], [25, 4, 1, "", "set_weight"], [25, 4, 1, "", "set_weights_filler"]], "n2d2.cells.Layer": [[25, 4, 1, "", "__init__"], [25, 4, 1, "", "append"], [25, 4, 1, "", "get_cell"], [25, 4, 1, "", "get_cells"], [25, 4, 1, "", "is_integral"], [25, 4, 1, "", "set_back_propagate"], [25, 4, 1, "", "set_solver"], [25, 4, 1, "", "to_deepnet_cell"]], "n2d2.cells.NeuralNetworkCell": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.Padding": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.Pool": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.Reshape": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.Resize": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.Scaling": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.Sequence": [[25, 4, 1, "", "__init__"], [25, 4, 1, "", "append"], [25, 4, 1, "", "get_cell"], [25, 4, 1, "", "get_cells"], [25, 4, 1, "", "is_integral"], [25, 4, 1, "", "set_back_propagate"], [25, 4, 1, "", "set_solver"], [25, 4, 1, "", "to_deepnet_cell"]], "n2d2.cells.Softmax": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.Transformation": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.cells.Transpose": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_diffinputs"], [25, 4, 1, "", "get_diffoutputs"], [25, 4, 1, "", "get_outputs"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "is_exportable_to"], [25, 4, 1, "", "set_activation"]], "n2d2.database": [[26, 3, 1, "", "CIFAR10"], [26, 3, 1, "", "CIFAR100"], [26, 3, 1, "", "Cityscapes"], [26, 3, 1, "", "DIR"], [26, 3, 1, "", "GTSRB"], [26, 3, 1, "", "ILSVRC2012"], [26, 3, 1, "", "MNIST"]], "n2d2.database.CIFAR10": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "download"], [26, 4, 1, "", "get_label_name"], [26, 4, 1, "", "get_nb_stimuli"], [26, 4, 1, "", "get_parameter"], [26, 4, 1, "", "get_partition_summary"], [26, 4, 1, "", "is_downloadable"], [26, 4, 1, "", "partition_stimuli"]], "n2d2.database.CIFAR100": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "download"], [26, 4, 1, "", "get_label_name"], [26, 4, 1, "", "get_nb_stimuli"], [26, 4, 1, "", "get_parameter"], [26, 4, 1, "", "get_partition_summary"], [26, 4, 1, "", "is_downloadable"], [26, 4, 1, "", "partition_stimuli"]], "n2d2.database.Cityscapes": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "download"], [26, 4, 1, "", "get_label_name"], [26, 4, 1, "", "get_nb_stimuli"], [26, 4, 1, "", "get_parameter"], [26, 4, 1, "", "get_partition_summary"], [26, 4, 1, "", "is_downloadable"], [26, 4, 1, "", "partition_stimuli"]], "n2d2.database.DIR": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "download"], [26, 4, 1, "", "get_label_name"], [26, 4, 1, "", "get_nb_stimuli"], [26, 4, 1, "", "get_parameter"], [26, 4, 1, "", "get_partition_summary"], [26, 4, 1, "", "is_downloadable"], [26, 4, 1, "", "partition_stimuli"]], "n2d2.database.GTSRB": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "download"], [26, 4, 1, "", "get_label_name"], [26, 4, 1, "", "get_nb_stimuli"], [26, 4, 1, "", "get_parameter"], [26, 4, 1, "", "get_partition_summary"], [26, 4, 1, "", "is_downloadable"], [26, 4, 1, "", "partition_stimuli"]], "n2d2.database.ILSVRC2012": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "download"], [26, 4, 1, "", "get_label_name"], [26, 4, 1, "", "get_nb_stimuli"], [26, 4, 1, "", "get_parameter"], [26, 4, 1, "", "get_partition_summary"], [26, 4, 1, "", "is_downloadable"], [26, 4, 1, "", "partition_stimuli"]], "n2d2.database.MNIST": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "download"], [26, 4, 1, "", "get_label_name"], [26, 4, 1, "", "get_nb_stimuli"], [26, 4, 1, "", "get_parameter"], [26, 4, 1, "", "get_partition_summary"], [26, 4, 1, "", "is_downloadable"], [26, 4, 1, "", "partition_stimuli"]], "n2d2.export": [[34, 6, 1, "", "export_c"], [34, 6, 1, "", "export_cpp"], [34, 6, 1, "", "export_tensor_rt"], [34, 6, 1, "", "list_exportable_cell"]], "n2d2.filler": [[25, 3, 1, "", "Constant"], [25, 3, 1, "", "Filler"], [25, 3, 1, "", "He"], [25, 3, 1, "", "Normal"], [25, 3, 1, "", "Xavier"]], "n2d2.filler.Constant": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.filler.Filler": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.filler.He": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.filler.Normal": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.filler.Xavier": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.mapping": [[25, 3, 1, "", "Mapping"]], "n2d2.mapping.Mapping": [[25, 4, 1, "", "__init__"]], "n2d2.provider": [[26, 3, 1, "", "DataProvider"]], "n2d2.provider.DataProvider": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "add_on_the_fly_transformation"], [26, 4, 1, "", "add_transformation"], [26, 4, 1, "", "all_batchs_provided"], [26, 4, 1, "", "get_batch_size"], [26, 4, 1, "", "get_data"], [26, 4, 1, "", "get_database"], [26, 4, 1, "", "get_deepnet"], [26, 4, 1, "", "get_labels"], [26, 4, 1, "", "get_name"], [26, 4, 1, "", "get_parameter"], [26, 4, 1, "", "get_partition"], [26, 4, 1, "", "get_transformations"], [26, 4, 1, "", "normalize_stimuli"], [26, 4, 1, "", "read_batch"], [26, 4, 1, "", "read_random_batch"], [26, 4, 1, "", "set_batch"], [26, 4, 1, "", "set_partition"], [26, 4, 1, "", "set_reading_randomly"]], "n2d2.quantizer": [[39, 3, 1, "", "PruneCell"]], "n2d2.quantizer.PruneCell": [[39, 4, 1, "", "N2D2"], [39, 4, 1, "", "__init__"], [39, 4, 1, "", "add_biases"], [39, 4, 1, "", "add_weights"], [39, 4, 1, "", "get_current_threshold"], [39, 4, 1, "", "get_parameter"], [39, 4, 1, "", "get_pruned_masks"], [39, 4, 1, "", "get_quantized_weights"]], "n2d2.solver": [[25, 3, 1, "", "Adam"], [25, 3, 1, "", "SGD"], [25, 3, 1, "", "Solver"]], "n2d2.solver.Adam": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.solver.SGD": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.solver.Solver": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "get_parameter"]], "n2d2.target": [[25, 3, 1, "", "Score"]], "n2d2.target.Score": [[25, 4, 1, "", "N2D2"], [25, 4, 1, "", "__init__"], [25, 4, 1, "", "clear_score"], [25, 4, 1, "", "clear_success"], [25, 4, 1, "", "get_average_score"], [25, 4, 1, "", "get_average_top_n_success"], [25, 4, 1, "", "get_loss"], [25, 4, 1, "", "get_parameter"], [25, 4, 1, "", "log_confusion_matrix"], [25, 4, 1, "", "log_stats"], [25, 4, 1, "", "log_success"], [25, 4, 1, "", "loss"]], "n2d2.transform": [[26, 3, 1, "", "ChannelExtraction"], [26, 3, 1, "", "ColorSpace"], [26, 3, 1, "", "Composite"], [26, 3, 1, "", "Distortion"], [26, 3, 1, "", "Flip"], [26, 3, 1, "", "PadCrop"], [26, 3, 1, "", "RandomResizeCrop"], [26, 3, 1, "", "RangeAffine"], [26, 3, 1, "", "Rescale"], [26, 3, 1, "", "Reshape"], [26, 3, 1, "", "SliceExtraction"], [26, 3, 1, "", "Transformation"]], "n2d2.transform.ChannelExtraction": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.ColorSpace": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.Composite": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"], [26, 4, 1, "", "get_transformations"]], "n2d2.transform.Distortion": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.Flip": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.PadCrop": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.RandomResizeCrop": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.RangeAffine": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.Rescale": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.Reshape": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.SliceExtraction": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "n2d2.transform.Transformation": [[26, 4, 1, "", "N2D2"], [26, 4, 1, "", "__init__"], [26, 4, 1, "", "get_parameter"]], "pytorch_to_n2d2": [[35, 3, 1, "", "Block"], [35, 6, 1, "", "wrap"]], "pytorch_to_n2d2.Block": [[35, 4, 1, "", "__init__"], [35, 4, 1, "", "forward"], [35, 4, 1, "", "get_block"], [35, 4, 1, "", "summary"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:functionParam", "3": "py:class", "4": "py:method", "5": "py:property", "6": "py:function"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "functionParam", "C++ function parameter"], "3": ["py", "class", "Python class"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"]}, "titleterms": {"adversari": 0, "modul": [0, 3, 36], "content": 0, "For": 0, "user": 0, "run": [0, 20], "an": [0, 23, 24, 25, 31, 34], "attack": 0, "1st": 0, "function": [0, 15, 16], "studi": 0, "2nd": 0, "develop": [0, 10, 15, 36], "core": [1, 10], "n2d2": [1, 10, 17, 20, 29, 36, 38], "introduct": [1, 3, 6, 10, 12, 13, 14, 25, 26, 36, 37], "deepnet": 1, "api": [1, 10, 24, 36], "refer": [1, 41], "cell": [1, 3, 25, 34, 40], "anchorcel": 1, "batchnormcel": 1, "convcel": [1, 3], "deconvcel": 1, "dropoutcel": 1, "elemwisecel": 1, "fmpcell": 1, "fccell": 1, "lrncell": 1, "lstmcell": 1, "normalizecel": 1, "objectdetcel": 1, "paddingcel": 1, "poolcel": 1, "proposalcel": 1, "roipoolingcel": 1, "rpcell": 1, "resizecel": 1, "scalingcel": 1, "softmaxcel": 1, "targetbiascel": 1, "thresholdcel": 1, "transformationcel": 1, "unpoolcel": 1, "frame": [1, 15], "anchorcell_fram": 1, "anchorcell_frame_cuda": 1, "batchnormcell_frame_float": 1, "batchnormcell_frame_doubl": 1, "batchnormcell_frame_cuda_float": 1, "batchnormcell_frame_cuda_doubl": 1, "cell_frame_float": 1, "cell_frame_doubl": 1, "cell_frame_cuda_float": 1, "cell_frame_cuda_doubl": 1, "cell_frame_top": [1, 3], "convcell_frame_float": 1, "convcell_frame_doubl": 1, "convcell_frame_cuda_float": 1, "convcell_frame_cuda_doubl": 1, "deconvcell_frame_float": 1, "deconvcell_frame_doubl": 1, "deconvcell_frame_cuda_float": 1, "deconvcell_frame_cuda_doubl": 1, "dropoutcell_frame_float": 1, "dropoutcell_frame_doubl": 1, "dropoutcell_frame_cuda_float": 1, "dropoutcell_frame_cuda_doubl": 1, "elemwisecell_fram": 1, "elemwisecell_frame_cuda": 1, "fmpcell_fram": 1, "fmpcell_frame_cuda": 1, "fccell_frame_float": 1, "fccell_frame_doubl": 1, "fccell_frame_cuda_float": 1, "fccell_frame_cuda_doubl": 1, "lrncell_frame_float": 1, "lrncell_frame_doubl": 1, "lrncell_frame_cuda_float": 1, "lrncell_frame_cuda_doubl": 1, "lstmcell_frame_cuda_float": 1, "lstmcell_frame_cuda_doubl": 1, "normalizecell_frame_float": 1, "normalizecell_frame_doubl": 1, "normalizecell_frame_cuda_float": 1, "normalizecell_frame_cuda_doubl": 1, "objectdetcell_fram": 1, "objectdetcell_frame_cuda": 1, "paddingcell_fram": 1, "paddingcell_frame_cuda": 1, "poolcell_frame_float": 1, "poolcell_frame_doubl": 1, "poolcell_frame_cuda_float": 1, "poolcell_frame_cuda_doubl": 1, "poolcell_frame_ext_cuda_float": 1, "poolcell_frame_ext_cuda_doubl": 1, "proposalcell_fram": 1, "proposalcell_frame_cuda": 1, "roipoolingcell_fram": 1, "roipoolingcell_frame_cuda": 1, "rpcell_fram": 1, "rpcell_frame_cuda": 1, "resizecell_fram": 1, "resizecell_frame_cuda": 1, "scalingcell_frame_float": 1, "scalingcell_frame_doubl": 1, "scalingcell_frame_cuda_float": 1, "scalingcell_frame_cuda_doubl": 1, "softmaxcell_frame_float": 1, "softmaxcell_frame_doubl": 1, "softmaxcell_frame_cuda_float": 1, "softmaxcell_frame_cuda_doubl": 1, "targetbiascell_frame_float": 1, "targetbiascell_frame_doubl": 1, "targetbiascell_frame_cuda_float": 1, "targetbiascell_frame_cuda_doubl": 1, "thresholdcell_fram": 1, "thresholdcell_frame_cuda": 1, "transformationcell_fram": 1, "transformationcell_frame_cuda": 1, "unpoolcell_fram": 1, "unpoolcell_frame_cuda": 1, "filler": [1, 15, 25, 39], "activ": [1, 15, 20, 25, 38, 40], "linearactiv": 1, "rectifieractiv": 1, "tanhactiv": 1, "swishactiv": 1, "saturationactiv": 1, "logisticactiv": 1, "softplusactiv": 1, "activation_fram": 1, "linearactivation_fram": 1, "rectifieractivation_fram": 1, "tanhactivation_fram": 1, "swishactivation_fram": 1, "solver": [1, 15, 21, 25], "target": [1, 16, 25], "databas": [1, 12, 18, 26], "download": [1, 20, 22], "dataset": [1, 2, 12, 20], "mnist_idx_databas": 1, "actitracker_databas": [1, 12], "aer_databas": 1, "caltech101_dir_databas": [1, 12], "caltech256_dir_databas": [1, 12], "caltechpedestrian_databas": [1, 12], "celeba_databas": 1, "cifar_databas": 1, "ckp_databas": [1, 12], "dir_databas": 1, "gtsrb_dir_databas": 1, "gtsdb_dir_databas": [1, 12], "ilsvrc2012_databas": [1, 12], "idx_databas": 1, "imdbwiki_databas": 1, "kitti_databas": [1, 12], "kitti_object_databas": [1, 12], "kitti_road_databas": [1, 12], "litisrouen_databas": [1, 12], "n_mnist_databas": 1, "dota_databas": [1, 12], "fashion_mnist_idx_databas": 1, "fddb_databas": [1, 12], "daimler_databas": [1, 12], "stimuliprovid": 1, "transform": [1, 2, 13, 15, 25, 26], "distortiontransform": [1, 13], "padcroptransform": [1, 13], "compositetransform": 1, "affinetransform": [1, 13], "channelextractiontransform": [1, 13], "colorspacetransform": [1, 13], "compressionnoisetransform": 1, "dcttransform": 1, "dfttransform": [1, 13], "equalizetransform": [1, 13], "expandlabeltransform": [1, 13], "wallisfiltertransform": [1, 13], "thresholdtransform": [1, 13], "sliceextractiontransform": [1, 13], "reshapetransform": [1, 13], "rescaletransform": [1, 13], "rangeclippingtransform": [1, 13], "rangeaffinetransform": [1, 13], "randomaffinetransform": [1, 13], "normalizetransform": [1, 13], "morphologytransform": [1, 13], "morphologicalreconstructiontransform": [1, 13], "magnitudephasetransform": [1, 13], "labelsliceextractiontransform": [1, 13], "labelextractiontransform": 1, "gradientfiltertransform": [1, 13], "apodizationtransform": [1, 13], "filtertransform": [1, 13], "fliptransform": [1, 13], "contain": 1, "tensor": [1, 3, 35, 37], "cudatensor": 1, "exampl": [2, 4, 7, 12, 15, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40], "creation": [2, 32], "network": [2, 15, 18, 20, 21, 26, 32], "import": [2, 10, 23], "appli": 2, "defin": [2, 32], "topologi": 2, "learn": [2, 20, 21, 40], "phase": 2, "The": 3, "class": [3, 19], "cell_fram": 3, "t": [3, 36], "convcell_fram": 3, "export": [4, 5, 6, 7, 8, 9, 10, 18, 31, 34], "c": [4, 5, 6, 8, 9, 10, 34], "principl": [4, 5, 7, 38], "graph": [4, 7, 29], "optim": [4, 7, 35, 38], "memori": [4, 20], "paramet": [4, 6, 7, 8, 12, 14, 15, 21, 25, 36], "stm32": 5, "usag": [5, 6, 12, 23, 25, 38], "dneuro": 6, "interfac": [6, 10], "support": [6, 23, 34], "layer": [6, 9, 15, 25, 34, 40], "simul": [6, 20, 21], "emul": 6, "synthesi": 6, "fpga": 6, "compat": [6, 9, 21, 40], "tabl": [6, 9, 10, 19, 40], "aerial": 6, "imageri": 6, "segment": [6, 16, 21], "demo": 6, "specif": [6, 25], "applic": [6, 8], "preview": 6, "gener": [6, 19], "face": [6, 21], "detect": [6, 21], "onnx": [7, 10, 22, 23, 24, 31, 40], "tensorrt": [8, 34], "inform": 8, "benchmark": 8, "your": 8, "model": [8, 15, 22, 23, 24, 25, 31, 40], "analys": 8, "execut": 8, "perform": [8, 18, 19, 20, 32, 40], "fp32": 8, "deploi": 8, "other": [9, 12], "legaci": 9, "cpp_opencl": 9, "cpp_cudnn": 9, "c_hl": 9, "quantiz": [10, 38, 40], "ini": [10, 23, 24, 39, 40], "file": [10, 12, 23, 24, 39, 40], "python": [10, 24, 36, 39, 40], "indic": 10, "stimuli": [11, 13], "data": [11, 12, 13, 18, 21, 26, 28], "analysi": [11, 32], "zero": 11, "mean": 11, "uniti": 11, "standard": 11, "deviat": 11, "normal": [11, 15, 21, 25, 38], "substract": 11, "imag": [11, 12, 13], "set": [11, 25, 37], "compositelabel": 12, "multi": 12, "channel": 12, "handl": [12, 18, 26], "mnist": [12, 26], "gtsrb": [12, 26], "directori": 12, "speech": 12, "command": [12, 38], "csv": 12, "built": [12, 13], "cifar10_databas": 12, "cifar100_databas": 12, "cityscapes_databas": 12, "slice": [12, 13, 37], "provid": 13, "environ": [13, 36], "rang": 13, "convers": [13, 35], "dure": 13, "train": [13, 20, 22, 24, 31, 32, 38, 40], "infer": 13, "blend": 13, "augment": [13, 28], "gaussian": 13, "window": [13, 20], "blackman": 13, "kaiser": 13, "centroidcroptransform": 13, "blendingtransform": 13, "blendingmethod": 13, "label": [13, 16, 26, 28], "map": [13, 20, 25], "channeldroptransform": 13, "channelshaketransform": 13, "distribut": [13, 20], "kernel": [13, 20], "log": 13, "dog": 13, "gabor": 13, "labelfiltertransform": 13, "roiextractiontransform": 13, "striperemovetransform": 13, "trimtransform": 13, "syntax": 14, "properti": 14, "section": [14, 23, 25], "case": [14, 32], "sensit": 14, "comment": 14, "quot": 14, "valu": [14, 36, 37], "whitespac": 14, "escap": 14, "charact": 14, "templat": 14, "inclus": 14, "variabl": 14, "substitut": 14, "control": 14, "statement": 14, "block": [14, 25], "includ": 14, "global": [14, 15], "definit": [15, 40], "weight": [15, 20, 38, 40], "constantfil": 15, "hefil": 15, "normalfil": 15, "uniformfil": 15, "xavierfil": 15, "sgdsolver_fram": 15, "sgdsolver_frame_cuda": 15, "adamsolver_fram": 15, "adamsolver_frame_cuda": 15, "logist": 15, "logisticwithloss": 15, "rectifi": [15, 25], "satur": 15, "softplu": 15, "tanh": [15, 25], "tanhlecun": 15, "anchor": 15, "configur": [15, 21, 25], "output": [15, 16, 20], "remap": 15, "batchnorm": 15, "conv": [15, 25], "spike": [15, 21], "deconv": [15, 25], "dropout": [15, 25], "elemwis": [15, 25, 34], "sum": 15, "oper": [15, 23], "abssum": 15, "euclideansum": 15, "prod": 15, "max": 15, "fmp": 15, "fc": [15, 25], "lrn": 15, "lstm": 15, "frame_cuda": 15, "current": 15, "restrict": 15, "further": 15, "requir": [15, 20], "guidanc": 15, "pad": [15, 25], "pool": [15, 25], "maxout": 15, "rbf": 15, "resiz": [15, 25], "softmax": [15, 25], "threshold": 15, "unpool": 15, "loss": 16, "from": [16, 22, 24, 31, 36, 37], "pixel": 16, "wise": 16, "demonstr": 16, "type": [16, 23], "targetscor": 16, "targetroi": 16, "about": 17, "ip": 17, "present": [18, 32, 35], "pre": [18, 22], "process": 18, "deep": [18, 21], "build": [18, 21], "evalu": [18, 19], "hardwar": 18, "summari": 18, "tool": [19, 32], "kei": 19, "metric": 19, "interact": 19, "confus": [19, 20], "matrix": [19, 20], "overview": 19, "singl": 19, "aggreg": 19, "select": 19, "item": 19, "view": 19, "viewer": 19, "automat": 19, "report": 19, "minimum": 20, "system": 20, "obtain": [20, 22], "prerequisit": 20, "red": 20, "hat": 20, "enterpris": 20, "linux": 20, "rhel": 20, "6": 20, "ubuntu": 20, "get": [20, 28, 39, 40], "sourc": 20, "compil": [20, 36], "test": [20, 36], "interpret": 20, "result": [20, 38, 40], "recognit": [20, 21], "rate": 20, "comput": 20, "tutori": [21, 40], "neural": [21, 26, 32], "tip": 21, "trick": 21, "choos": 21, "hyper": 21, "converg": 21, "classifi": [21, 24], "gender": 21, "roi": 21, "extract": 21, "visual": 21, "transcod": 21, "code": 21, "render": 21, "convert": 22, "pytorch": [22, 35], "tf": 22, "kera": [22, 30, 35], "preliminari": [23, 28], "step": 23, "With": [23, 24, 36], "transpos": [23, 25], "option": [23, 24, 38], "1": [24, 38, 40], "remov": 24, "origin": 24, "2": [24, 38, 40], "add": 24, "new": 24, "3": [24, 38], "fine": 24, "tune": 24, "sequenc": [25, 29], "deepnetcel": 25, "neuralnetworkcel": 25, "batchnorm2d": 25, "reshap": [25, 26], "scale": [25, 34, 38], "save": 25, "construct": 25, "time": [25, 40], "sgd": 25, "adam": 25, "chang": [25, 35], "instanci": 25, "object": 25, "he": 25, "constant": 25, "xavier": 25, "linear": 25, "dir": 26, "load": [26, 28, 31], "custom": 26, "ilsvrc2012": 26, "cifar10": 26, "cifar100": 26, "cityscap": 26, "composit": 26, "padcrop": 26, "distort": 26, "rescal": [26, 38], "colorspac": 26, "flip": 26, "rangeaffin": 26, "sliceextract": 26, "randomresizecrop": 26, "channelextract": 26, "send": 26, "manipul": [29, 37], "print": 29, "interoper": [30, 33, 35], "us": 32, "input": 32, "torch": 33, "list": [34, 36], "avail": 34, "document": [34, 35], "frequent": [34, 36], "ask": 34, "question": 34, "ar": 34, "onli": 34, "fix": 34, "point": 34, "mode": [34, 38, 39], "cpp": 34, "experiment": 35, "featur": 35, "instal": 36, "virtual": 36, "packag": 36, "index": [36, 37], "py": 36, "pi": 36, "github": 36, "repositori": 36, "If": 36, "you": 36, "have": 36, "alreadi": 36, "clone": 36, "issu": 36, "found": 36, "doesn": 36, "right": 36, "version": 36, "lib": 36, "when": 36, "default": 36, "modifi": 36, "coordin": 37, "method": 37, "numpi": 37, "To": 37, "cuda": 37, "synchron": 37, "post": 38, "addit": 38, "strategi": 38, "clip": 38, "factor": 38, "approxim": 38, "act": 38, "line": 38, "prune": 39, "start": [39, 40], "awar": 40, "lsq": 40, "sat": 40, "resnet": 40, "18": 40, "hand": 40, "made": 40, "lenet": 40, "part": 40, "clamp": 40, "mobilenet": 40, "v1": 40, "v2": 40, "incept": 40}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Adversarial module": [[0, "adversarial-module"]], "Contents": [[0, "contents"]], "For the users": [[0, "for-the-users"]], "Run an adversarial attack": [[0, "run-an-adversarial-attack"]], "1st function to study adversarial attacks": [[0, "st-function-to-study-adversarial-attacks"]], "2nd function to study adversarial attacks": [[0, "nd-function-to-study-adversarial-attacks"]], "For the developers": [[0, "for-the-developers"]], "Core N2D2": [[1, "core-n2d2"]], "Introduction": [[1, "introduction"], [1, "id1"], [1, "id3"], [1, "id6"], [1, "id9"], [1, "id11"], [3, "introduction"], [6, "introduction"], [10, null], [12, "introduction"], [13, "introduction"], [14, "introduction"], [25, "introduction"], [26, "introduction"], [36, "introduction"], [37, "introduction"]], "DeepNet": [[1, "deepnet"]], "API Reference": [[1, "api-reference"]], "Cells": [[1, "cells"], [25, "cells"], [25, "id1"]], "Cell": [[1, "cell"], [1, "id2"]], "AnchorCell": [[1, "anchorcell"]], "BatchNormCell": [[1, "batchnormcell"]], "ConvCell": [[1, "convcell"]], "DeconvCell": [[1, "deconvcell"]], "DropoutCell": [[1, "dropoutcell"]], "ElemWiseCell": [[1, "elemwisecell"]], "FMPCell": [[1, "fmpcell"]], "FcCell": [[1, "fccell"]], "LRNCell": [[1, "lrncell"]], "LSTMCell": [[1, "lstmcell"]], "NormalizeCell": [[1, "normalizecell"]], "ObjectDetCell": [[1, "objectdetcell"]], "PaddingCell": [[1, "paddingcell"]], "PoolCell": [[1, "poolcell"]], "ProposalCell": [[1, "proposalcell"]], "ROIPoolingCell": [[1, "roipoolingcell"]], "RPCell": [[1, "rpcell"]], "ResizeCell": [[1, "resizecell"]], "ScalingCell": [[1, "scalingcell"]], "SoftmaxCell": [[1, "softmaxcell"]], "TargetBiasCell": [[1, "targetbiascell"]], "ThresholdCell": [[1, "thresholdcell"]], "TransformationCell": [[1, "transformationcell"]], "UnpoolCell": [[1, "unpoolcell"]], "Frame": [[1, "frame"]], "AnchorCell_Frame": [[1, "anchorcell-frame"]], "AnchorCell_Frame_CUDA": [[1, "anchorcell-frame-cuda"]], "BatchNormCell_Frame_float": [[1, "batchnormcell-frame-float"]], "BatchNormCell_Frame_double": [[1, "batchnormcell-frame-double"]], "BatchNormCell_Frame_CUDA_float": [[1, "batchnormcell-frame-cuda-float"]], "BatchNormCell_Frame_CUDA_double": [[1, "batchnormcell-frame-cuda-double"]], "Cell_Frame_float": [[1, "cell-frame-float"]], "Cell_Frame_double": [[1, "cell-frame-double"]], "Cell_Frame_CUDA_float": [[1, "cell-frame-cuda-float"]], "Cell_Frame_CUDA_double": [[1, "cell-frame-cuda-double"]], "Cell_Frame_Top": [[1, "cell-frame-top"]], "ConvCell_Frame_float": [[1, "convcell-frame-float"]], "ConvCell_Frame_double": [[1, "convcell-frame-double"]], "ConvCell_Frame_CUDA_float": [[1, "convcell-frame-cuda-float"]], "ConvCell_Frame_CUDA_double": [[1, "convcell-frame-cuda-double"]], "DeconvCell_Frame_float": [[1, "deconvcell-frame-float"]], "DeconvCell_Frame_double": [[1, "deconvcell-frame-double"]], "DeconvCell_Frame_CUDA_float": [[1, "deconvcell-frame-cuda-float"]], "DeconvCell_Frame_CUDA_double": [[1, "deconvcell-frame-cuda-double"]], "DropoutCell_Frame_float": [[1, "dropoutcell-frame-float"]], "DropoutCell_Frame_double": [[1, "dropoutcell-frame-double"]], "DropoutCell_Frame_CUDA_float": [[1, "dropoutcell-frame-cuda-float"]], "DropoutCell_Frame_CUDA_double": [[1, "dropoutcell-frame-cuda-double"]], "ElemWiseCell_Frame": [[1, "elemwisecell-frame"]], "ElemWiseCell_Frame_CUDA": [[1, "elemwisecell-frame-cuda"]], "FMPCell_Frame": [[1, "fmpcell-frame"]], "FMPCell_Frame_CUDA": [[1, "fmpcell-frame-cuda"]], "FcCell_Frame_float": [[1, "fccell-frame-float"]], "FcCell_Frame_double": [[1, "fccell-frame-double"]], "FcCell_Frame_CUDA_float": [[1, "fccell-frame-cuda-float"]], "FcCell_Frame_CUDA_double": [[1, "fccell-frame-cuda-double"]], "LRNCell_Frame_float": [[1, "lrncell-frame-float"]], "LRNCell_Frame_double": [[1, "lrncell-frame-double"]], "LRNCell_Frame_CUDA_float": [[1, "lrncell-frame-cuda-float"]], "LRNCell_Frame_CUDA_double": [[1, "lrncell-frame-cuda-double"]], "LSTMCell_Frame_CUDA_float": [[1, "lstmcell-frame-cuda-float"]], "LSTMCell_Frame_CUDA_double": [[1, "lstmcell-frame-cuda-double"]], "NormalizeCell_Frame_float": [[1, "normalizecell-frame-float"]], "NormalizeCell_Frame_double": [[1, "normalizecell-frame-double"]], "NormalizeCell_Frame_CUDA_float": [[1, "normalizecell-frame-cuda-float"]], "NormalizeCell_Frame_CUDA_double": [[1, "normalizecell-frame-cuda-double"]], "ObjectDetCell_Frame": [[1, "objectdetcell-frame"]], "ObjectDetCell_Frame_CUDA": [[1, "objectdetcell-frame-cuda"]], "PaddingCell_Frame": [[1, "paddingcell-frame"]], "PaddingCell_Frame_CUDA": [[1, "paddingcell-frame-cuda"]], "PoolCell_Frame_float": [[1, "poolcell-frame-float"]], "PoolCell_Frame_double": [[1, "poolcell-frame-double"]], "PoolCell_Frame_CUDA_float": [[1, "poolcell-frame-cuda-float"]], "PoolCell_Frame_CUDA_double": [[1, "poolcell-frame-cuda-double"]], "PoolCell_Frame_EXT_CUDA_float": [[1, "poolcell-frame-ext-cuda-float"]], "PoolCell_Frame_EXT_CUDA_double": [[1, "poolcell-frame-ext-cuda-double"]], "ProposalCell_Frame": [[1, "proposalcell-frame"]], "ProposalCell_Frame_CUDA": [[1, "proposalcell-frame-cuda"]], "ROIPoolingCell_Frame": [[1, "roipoolingcell-frame"]], "ROIPoolingCell_Frame_CUDA": [[1, "roipoolingcell-frame-cuda"]], "RPCell_Frame": [[1, "rpcell-frame"]], "RPCell_Frame_CUDA": [[1, "rpcell-frame-cuda"]], "ResizeCell_Frame": [[1, "resizecell-frame"]], "ResizeCell_Frame_CUDA": [[1, "resizecell-frame-cuda"]], "ScalingCell_Frame_float": [[1, "scalingcell-frame-float"]], "ScalingCell_Frame_double": [[1, "scalingcell-frame-double"]], "ScalingCell_Frame_CUDA_float": [[1, "scalingcell-frame-cuda-float"]], "ScalingCell_Frame_CUDA_double": [[1, "scalingcell-frame-cuda-double"]], "SoftmaxCell_Frame_float": [[1, "softmaxcell-frame-float"]], "SoftmaxCell_Frame_double": [[1, "softmaxcell-frame-double"]], "SoftmaxCell_Frame_CUDA_float": [[1, "softmaxcell-frame-cuda-float"]], "SoftmaxCell_Frame_CUDA_double": [[1, "softmaxcell-frame-cuda-double"]], "TargetBiasCell_Frame_float": [[1, "targetbiascell-frame-float"]], "TargetBiasCell_Frame_double": [[1, "targetbiascell-frame-double"]], "TargetBiasCell_Frame_CUDA_float": [[1, "targetbiascell-frame-cuda-float"]], "TargetBiasCell_Frame_CUDA_double": [[1, "targetbiascell-frame-cuda-double"]], "ThresholdCell_Frame": [[1, "thresholdcell-frame"]], "ThresholdCell_Frame_CUDA": [[1, "thresholdcell-frame-cuda"]], "TransformationCell_Frame": [[1, "transformationcell-frame"]], "TransformationCell_Frame_CUDA": [[1, "transformationcell-frame-cuda"]], "UnpoolCell_Frame": [[1, "unpoolcell-frame"]], "UnpoolCell_Frame_CUDA": [[1, "unpoolcell-frame-cuda"]], "Filler": [[1, "filler"], [25, "filler"]], "Activation": [[1, "activation"], [1, "id4"], [1, "id5"], [25, "activation"]], "LinearActivation": [[1, "linearactivation"]], "RectifierActivation": [[1, "rectifieractivation"]], "TanhActivation": [[1, "tanhactivation"]], "SwishActivation": [[1, "swishactivation"]], "SaturationActivation": [[1, "saturationactivation"]], "LogisticActivation": [[1, "logisticactivation"]], "SoftplusActivation": [[1, "softplusactivation"]], "Activation_Frame": [[1, "activation-frame"]], "LinearActivation_Frame": [[1, "linearactivation-frame"]], "RectifierActivation_Frame": [[1, "rectifieractivation-frame"]], "TanhActivation_Frame": [[1, "tanhactivation-frame"]], "SwishActivation_Frame": [[1, "swishactivation-frame"]], "Solver": [[1, "solver"], [25, "solver"]], "Target": [[1, "target"], [16, "target"], [25, "target"]], "Databases": [[1, "databases"], [12, "databases"], [26, "databases"]], "Introduction:": [[1, "id7"]], "Download datasets:": [[1, "download-datasets"]], "Database:": [[1, "database"]], "Database": [[1, "id8"], [26, "database"]], "MNIST_IDX_Database": [[1, "mnist-idx-database"]], "Actitracker_Database": [[1, "actitracker-database"], [12, "actitracker-database"]], "AER_Database": [[1, "aer-database"]], "Caltech101_DIR_Database": [[1, "caltech101-dir-database"], [12, "caltech101-dir-database"]], "Caltech256_DIR_Database": [[1, "caltech256-dir-database"], [12, "caltech256-dir-database"]], "CaltechPedestrian_Database": [[1, "caltechpedestrian-database"], [12, "caltechpedestrian-database"]], "CelebA_Database": [[1, "celeba-database"]], "CIFAR_Database": [[1, "cifar-database"]], "CKP_Database": [[1, "ckp-database"], [12, "ckp-database"]], "DIR_Database": [[1, "dir-database"]], "GTSRB_DIR_Database": [[1, "gtsrb-dir-database"]], "GTSDB_DIR_Database": [[1, "gtsdb-dir-database"], [12, "gtsdb-dir-database"]], "ILSVRC2012_Database": [[1, "ilsvrc2012-database"], [12, "ilsvrc2012-database"]], "IDX_Database": [[1, "idx-database"]], "IMDBWIKI_Database": [[1, "imdbwiki-database"]], "KITTI_Database": [[1, "kitti-database"], [12, "kitti-database"]], "KITTI_Object_Database": [[1, "kitti-object-database"], [12, "kitti-object-database"]], "KITTI_Road_Database": [[1, "kitti-road-database"], [12, "kitti-road-database"]], "LITISRouen_Database": [[1, "litisrouen-database"], [12, "litisrouen-database"]], "N_MNIST_Database": [[1, "n-mnist-database"]], "DOTA_Database": [[1, "dota-database"], [12, "dota-database"]], "Fashion_MNIST_IDX_Database": [[1, "fashion-mnist-idx-database"]], "FDDB_Database": [[1, "fddb-database"], [12, "fddb-database"]], "Daimler_Database": [[1, "daimler-database"], [12, "daimler-database"]], "StimuliProvider": [[1, "stimuliprovider"]], "Transformation": [[1, "transformation"], [1, "id10"], [15, "transformation"], [25, "transformation"]], "Transformations": [[1, "transformations"], [26, "transformations"]], "DistortionTransformation": [[1, "distortiontransformation"], [13, "distortiontransformation"]], "PadCropTransformation": [[1, "padcroptransformation"], [13, "padcroptransformation"]], "CompositeTransformation": [[1, "compositetransformation"]], "AffineTransformation": [[1, "affinetransformation"], [13, "affinetransformation"]], "ChannelExtractionTransformation": [[1, "channelextractiontransformation"], [13, "channelextractiontransformation"]], "ColorSpaceTransformation": [[1, "colorspacetransformation"], [13, "colorspacetransformation"]], "CompressionNoiseTransformation": [[1, "compressionnoisetransformation"]], "DCTTransformation": [[1, "dcttransformation"]], "DFTTransformation": [[1, "dfttransformation"], [13, "dfttransformation"]], "EqualizeTransformation": [[1, "equalizetransformation"], [13, "equalizetransformation"]], "ExpandLabelTransformation": [[1, "expandlabeltransformation"], [13, "expandlabeltransformation"]], "WallisFilterTransformation": [[1, "wallisfiltertransformation"], [13, "wallisfiltertransformation"]], "ThresholdTransformation": [[1, "thresholdtransformation"], [13, "thresholdtransformation"]], "SliceExtractionTransformation": [[1, "sliceextractiontransformation"], [13, "sliceextractiontransformation"]], "ReshapeTransformation": [[1, "reshapetransformation"], [13, "reshapetransformation"]], "RescaleTransformation": [[1, "rescaletransformation"], [13, "rescaletransformation"]], "RangeClippingTransformation": [[1, "rangeclippingtransformation"], [13, "rangeclippingtransformation"]], "RangeAffineTransformation": [[1, "rangeaffinetransformation"], [13, "rangeaffinetransformation"]], "RandomAffineTransformation": [[1, "randomaffinetransformation"], [13, "randomaffinetransformation"]], "NormalizeTransformation": [[1, "normalizetransformation"], [13, "normalizetransformation"]], "MorphologyTransformation": [[1, "morphologytransformation"], [13, "morphologytransformation"]], "MorphologicalReconstructionTransformation": [[1, "morphologicalreconstructiontransformation"], [13, "morphologicalreconstructiontransformation"]], "MagnitudePhaseTransformation": [[1, "magnitudephasetransformation"], [13, "magnitudephasetransformation"]], "LabelSliceExtractionTransformation": [[1, "labelsliceextractiontransformation"], [13, "labelsliceextractiontransformation"]], "LabelExtractionTransformation": [[1, "labelextractiontransformation"]], "GradientFilterTransformation": [[1, "gradientfiltertransformation"], [13, "gradientfiltertransformation"]], "ApodizationTransformation": [[1, "apodizationtransformation"], [13, "apodizationtransformation"]], "FilterTransformation": [[1, "filtertransformation"], [13, "filtertransformation"]], "FlipTransformation": [[1, "fliptransformation"], [13, "fliptransformation"]], "Containers": [[1, "containers"]], "Tensor": [[1, "tensor"], [37, "tensor"], [37, "id1"]], "CudaTensor": [[1, "cudatensor"]], "Example": [[2, "example"], [4, "example"], [7, "example"], [25, "example"], [26, "example"], [27, "example"], [30, "example"], [33, "example"], [34, "example"], [34, "id3"], [34, "id6"], [35, "example"], [35, "id3"], [36, "example"]], "Creation of the network": [[2, "creation-of-the-network"], [32, "creation-of-the-network"]], "Importation of the dataset": [[2, "importation-of-the-dataset"]], "Applying transformation to the dataset": [[2, "applying-transformation-to-the-dataset"]], "Defining network topology": [[2, "defining-network-topology"]], "Learning phase": [[2, "learning-phase"]], "The Cell modules": [[3, "the-cell-modules"]], "Cell class": [[3, "cell-class"]], "Cell_Frame_Top class": [[3, "cell-frame-top-class"]], "Cell_Frame<T> class": [[3, "cell-frame-t-class"]], "ConvCell class": [[3, "convcell-class"]], "ConvCell_Frame<T> class": [[3, "convcell-frame-t-class"]], "The Tensor<T> class": [[3, "the-tensor-t-class"]], "Export: C++": [[4, "export-c"]], "Principle": [[4, "principle"], [5, "principle"], [7, "principle"], [38, "principle"]], "Graph optimizations": [[4, "graph-optimizations"], [7, "graph-optimizations"]], "Memory optimizations": [[4, "memory-optimizations"]], "Export parameters": [[4, "export-parameters"], [6, "export-parameters"], [7, "export-parameters"], [8, "export-parameters"]], "Export: C++/STM32": [[5, "export-c-stm32"]], "Usage": [[5, "usage"], [6, "usage"]], "Export: DNeuro": [[6, "export-dneuro"]], "Interface": [[6, "interface"]], "Supported layers": [[6, "supported-layers"]], "Simulation": [[6, "simulation"]], "C++ emulation": [[6, "c-emulation"]], "Synthesis": [[6, "synthesis"]], "FPGA compatibility tables": [[6, "fpga-compatibility-tables"]], "Aerial Imagery Segmentation DEMO": [[6, "aerial-imagery-segmentation-demo"]], "Specifications": [[6, "specifications"]], "Application preview": [[6, "application-preview"]], "DNeuro generation": [[6, "dneuro-generation"]], "Face Detection DEMO": [[6, "face-detection-demo"]], "Export: ONNX": [[7, "export-onnx"]], "Export: TensorRT": [[8, "export-tensorrt"]], "Informations": [[8, "informations"]], "Benchmark your TensorRT Model - C++ Benchmark": [[8, "benchmark-your-tensorrt-model-c-benchmark"]], "Analyse the execution performances of your TensorRT Model (FP32)": [[8, "analyse-the-execution-performances-of-your-tensorrt-model-fp32"]], "Deploy your TensorRT Model in Application": [[8, "deploy-your-tensorrt-model-in-application"]], "Export: other / legacy": [[9, "export-other-legacy"]], "C export": [[9, "c-export"]], "CPP_OpenCL export": [[9, "cpp-opencl-export"]], "CPP_cuDNN export": [[9, "cpp-cudnn-export"]], "C_HLS export": [[9, "c-hls-export"]], "Layer compatibility table": [[9, "layer-compatibility-table"], [40, "layer-compatibility-table"]], "N2D2": [[10, "n2d2"]], "ONNX Import": [[10, null]], "Quantization and Export": [[10, null]], "INI File Interface": [[10, null]], "Python API": [[10, null]], "C++/Python core": [[10, null]], "C++ API / Developer": [[10, null]], "Indices and tables": [[10, "indices-and-tables"]], "Stimuli data analysis": [[11, "stimuli-data-analysis"]], "Zero-mean and unity standard deviation normalization": [[11, "zero-mean-and-unity-standard-deviation-normalization"]], "Substracting the mean image of the set": [[11, "substracting-the-mean-image-of-the-set"]], "CompositeLabel parameter": [[12, "compositelabel-parameter"]], "Multi-channel handling": [[12, "multi-channel-handling"]], "MNIST": [[12, "mnist"], [26, "mnist"]], "GTSRB": [[12, "gtsrb"], [26, "gtsrb"]], "Directory": [[12, "directory"]], "Speech Commands Dataset": [[12, "speech-commands-dataset"]], "CSV data files": [[12, "csv-data-files"]], "Usage example": [[12, "usage-example"], [25, "usage-example"], [25, "id4"], [25, "id5"], [25, "id8"]], "Other built-in databases": [[12, "other-built-in-databases"]], "CIFAR10_Database": [[12, "cifar10-database"]], "CIFAR100_Database": [[12, "cifar100-database"]], "Cityscapes_Database": [[12, "cityscapes-database"]], "Dataset images slicing": [[12, "dataset-images-slicing"]], "Stimuli provider (Environment)": [[13, "stimuli-provider-environment"]], "Data range and conversion": [[13, "data-range-and-conversion"]], "Images slicing during training and inference": [[13, "images-slicing-during-training-and-inference"]], "Blending for data augmentation": [[13, "blending-for-data-augmentation"]], "Built-in transformations": [[13, "built-in-transformations"]], "Gaussian window": [[13, "gaussian-window"]], "Blackman window": [[13, "blackman-window"]], "Kaiser window": [[13, "kaiser-window"]], "CentroidCropTransformation": [[13, "centroidcroptransformation"]], "BlendingTransformation": [[13, "blendingtransformation"]], "BlendingMethod": [[13, "blendingmethod"]], "Labels mapping": [[13, "labels-mapping"]], "ChannelDropTransformation": [[13, "channeldroptransformation"]], "ChannelShakeTransformation": [[13, "channelshaketransformation"]], "Distribution": [[13, "distribution"]], "* kernel": [[13, "kernel"]], "Gaussian kernel": [[13, "gaussian-kernel"]], "LoG kernel": [[13, "log-kernel"]], "DoG kernel": [[13, "dog-kernel"]], "Gabor kernel": [[13, "gabor-kernel"]], "LabelFilterTransformation": [[13, "labelfiltertransformation"]], "ROIExtractionTransformation": [[13, "roiextractiontransformation"]], "StripeRemoveTransformation": [[13, "striperemovetransformation"]], "TrimTransformation": [[13, "trimtransformation"]], "Syntax": [[14, "syntax"]], "Properties": [[14, "properties"]], "Sections": [[14, "sections"]], "Case sensitivity": [[14, "case-sensitivity"]], "Comments": [[14, "comments"]], "Quoted values": [[14, "quoted-values"]], "Whitespace": [[14, "whitespace"]], "Escape characters": [[14, "escape-characters"]], "Template inclusion syntax": [[14, "template-inclusion-syntax"]], "Variable substitution": [[14, "variable-substitution"]], "Control statements": [[14, "control-statements"]], "block": [[14, "block"]], "for": [[14, "for"]], "if": [[14, "if"]], "include": [[14, "include"]], "Global parameters": [[14, "global-parameters"]], "Network Layers": [[15, "network-layers"]], "Layer definition": [[15, "layer-definition"]], "Weight fillers": [[15, "weight-fillers"]], "ConstantFiller": [[15, "constantfiller"]], "HeFiller": [[15, "hefiller"]], "NormalFiller": [[15, "normalfiller"]], "UniformFiller": [[15, "uniformfiller"]], "XavierFiller": [[15, "xavierfiller"]], "Weight solvers": [[15, "weight-solvers"]], "SGDSolver_Frame": [[15, "sgdsolver-frame"]], "SGDSolver_Frame_CUDA": [[15, "sgdsolver-frame-cuda"]], "AdamSolver_Frame": [[15, "adamsolver-frame"]], "AdamSolver_Frame_CUDA": [[15, "adamsolver-frame-cuda"]], "Activation functions": [[15, "activation-functions"]], "Logistic": [[15, "logistic"]], "LogisticWithLoss": [[15, "logisticwithloss"]], "Rectifier": [[15, "rectifier"], [25, "rectifier"]], "Saturation": [[15, "saturation"]], "Softplus": [[15, "softplus"]], "Tanh": [[15, "tanh"], [25, "tanh"]], "TanhLeCun": [[15, "tanhlecun"]], "Anchor": [[15, "anchor"]], "Configuration parameters (Frame models)": [[15, "configuration-parameters-frame-models"], [15, "id6"], [15, "id7"], [15, "id8"], [15, "id10"], [15, "id12"], [15, "id13"], [15, "id15"], [15, "id18"], [15, "id19"]], "Outputs remapping": [[15, "outputs-remapping"]], "BatchNorm": [[15, "batchnorm"]], "Conv": [[15, "conv"], [25, "conv"]], "Configuration parameters (Spike models)": [[15, "configuration-parameters-spike-models"], [15, "id14"], [15, "id17"]], "Deconv": [[15, "deconv"], [25, "deconv"]], "Dropout": [[15, "dropout"], [25, "dropout"]], "ElemWise": [[15, "elemwise"], [25, "elemwise"]], "Sum operation": [[15, "sum-operation"]], "AbsSum operation": [[15, "abssum-operation"]], "EuclideanSum operation": [[15, "euclideansum-operation"]], "Prod operation": [[15, "prod-operation"]], "Max operation": [[15, "max-operation"]], "Examples": [[15, "examples"]], "FMP": [[15, "fmp"]], "Fc": [[15, "fc"], [25, "fc"]], "LRN": [[15, "lrn"]], "LSTM": [[15, "lstm"]], "Global layer parameters (Frame_CUDA models)": [[15, "global-layer-parameters-frame-cuda-models"]], "Configuration parameters (Frame_CUDA models)": [[15, "configuration-parameters-frame-cuda-models"]], "Current restrictions": [[15, "current-restrictions"]], "Further development requirements": [[15, "further-development-requirements"]], "Development guidance": [[15, "development-guidance"]], "Normalize": [[15, "normalize"]], "Padding": [[15, "padding"], [25, "padding"]], "Pool": [[15, "pool"], [25, "pool"]], "Maxout example": [[15, "maxout-example"]], "Rbf": [[15, "rbf"]], "Resize": [[15, "resize"], [25, "resize"]], "Configuration parameters": [[15, "configuration-parameters"]], "Softmax": [[15, "softmax"], [25, "softmax"]], "Threshold": [[15, "threshold"]], "Unpool": [[15, "unpool"]], "Targets (outputs & losses)": [[16, "targets-outputs-losses"]], "From labels to targets": [[16, "from-labels-to-targets"]], "Pixel-wise segmentation": [[16, "pixel-wise-segmentation"]], "Loss functions": [[16, "loss-functions"]], "Demonstration": [[16, null]], "Target types": [[16, "target-types"]], "TargetScore": [[16, "targetscore"]], "TargetROIs": [[16, "targetrois"]], "About N2D2-IP": [[17, "about-n2d2-ip"]], "Presentation": [[18, "presentation"], [35, "presentation"], [35, "id1"]], "Database handling": [[18, "database-handling"]], "Data pre-processing": [[18, "data-pre-processing"]], "Deep network building": [[18, "deep-network-building"]], "Performances evaluation": [[18, "performances-evaluation"]], "Hardware exports": [[18, "hardware-exports"]], "Summary": [[18, "summary"]], "Performance evaluation tools": [[19, "performance-evaluation-tools"]], "Key performance metrics": [[19, "key-performance-metrics"]], "Interactive Confusion Matrix Tool": [[19, "interactive-confusion-matrix-tool"]], "Overview": [[19, "overview"]], "Single class performances evaluation": [[19, "single-class-performances-evaluation"]], "Classes aggregation": [[19, "classes-aggregation"]], "Selected items table view": [[19, "selected-items-table-view"]], "Items viewer": [[19, "items-viewer"]], "Automatic Performances Report Generation": [[19, "automatic-performances-report-generation"]], "Performing simulations": [[20, "performing-simulations"]], "Minimum system requirements": [[20, "minimum-system-requirements"]], "Obtaining N2D2": [[20, "obtaining-n2d2"]], "Prerequisites": [[20, "prerequisites"]], "Red Hat Enterprise Linux (RHEL) 6": [[20, "red-hat-enterprise-linux-rhel-6"]], "Ubuntu": [[20, "ubuntu"]], "Windows": [[20, "windows"]], "Getting the sources": [[20, "getting-the-sources"]], "Compilation": [[20, "compilation"]], "Downloading training datasets": [[20, "downloading-training-datasets"]], "Run the learning": [[20, "run-the-learning"]], "Test a learned network": [[20, "test-a-learned-network"]], "Interpreting the results": [[20, "interpreting-the-results"]], "Recognition rate": [[20, "recognition-rate"]], "Confusion matrix": [[20, "confusion-matrix"]], "Memory and computation requirements": [[20, "memory-and-computation-requirements"]], "Kernels and weights distribution": [[20, "kernels-and-weights-distribution"]], "Output maps activity": [[20, "output-maps-activity"]], "Tutorials": [[21, "tutorials"]], "Learning deep neural networks: tips and tricks": [[21, "learning-deep-neural-networks-tips-and-tricks"]], "Choose the learning solver": [[21, "choose-the-learning-solver"]], "Choose the learning hyper-parameters": [[21, "choose-the-learning-hyper-parameters"]], "Convergence and normalization": [[21, "convergence-and-normalization"]], "Building a classifier neural network": [[21, "building-a-classifier-neural-network"]], "Building a segmentation neural network": [[21, "building-a-segmentation-neural-network"]], "Faces detection": [[21, "faces-detection"]], "Gender recognition": [[21, "gender-recognition"]], "ROIs extraction": [[21, "rois-extraction"]], "Data visualization": [[21, "data-visualization"]], "Transcoding a learned network in spike-coding": [[21, "transcoding-a-learned-network-in-spike-coding"]], "Render the network compatible with spike simulations": [[21, "render-the-network-compatible-with-spike-simulations"]], "Configure spike-coding parameters": [[21, "configure-spike-coding-parameters"]], "Obtain ONNX models": [[22, "obtain-onnx-models"]], "Convert from PyTorch": [[22, "convert-from-pytorch"]], "Convert from TF/Keras": [[22, "convert-from-tf-keras"]], "Download pre-trained models": [[22, "download-pre-trained-models"]], "Import ONNX models": [[23, "import-onnx-models"]], "Preliminary steps": [[23, "preliminary-steps"]], "With an INI file": [[23, "with-an-ini-file"], [24, "with-an-ini-file"]], "ONNX INI section type": [[23, "onnx-ini-section-type"]], "Transpose option usage": [[23, "transpose-option-usage"]], "Supported operators": [[23, "supported-operators"]], "Train from ONNX models": [[24, "train-from-onnx-models"]], "1) Remove the original classifier": [[24, "remove-the-original-classifier"]], "2) Add a new classifier to the ONNX model": [[24, "add-a-new-classifier-to-the-onnx-model"]], "3) Fine tuning (optional)": [[24, "fine-tuning-optional"]], "With the Python API": [[24, "with-the-python-api"]], "Block": [[25, "block"]], "Sequence": [[25, "sequence"]], "Layer": [[25, "layer"]], "DeepNetCell": [[25, "deepnetcell"]], "NeuralNetworkCell": [[25, "neuralnetworkcell"]], "BatchNorm2d": [[25, "batchnorm2d"]], "Reshape": [[25, "reshape"], [26, "reshape"]], "Scaling": [[25, "scaling"]], "Transpose": [[25, "transpose"]], "Saving parameters": [[25, "saving-parameters"]], "Configuration section": [[25, "configuration-section"]], "Mapping": [[25, "mapping"]], "Set solver at construction time": [[25, "set-solver-at-construction-time"]], "Set a solver for a specific parameter": [[25, "set-a-solver-for-a-specific-parameter"]], "Set a solver for a model": [[25, "set-a-solver-for-a-model"]], "SGD": [[25, "sgd"]], "Adam": [[25, "adam"]], "Setting a filler at construction time": [[25, "setting-a-filler-at-construction-time"]], "Changing the filler of an instanciated object": [[25, "changing-the-filler-of-an-instanciated-object"]], "He": [[25, "he"]], "Normal": [[25, "normal"]], "Constant": [[25, "constant"]], "Xavier": [[25, "xavier"]], "Activations": [[25, "activations"]], "Linear": [[25, "linear"]], "DIR": [[26, "dir"]], "Loading a custom database": [[26, "loading-a-custom-database"]], "Handling labelization": [[26, "handling-labelization"]], "ILSVRC2012": [[26, "ilsvrc2012"]], "CIFAR10": [[26, "cifar10"]], "CIFAR100": [[26, "cifar100"]], "Cityscapes": [[26, "cityscapes"]], "Composite": [[26, "composite"]], "PadCrop": [[26, "padcrop"]], "Distortion": [[26, "distortion"]], "Rescale": [[26, "rescale"]], "ColorSpace": [[26, "colorspace"]], "Flip": [[26, "flip"]], "RangeAffine": [[26, "rangeaffine"]], "SliceExtraction": [[26, "sliceextraction"]], "RandomResizeCrop": [[26, "randomresizecrop"]], "ChannelExtraction": [[26, "channelextraction"]], "Sending data to the Neural Network": [[26, "sending-data-to-the-neural-network"]], "Data augmentation": [[28, "data-augmentation"], [28, "id1"]], "Preliminary": [[28, "preliminary"]], "Loading data": [[28, "loading-data"]], "Getting labels": [[28, "getting-labels"]], "Graph manipulation": [[29, "graph-manipulation"]], "Printing n2d2 graph": [[29, "printing-n2d2-graph"]], "Manipulating Sequences": [[29, "manipulating-sequences"]], "Keras interoperability": [[30, "keras-interoperability"]], "Load from ONNX": [[31, "load-from-onnx"]], "Loading an ONNX": [[31, "loading-an-onnx"]], "Training and exporting the model": [[31, "training-and-exporting-the-model"]], "Performance analysis": [[32, "performance-analysis"]], "Use-case presentation": [[32, "use-case-presentation"]], "Defining the inputs of the Neural Network": [[32, "defining-the-inputs-of-the-neural-network"]], "Defining the neural network": [[32, "defining-the-neural-network"]], "Training the neural network": [[32, "training-the-neural-network"]], "Performance analysis tools": [[32, "performance-analysis-tools"]], "Torch interoperability": [[33, "torch-interoperability"]], "Export": [[34, "export"]], "Listing available cells for an export": [[34, "listing-available-cells-for-an-export"]], "Export C": [[34, "export-c"]], "Exportable cells": [[34, "exportable-cells"], [34, "id1"], [34, "id4"]], "Documentation": [[34, "documentation"], [34, "id2"], [34, "id5"], [35, "documentation"], [35, "id2"]], "Frequently asked question": [[34, "frequently-asked-question"]], "Scaling and ElemWise are the only layers supported in Fixed-point scaling mode": [[34, "scaling-and-elemwise-are-the-only-layers-supported-in-fixed-point-scaling-mode"]], "Export CPP": [[34, "export-cpp"]], "Export CPP TensorRT": [[34, "export-cpp-tensorrt"]], "Interoperability": [[35, "interoperability"]], "Keras [experimental feature]": [[35, "keras-experimental-feature"]], "Changing the optimizer": [[35, "changing-the-optimizer"]], "PyTorch [experimental feature]": [[35, "pytorch-experimental-feature"]], "Tensor conversion": [[35, "tensor-conversion"]], "Installation of the virtual environment": [[36, "installation-of-the-virtual-environment"]], "Installation of the Python API": [[36, "installation-of-the-python-api"]], "With the Python Package Index (Py Pi)": [[36, "with-the-python-package-index-py-pi"]], "From the N2D2 Github repository": [[36, "from-the-n2d2-github-repository"]], "If you have already cloned the Github repository": [[36, "if-you-have-already-cloned-the-github-repository"]], "Installation for developer": [[36, "installation-for-developer"]], "Frequent issues": [[36, "frequent-issues"]], "Module not found N2D2": [[36, "module-not-found-n2d2"]], "N2D2 doesn\u2019t compile with the right version of Python": [[36, "n2d2-doesn-t-compile-with-the-right-version-of-python"]], "Lib not found when compiling": [[36, "lib-not-found-when-compiling"]], "Test of the Python API": [[36, "test-of-the-python-api"]], "Default values": [[36, "default-values"]], "List of modifiable parameters": [[36, "list-of-modifiable-parameters"]], "Manipulating tensors": [[37, "manipulating-tensors"]], "Coordinates": [[37, "coordinates"]], "Index": [[37, "index"]], "Slice": [[37, "slice"]], "Set values method": [[37, "set-values-method"]], "Numpy": [[37, "numpy"]], "To Numpy": [[37, "to-numpy"]], "From Numpy": [[37, "from-numpy"]], "CUDA Tensor": [[37, "cuda-tensor"]], "Synchronization example": [[37, "synchronization-example"]], "Post-training quantization": [[38, "post-training-quantization"]], "1) Weights normalization": [[38, "weights-normalization"]], "2) Activations normalization": [[38, "activations-normalization"]], "3) Quantization": [[38, "quantization"]], "Additional optimization strategies": [[38, "additional-optimization-strategies"]], "Weights clipping (optional)": [[38, "weights-clipping-optional"]], "Activation scaling factor approximation": [[38, "activation-scaling-factor-approximation"]], "Usage in N2D2": [[38, "usage-in-n2d2"]], "-act-rescaling-mode": [[38, "act-rescaling-mode"]], "Command line example": [[38, "command-line-example"]], "Examples and results": [[38, "examples-and-results"]], "Pruning": [[39, "pruning"]], "Getting Started": [[39, "getting-started"], [40, "getting-started"]], "Example with Python": [[39, "example-with-python"]], "Pruning mode": [[39, "pruning-mode"]], "Pruning filler": [[39, "pruning-filler"]], "Example with INI file": [[39, "example-with-ini-file"]], "Quantization-Aware Training": [[40, "quantization-aware-training"]], "Cell Quantizer Definition": [[40, "cell-quantizer-definition"]], "LSQ": [[40, "lsq"], [40, "id3"]], "SAT": [[40, "sat"], [40, "id5"]], "Activation Quantizer Definition": [[40, "activation-quantizer-definition"]], "Tutorial": [[40, "tutorial"]], "ONNX model : ResNet-18 Example - INI File": [[40, "onnx-model-resnet-18-example-ini-file"]], "ONNX model : ResNet-18 Example - Python": [[40, "onnx-model-resnet-18-example-python"]], "Hand-Made model : LeNet Example - INI File": [[40, "hand-made-model-lenet-example-ini-file"]], "Hand-Made model : LeNet Example - Python": [[40, "hand-made-model-lenet-example-python"]], "Part 1 : Learn with clamped weights": [[40, "part-1-learn-with-clamped-weights"]], "Part 2 : Quantized LeNet with SAT": [[40, "part-2-quantized-lenet-with-sat"]], "Results": [[40, "results"]], "Training Time Performances": [[40, "training-time-performances"]], "MobileNet-v1": [[40, "mobilenet-v1"]], "MobileNet-v2": [[40, "mobilenet-v2"]], "ResNet": [[40, "resnet"]], "Inception-v1": [[40, "inception-v1"]], "References": [[41, "references"]]}, "indexentries": {"aer_database (class in n2d2)": [[1, "N2D2.AER_Database"]], "aer_database.stimuliset (class in n2d2)": [[1, "N2D2.AER_Database.StimuliSet"]], "aer_database.stimulisetmask (class in n2d2)": [[1, "N2D2.AER_Database.StimuliSetMask"]], "actitracker_database (class in n2d2)": [[1, "N2D2.Actitracker_Database"]], "actitracker_database.stimuliset (class in n2d2)": [[1, "N2D2.Actitracker_Database.StimuliSet"]], "actitracker_database.stimulisetmask (class in n2d2)": [[1, "N2D2.Actitracker_Database.StimuliSetMask"]], "activation (class in n2d2)": [[1, "N2D2.Activation"]], "affinetransformation (class in n2d2)": [[1, "N2D2.AffineTransformation"]], "affinetransformation.operator (class in n2d2)": [[1, "N2D2.AffineTransformation.Operator"]], "anchorcell (class in n2d2)": [[1, "N2D2.AnchorCell"]], "anchorcell.freeparameterstype (class in n2d2)": [[1, "N2D2.AnchorCell.FreeParametersType"]], "anchorcell_frame (class in n2d2)": [[1, "N2D2.AnchorCell_Frame"]], "anchorcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.AnchorCell_Frame.FreeParametersType"]], "anchorcell_frame.signals (class in n2d2)": [[1, "N2D2.AnchorCell_Frame.Signals"]], "anchorcell_frame_cuda (class in n2d2)": [[1, "N2D2.AnchorCell_Frame_CUDA"]], "anchorcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.AnchorCell_Frame_CUDA.FreeParametersType"]], "anchorcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.AnchorCell_Frame_CUDA.Signals"]], "apodizationtransformation (class in n2d2)": [[1, "N2D2.ApodizationTransformation"]], "basetensor (class in n2d2)": [[1, "N2D2.BaseTensor"]], "batchnormcell (class in n2d2)": [[1, "N2D2.BatchNormCell"]], "batchnormcell.freeparameterstype (class in n2d2)": [[1, "N2D2.BatchNormCell.FreeParametersType"]], "batchnormcell_frame_cuda_double (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double"]], "batchnormcell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.FreeParametersType"]], "batchnormcell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.Signals"]], "batchnormcell_frame_cuda_float (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float"]], "batchnormcell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.FreeParametersType"]], "batchnormcell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.Signals"]], "batchnormcell_frame_double (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_double"]], "batchnormcell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_double.FreeParametersType"]], "batchnormcell_frame_double.signals (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_double.Signals"]], "batchnormcell_frame_float (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_float"]], "batchnormcell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_float.FreeParametersType"]], "batchnormcell_frame_float.signals (class in n2d2)": [[1, "N2D2.BatchNormCell_Frame_float.Signals"]], "cifar_database (class in n2d2)": [[1, "N2D2.CIFAR_Database"]], "cifar_database.stimuliset (class in n2d2)": [[1, "N2D2.CIFAR_Database.StimuliSet"]], "cifar_database.stimulisetmask (class in n2d2)": [[1, "N2D2.CIFAR_Database.StimuliSetMask"]], "ckp_database (class in n2d2)": [[1, "N2D2.CKP_Database"]], "ckp_database.stimuliset (class in n2d2)": [[1, "N2D2.CKP_Database.StimuliSet"]], "ckp_database.stimulisetmask (class in n2d2)": [[1, "N2D2.CKP_Database.StimuliSetMask"]], "caltech101_dir_database (class in n2d2)": [[1, "N2D2.Caltech101_DIR_Database"]], "caltech101_dir_database.stimuliset (class in n2d2)": [[1, "N2D2.Caltech101_DIR_Database.StimuliSet"]], "caltech101_dir_database.stimulisetmask (class in n2d2)": [[1, "N2D2.Caltech101_DIR_Database.StimuliSetMask"]], "caltech256_dir_database (class in n2d2)": [[1, "N2D2.Caltech256_DIR_Database"]], "caltech256_dir_database.stimuliset (class in n2d2)": [[1, "N2D2.Caltech256_DIR_Database.StimuliSet"]], "caltech256_dir_database.stimulisetmask (class in n2d2)": [[1, "N2D2.Caltech256_DIR_Database.StimuliSetMask"]], "caltechpedestrian_database (class in n2d2)": [[1, "N2D2.CaltechPedestrian_Database"]], "caltechpedestrian_database.stimuliset (class in n2d2)": [[1, "N2D2.CaltechPedestrian_Database.StimuliSet"]], "caltechpedestrian_database.stimulisetmask (class in n2d2)": [[1, "N2D2.CaltechPedestrian_Database.StimuliSetMask"]], "celeba_database (class in n2d2)": [[1, "N2D2.CelebA_Database"]], "celeba_database.stimuliset (class in n2d2)": [[1, "N2D2.CelebA_Database.StimuliSet"]], "celeba_database.stimulisetmask (class in n2d2)": [[1, "N2D2.CelebA_Database.StimuliSetMask"]], "cell (class in n2d2)": [[1, "N2D2.Cell"]], "cell.freeparameterstype (class in n2d2)": [[1, "N2D2.Cell.FreeParametersType"]], "cell_frame_cuda_double (class in n2d2)": [[1, "N2D2.Cell_Frame_CUDA_double"]], "cell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.Cell_Frame_CUDA_double.FreeParametersType"]], "cell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.Cell_Frame_CUDA_double.Signals"]], "cell_frame_cuda_float (class in n2d2)": [[1, "N2D2.Cell_Frame_CUDA_float"]], "cell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.Cell_Frame_CUDA_float.FreeParametersType"]], "cell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.Cell_Frame_CUDA_float.Signals"]], "cell_frame_top (class in n2d2)": [[1, "N2D2.Cell_Frame_Top"]], "cell_frame_top.signals (class in n2d2)": [[1, "N2D2.Cell_Frame_Top.Signals"]], "cell_frame_double (class in n2d2)": [[1, "N2D2.Cell_Frame_double"]], "cell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.Cell_Frame_double.FreeParametersType"]], "cell_frame_double.signals (class in n2d2)": [[1, "N2D2.Cell_Frame_double.Signals"]], "cell_frame_float (class in n2d2)": [[1, "N2D2.Cell_Frame_float"]], "cell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.Cell_Frame_float.FreeParametersType"]], "cell_frame_float.signals (class in n2d2)": [[1, "N2D2.Cell_Frame_float.Signals"]], "channelextractiontransformation (class in n2d2)": [[1, "N2D2.ChannelExtractionTransformation"]], "channelextractiontransformation.channel (class in n2d2)": [[1, "N2D2.ChannelExtractionTransformation.Channel"]], "colorspacetransformation (class in n2d2)": [[1, "N2D2.ColorSpaceTransformation"]], "colorspacetransformation.colorspace (class in n2d2)": [[1, "N2D2.ColorSpaceTransformation.ColorSpace"]], "compositetransformation (class in n2d2)": [[1, "N2D2.CompositeTransformation"]], "compressionnoisetransformation (class in n2d2)": [[1, "N2D2.CompressionNoiseTransformation"]], "convcell (class in n2d2)": [[1, "N2D2.ConvCell"]], "convcell.freeparameterstype (class in n2d2)": [[1, "N2D2.ConvCell.FreeParametersType"]], "convcell.weightsexportformat (class in n2d2)": [[1, "N2D2.ConvCell.WeightsExportFormat"]], "convcell_frame_cuda_double (class in n2d2)": [[1, "N2D2.ConvCell_Frame_CUDA_double"]], "convcell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.ConvCell_Frame_CUDA_double.FreeParametersType"]], "convcell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.ConvCell_Frame_CUDA_double.Signals"]], "convcell_frame_cuda_double.weightsexportformat (class in n2d2)": [[1, "N2D2.ConvCell_Frame_CUDA_double.WeightsExportFormat"]], "convcell_frame_cuda_float (class in n2d2)": [[1, "N2D2.ConvCell_Frame_CUDA_float"]], "convcell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.ConvCell_Frame_CUDA_float.FreeParametersType"]], "convcell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.ConvCell_Frame_CUDA_float.Signals"]], "convcell_frame_cuda_float.weightsexportformat (class in n2d2)": [[1, "N2D2.ConvCell_Frame_CUDA_float.WeightsExportFormat"]], "convcell_frame_double (class in n2d2)": [[1, "N2D2.ConvCell_Frame_double"]], "convcell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.ConvCell_Frame_double.FreeParametersType"]], "convcell_frame_double.signals (class in n2d2)": [[1, "N2D2.ConvCell_Frame_double.Signals"]], "convcell_frame_double.weightsexportformat (class in n2d2)": [[1, "N2D2.ConvCell_Frame_double.WeightsExportFormat"]], "convcell_frame_float (class in n2d2)": [[1, "N2D2.ConvCell_Frame_float"]], "convcell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.ConvCell_Frame_float.FreeParametersType"]], "convcell_frame_float.signals (class in n2d2)": [[1, "N2D2.ConvCell_Frame_float.Signals"]], "convcell_frame_float.weightsexportformat (class in n2d2)": [[1, "N2D2.ConvCell_Frame_float.WeightsExportFormat"]], "cudabasedevicetensor (class in n2d2)": [[1, "N2D2.CudaBaseDeviceTensor"]], "cudabasetensor (class in n2d2)": [[1, "N2D2.CudaBaseTensor"]], "cudatensor_double (class in n2d2)": [[1, "N2D2.CudaTensor_double"]], "cudatensor_float (class in n2d2)": [[1, "N2D2.CudaTensor_float"]], "dcttransformation (class in n2d2)": [[1, "N2D2.DCTTransformation"]], "dfttransformation (class in n2d2)": [[1, "N2D2.DFTTransformation"]], "dir_database (class in n2d2)": [[1, "N2D2.DIR_Database"]], "dir_database.stimuliset (class in n2d2)": [[1, "N2D2.DIR_Database.StimuliSet"]], "dir_database.stimulisetmask (class in n2d2)": [[1, "N2D2.DIR_Database.StimuliSetMask"]], "dota_database (class in n2d2)": [[1, "N2D2.DOTA_Database"]], "dota_database.stimuliset (class in n2d2)": [[1, "N2D2.DOTA_Database.StimuliSet"]], "dota_database.stimulisetmask (class in n2d2)": [[1, "N2D2.DOTA_Database.StimuliSetMask"]], "daimler_database (class in n2d2)": [[1, "N2D2.Daimler_Database"]], "daimler_database.stimuliset (class in n2d2)": [[1, "N2D2.Daimler_Database.StimuliSet"]], "daimler_database.stimulisetmask (class in n2d2)": [[1, "N2D2.Daimler_Database.StimuliSetMask"]], "database (class in n2d2)": [[1, "N2D2.Database"]], "database.stimuliset (class in n2d2)": [[1, "N2D2.Database.StimuliSet"]], "database.stimulisetmask (class in n2d2)": [[1, "N2D2.Database.StimuliSetMask"]], "deconvcell (class in n2d2)": [[1, "N2D2.DeconvCell"]], "deconvcell.freeparameterstype (class in n2d2)": [[1, "N2D2.DeconvCell.FreeParametersType"]], "deconvcell_frame_cuda_double (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_CUDA_double"]], "deconvcell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.FreeParametersType"]], "deconvcell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.Signals"]], "deconvcell_frame_cuda_float (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_CUDA_float"]], "deconvcell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.FreeParametersType"]], "deconvcell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.Signals"]], "deconvcell_frame_double (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_double"]], "deconvcell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_double.FreeParametersType"]], "deconvcell_frame_double.signals (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_double.Signals"]], "deconvcell_frame_float (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_float"]], "deconvcell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_float.FreeParametersType"]], "deconvcell_frame_float.signals (class in n2d2)": [[1, "N2D2.DeconvCell_Frame_float.Signals"]], "deepnet (class in n2d2)": [[1, "N2D2.DeepNet"]], "distortiontransformation (class in n2d2)": [[1, "N2D2.DistortionTransformation"]], "dropoutcell (class in n2d2)": [[1, "N2D2.DropoutCell"]], "dropoutcell.freeparameterstype (class in n2d2)": [[1, "N2D2.DropoutCell.FreeParametersType"]], "dropoutcell_frame_cuda_double (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_CUDA_double"]], "dropoutcell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.FreeParametersType"]], "dropoutcell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.Signals"]], "dropoutcell_frame_cuda_float (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_CUDA_float"]], "dropoutcell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.FreeParametersType"]], "dropoutcell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.Signals"]], "dropoutcell_frame_double (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_double"]], "dropoutcell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_double.FreeParametersType"]], "dropoutcell_frame_double.signals (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_double.Signals"]], "dropoutcell_frame_float (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_float"]], "dropoutcell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_float.FreeParametersType"]], "dropoutcell_frame_float.signals (class in n2d2)": [[1, "N2D2.DropoutCell_Frame_float.Signals"]], "elemwisecell (class in n2d2)": [[1, "N2D2.ElemWiseCell"]], "elemwisecell.coeffmode (class in n2d2)": [[1, "N2D2.ElemWiseCell.CoeffMode"]], "elemwisecell.freeparameterstype (class in n2d2)": [[1, "N2D2.ElemWiseCell.FreeParametersType"]], "elemwisecell.operation (class in n2d2)": [[1, "N2D2.ElemWiseCell.Operation"]], "elemwisecell_frame (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame"]], "elemwisecell_frame.coeffmode (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame.CoeffMode"]], "elemwisecell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame.FreeParametersType"]], "elemwisecell_frame.operation (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame.Operation"]], "elemwisecell_frame.signals (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame.Signals"]], "elemwisecell_frame_cuda (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame_CUDA"]], "elemwisecell_frame_cuda.coeffmode (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.CoeffMode"]], "elemwisecell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.FreeParametersType"]], "elemwisecell_frame_cuda.operation (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.Operation"]], "elemwisecell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.Signals"]], "equalizetransformation (class in n2d2)": [[1, "N2D2.EqualizeTransformation"]], "expandlabeltransformation (class in n2d2)": [[1, "N2D2.ExpandLabelTransformation"]], "fddb_database (class in n2d2)": [[1, "N2D2.FDDB_Database"]], "fddb_database.stimuliset (class in n2d2)": [[1, "N2D2.FDDB_Database.StimuliSet"]], "fddb_database.stimulisetmask (class in n2d2)": [[1, "N2D2.FDDB_Database.StimuliSetMask"]], "fmpcell (class in n2d2)": [[1, "N2D2.FMPCell"]], "fmpcell.freeparameterstype (class in n2d2)": [[1, "N2D2.FMPCell.FreeParametersType"]], "fmpcell_frame (class in n2d2)": [[1, "N2D2.FMPCell_Frame"]], "fmpcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.FMPCell_Frame.FreeParametersType"]], "fmpcell_frame.signals (class in n2d2)": [[1, "N2D2.FMPCell_Frame.Signals"]], "fmpcell_frame_cuda (class in n2d2)": [[1, "N2D2.FMPCell_Frame_CUDA"]], "fmpcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.FMPCell_Frame_CUDA.FreeParametersType"]], "fmpcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.FMPCell_Frame_CUDA.Signals"]], "fashion_mnist_idx_database (class in n2d2)": [[1, "N2D2.Fashion_MNIST_IDX_Database"]], "fashion_mnist_idx_database.stimuliset (class in n2d2)": [[1, "N2D2.Fashion_MNIST_IDX_Database.StimuliSet"]], "fashion_mnist_idx_database.stimulisetmask (class in n2d2)": [[1, "N2D2.Fashion_MNIST_IDX_Database.StimuliSetMask"]], "fccell (class in n2d2)": [[1, "N2D2.FcCell"]], "fccell.freeparameterstype (class in n2d2)": [[1, "N2D2.FcCell.FreeParametersType"]], "fccell.weightsexportformat (class in n2d2)": [[1, "N2D2.FcCell.WeightsExportFormat"]], "fccell_frame_cuda_double (class in n2d2)": [[1, "N2D2.FcCell_Frame_CUDA_double"]], "fccell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.FcCell_Frame_CUDA_double.FreeParametersType"]], "fccell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.FcCell_Frame_CUDA_double.Signals"]], "fccell_frame_cuda_double.weightsexportformat (class in n2d2)": [[1, "N2D2.FcCell_Frame_CUDA_double.WeightsExportFormat"]], "fccell_frame_cuda_float (class in n2d2)": [[1, "N2D2.FcCell_Frame_CUDA_float"]], "fccell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.FcCell_Frame_CUDA_float.FreeParametersType"]], "fccell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.FcCell_Frame_CUDA_float.Signals"]], "fccell_frame_cuda_float.weightsexportformat (class in n2d2)": [[1, "N2D2.FcCell_Frame_CUDA_float.WeightsExportFormat"]], "fccell_frame_double (class in n2d2)": [[1, "N2D2.FcCell_Frame_double"]], "fccell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.FcCell_Frame_double.FreeParametersType"]], "fccell_frame_double.signals (class in n2d2)": [[1, "N2D2.FcCell_Frame_double.Signals"]], "fccell_frame_double.weightsexportformat (class in n2d2)": [[1, "N2D2.FcCell_Frame_double.WeightsExportFormat"]], "fccell_frame_float (class in n2d2)": [[1, "N2D2.FcCell_Frame_float"]], "fccell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.FcCell_Frame_float.FreeParametersType"]], "fccell_frame_float.signals (class in n2d2)": [[1, "N2D2.FcCell_Frame_float.Signals"]], "fccell_frame_float.weightsexportformat (class in n2d2)": [[1, "N2D2.FcCell_Frame_float.WeightsExportFormat"]], "filler (class in n2d2)": [[1, "N2D2.Filler"]], "filtertransformation (class in n2d2)": [[1, "N2D2.FilterTransformation"]], "fliptransformation (class in n2d2)": [[1, "N2D2.FlipTransformation"]], "gtsdb_dir_database (class in n2d2)": [[1, "N2D2.GTSDB_DIR_Database"]], "gtsdb_dir_database.stimuliset (class in n2d2)": [[1, "N2D2.GTSDB_DIR_Database.StimuliSet"]], "gtsdb_dir_database.stimulisetmask (class in n2d2)": [[1, "N2D2.GTSDB_DIR_Database.StimuliSetMask"]], "gtsrb_dir_database (class in n2d2)": [[1, "N2D2.GTSRB_DIR_Database"]], "gtsrb_dir_database.stimuliset (class in n2d2)": [[1, "N2D2.GTSRB_DIR_Database.StimuliSet"]], "gtsrb_dir_database.stimulisetmask (class in n2d2)": [[1, "N2D2.GTSRB_DIR_Database.StimuliSetMask"]], "gradientfiltertransformation (class in n2d2)": [[1, "N2D2.GradientFilterTransformation"]], "idx_database (class in n2d2)": [[1, "N2D2.IDX_Database"]], "idx_database.stimuliset (class in n2d2)": [[1, "N2D2.IDX_Database.StimuliSet"]], "idx_database.stimulisetmask (class in n2d2)": [[1, "N2D2.IDX_Database.StimuliSetMask"]], "ilsvrc2012_database (class in n2d2)": [[1, "N2D2.ILSVRC2012_Database"]], "ilsvrc2012_database.stimuliset (class in n2d2)": [[1, "N2D2.ILSVRC2012_Database.StimuliSet"]], "ilsvrc2012_database.stimulisetmask (class in n2d2)": [[1, "N2D2.ILSVRC2012_Database.StimuliSetMask"]], "imdbwiki_database (class in n2d2)": [[1, "N2D2.IMDBWIKI_Database"]], "imdbwiki_database.stimuliset (class in n2d2)": [[1, "N2D2.IMDBWIKI_Database.StimuliSet"]], "imdbwiki_database.stimulisetmask (class in n2d2)": [[1, "N2D2.IMDBWIKI_Database.StimuliSetMask"]], "kitti_database (class in n2d2)": [[1, "N2D2.KITTI_Database"]], "kitti_database.stimuliset (class in n2d2)": [[1, "N2D2.KITTI_Database.StimuliSet"]], "kitti_database.stimulisetmask (class in n2d2)": [[1, "N2D2.KITTI_Database.StimuliSetMask"]], "kitti_object_database (class in n2d2)": [[1, "N2D2.KITTI_Object_Database"]], "kitti_object_database.stimuliset (class in n2d2)": [[1, "N2D2.KITTI_Object_Database.StimuliSet"]], "kitti_object_database.stimulisetmask (class in n2d2)": [[1, "N2D2.KITTI_Object_Database.StimuliSetMask"]], "kitti_road_database (class in n2d2)": [[1, "N2D2.KITTI_Road_Database"]], "kitti_road_database.stimuliset (class in n2d2)": [[1, "N2D2.KITTI_Road_Database.StimuliSet"]], "kitti_road_database.stimulisetmask (class in n2d2)": [[1, "N2D2.KITTI_Road_Database.StimuliSetMask"]], "litisrouen_database (class in n2d2)": [[1, "N2D2.LITISRouen_Database"]], "litisrouen_database.stimuliset (class in n2d2)": [[1, "N2D2.LITISRouen_Database.StimuliSet"]], "litisrouen_database.stimulisetmask (class in n2d2)": [[1, "N2D2.LITISRouen_Database.StimuliSetMask"]], "lrncell (class in n2d2)": [[1, "N2D2.LRNCell"]], "lrncell.freeparameterstype (class in n2d2)": [[1, "N2D2.LRNCell.FreeParametersType"]], "lrncell_frame_cuda_double (class in n2d2)": [[1, "N2D2.LRNCell_Frame_CUDA_double"]], "lrncell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.LRNCell_Frame_CUDA_double.FreeParametersType"]], "lrncell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.LRNCell_Frame_CUDA_double.Signals"]], "lrncell_frame_cuda_float (class in n2d2)": [[1, "N2D2.LRNCell_Frame_CUDA_float"]], "lrncell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.LRNCell_Frame_CUDA_float.FreeParametersType"]], "lrncell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.LRNCell_Frame_CUDA_float.Signals"]], "lrncell_frame_double (class in n2d2)": [[1, "N2D2.LRNCell_Frame_double"]], "lrncell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.LRNCell_Frame_double.FreeParametersType"]], "lrncell_frame_double.signals (class in n2d2)": [[1, "N2D2.LRNCell_Frame_double.Signals"]], "lrncell_frame_float (class in n2d2)": [[1, "N2D2.LRNCell_Frame_float"]], "lrncell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.LRNCell_Frame_float.FreeParametersType"]], "lrncell_frame_float.signals (class in n2d2)": [[1, "N2D2.LRNCell_Frame_float.Signals"]], "lstmcell (class in n2d2)": [[1, "N2D2.LSTMCell"]], "lstmcell.freeparameterstype (class in n2d2)": [[1, "N2D2.LSTMCell.FreeParametersType"]], "lstmcell_frame_cuda_double (class in n2d2)": [[1, "N2D2.LSTMCell_Frame_CUDA_double"]], "lstmcell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.FreeParametersType"]], "lstmcell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.Signals"]], "lstmcell_frame_cuda_float (class in n2d2)": [[1, "N2D2.LSTMCell_Frame_CUDA_float"]], "lstmcell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.FreeParametersType"]], "lstmcell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.Signals"]], "labelextractiontransformation (class in n2d2)": [[1, "N2D2.LabelExtractionTransformation"]], "labelsliceextractiontransformation (class in n2d2)": [[1, "N2D2.LabelSliceExtractionTransformation"]], "linearactivation (class in n2d2)": [[1, "N2D2.LinearActivation"]], "linearactivation_frame_cuda_double (class in n2d2)": [[1, "N2D2.LinearActivation_Frame_CUDA_double"]], "linearactivation_frame_cuda_float (class in n2d2)": [[1, "N2D2.LinearActivation_Frame_CUDA_float"]], "linearactivation_frame_double (class in n2d2)": [[1, "N2D2.LinearActivation_Frame_double"]], "linearactivation_frame_float (class in n2d2)": [[1, "N2D2.LinearActivation_Frame_float"]], "logisticactivation (class in n2d2)": [[1, "N2D2.LogisticActivation"]], "mnist_idx_database (class in n2d2)": [[1, "N2D2.MNIST_IDX_Database"]], "mnist_idx_database.stimuliset (class in n2d2)": [[1, "N2D2.MNIST_IDX_Database.StimuliSet"]], "mnist_idx_database.stimulisetmask (class in n2d2)": [[1, "N2D2.MNIST_IDX_Database.StimuliSetMask"]], "magnitudephasetransformation (class in n2d2)": [[1, "N2D2.MagnitudePhaseTransformation"]], "morphologicalreconstructiontransformation (class in n2d2)": [[1, "N2D2.MorphologicalReconstructionTransformation"]], "morphologicalreconstructiontransformation.operation (class in n2d2)": [[1, "N2D2.MorphologicalReconstructionTransformation.Operation"]], "morphologytransformation (class in n2d2)": [[1, "N2D2.MorphologyTransformation"]], "morphologytransformation.operation (class in n2d2)": [[1, "N2D2.MorphologyTransformation.Operation"]], "n_mnist_database (class in n2d2)": [[1, "N2D2.N_MNIST_Database"]], "n_mnist_database.stimuliset (class in n2d2)": [[1, "N2D2.N_MNIST_Database.StimuliSet"]], "n_mnist_database.stimulisetmask (class in n2d2)": [[1, "N2D2.N_MNIST_Database.StimuliSetMask"]], "normalizecell (class in n2d2)": [[1, "N2D2.NormalizeCell"]], "normalizecell.freeparameterstype (class in n2d2)": [[1, "N2D2.NormalizeCell.FreeParametersType"]], "normalizecell.norm (class in n2d2)": [[1, "N2D2.NormalizeCell.Norm"]], "normalizecell_frame_cuda_double (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double"]], "normalizecell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.FreeParametersType"]], "normalizecell_frame_cuda_double.norm (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.Norm"]], "normalizecell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.Signals"]], "normalizecell_frame_cuda_float (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float"]], "normalizecell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.FreeParametersType"]], "normalizecell_frame_cuda_float.norm (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.Norm"]], "normalizecell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.Signals"]], "normalizecell_frame_double (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_double"]], "normalizecell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_double.FreeParametersType"]], "normalizecell_frame_double.norm (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_double.Norm"]], "normalizecell_frame_double.signals (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_double.Signals"]], "normalizecell_frame_float (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_float"]], "normalizecell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_float.FreeParametersType"]], "normalizecell_frame_float.norm (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_float.Norm"]], "normalizecell_frame_float.signals (class in n2d2)": [[1, "N2D2.NormalizeCell_Frame_float.Signals"]], "normalizetransformation (class in n2d2)": [[1, "N2D2.NormalizeTransformation"]], "objectdetcell (class in n2d2)": [[1, "N2D2.ObjectDetCell"]], "objectdetcell.freeparameterstype (class in n2d2)": [[1, "N2D2.ObjectDetCell.FreeParametersType"]], "objectdetcell_frame (class in n2d2)": [[1, "N2D2.ObjectDetCell_Frame"]], "objectdetcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.ObjectDetCell_Frame.FreeParametersType"]], "objectdetcell_frame.signals (class in n2d2)": [[1, "N2D2.ObjectDetCell_Frame.Signals"]], "objectdetcell_frame_cuda (class in n2d2)": [[1, "N2D2.ObjectDetCell_Frame_CUDA"]], "objectdetcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.FreeParametersType"]], "objectdetcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.Signals"]], "padcroptransformation (class in n2d2)": [[1, "N2D2.PadCropTransformation"]], "padcroptransformation.bordertype (class in n2d2)": [[1, "N2D2.PadCropTransformation.BorderType"]], "paddingcell (class in n2d2)": [[1, "N2D2.PaddingCell"]], "paddingcell.freeparameterstype (class in n2d2)": [[1, "N2D2.PaddingCell.FreeParametersType"]], "paddingcell_frame (class in n2d2)": [[1, "N2D2.PaddingCell_Frame"]], "paddingcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.PaddingCell_Frame.FreeParametersType"]], "paddingcell_frame.signals (class in n2d2)": [[1, "N2D2.PaddingCell_Frame.Signals"]], "paddingcell_frame_cuda (class in n2d2)": [[1, "N2D2.PaddingCell_Frame_CUDA"]], "paddingcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.PaddingCell_Frame_CUDA.FreeParametersType"]], "paddingcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.PaddingCell_Frame_CUDA.Signals"]], "poolcell (class in n2d2)": [[1, "N2D2.PoolCell"]], "poolcell.freeparameterstype (class in n2d2)": [[1, "N2D2.PoolCell.FreeParametersType"]], "poolcell.pooling (class in n2d2)": [[1, "N2D2.PoolCell.Pooling"]], "poolcell_frame_cuda_double (class in n2d2)": [[1, "N2D2.PoolCell_Frame_CUDA_double"]], "poolcell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.PoolCell_Frame_CUDA_double.FreeParametersType"]], "poolcell_frame_cuda_double.pooling (class in n2d2)": [[1, "N2D2.PoolCell_Frame_CUDA_double.Pooling"]], "poolcell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.PoolCell_Frame_CUDA_double.Signals"]], "poolcell_frame_cuda_float (class in n2d2)": [[1, "N2D2.PoolCell_Frame_CUDA_float"]], "poolcell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.PoolCell_Frame_CUDA_float.FreeParametersType"]], "poolcell_frame_cuda_float.pooling (class in n2d2)": [[1, "N2D2.PoolCell_Frame_CUDA_float.Pooling"]], "poolcell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.PoolCell_Frame_CUDA_float.Signals"]], "poolcell_frame_ext_cuda_double (class in n2d2)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double"]], "poolcell_frame_ext_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.FreeParametersType"]], "poolcell_frame_ext_cuda_double.pooling (class in n2d2)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.Pooling"]], "poolcell_frame_ext_cuda_double.signals (class in n2d2)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.Signals"]], "poolcell_frame_ext_cuda_float (class in n2d2)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float"]], "poolcell_frame_ext_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.FreeParametersType"]], "poolcell_frame_ext_cuda_float.pooling (class in n2d2)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.Pooling"]], "poolcell_frame_ext_cuda_float.signals (class in n2d2)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.Signals"]], "poolcell_frame_double (class in n2d2)": [[1, "N2D2.PoolCell_Frame_double"]], "poolcell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.PoolCell_Frame_double.FreeParametersType"]], "poolcell_frame_double.pooling (class in n2d2)": [[1, "N2D2.PoolCell_Frame_double.Pooling"]], "poolcell_frame_double.signals (class in n2d2)": [[1, "N2D2.PoolCell_Frame_double.Signals"]], "poolcell_frame_float (class in n2d2)": [[1, "N2D2.PoolCell_Frame_float"]], "poolcell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.PoolCell_Frame_float.FreeParametersType"]], "poolcell_frame_float.pooling (class in n2d2)": [[1, "N2D2.PoolCell_Frame_float.Pooling"]], "poolcell_frame_float.signals (class in n2d2)": [[1, "N2D2.PoolCell_Frame_float.Signals"]], "proposalcell (class in n2d2)": [[1, "N2D2.ProposalCell"]], "proposalcell.freeparameterstype (class in n2d2)": [[1, "N2D2.ProposalCell.FreeParametersType"]], "proposalcell_frame (class in n2d2)": [[1, "N2D2.ProposalCell_Frame"]], "proposalcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.ProposalCell_Frame.FreeParametersType"]], "proposalcell_frame.signals (class in n2d2)": [[1, "N2D2.ProposalCell_Frame.Signals"]], "proposalcell_frame_cuda (class in n2d2)": [[1, "N2D2.ProposalCell_Frame_CUDA"]], "proposalcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.ProposalCell_Frame_CUDA.FreeParametersType"]], "proposalcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.ProposalCell_Frame_CUDA.Signals"]], "roipoolingcell (class in n2d2)": [[1, "N2D2.ROIPoolingCell"]], "roipoolingcell.freeparameterstype (class in n2d2)": [[1, "N2D2.ROIPoolingCell.FreeParametersType"]], "roipoolingcell.roipooling (class in n2d2)": [[1, "N2D2.ROIPoolingCell.ROIPooling"]], "roipoolingcell_frame (class in n2d2)": [[1, "N2D2.ROIPoolingCell_Frame"]], "roipoolingcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.ROIPoolingCell_Frame.FreeParametersType"]], "roipoolingcell_frame.roipooling (class in n2d2)": [[1, "N2D2.ROIPoolingCell_Frame.ROIPooling"]], "roipoolingcell_frame.signals (class in n2d2)": [[1, "N2D2.ROIPoolingCell_Frame.Signals"]], "roipoolingcell_frame_cuda (class in n2d2)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA"]], "roipoolingcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.FreeParametersType"]], "roipoolingcell_frame_cuda.roipooling (class in n2d2)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.ROIPooling"]], "roipoolingcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.Signals"]], "rpcell (class in n2d2)": [[1, "N2D2.RPCell"]], "rpcell.freeparameterstype (class in n2d2)": [[1, "N2D2.RPCell.FreeParametersType"]], "rpcell_frame (class in n2d2)": [[1, "N2D2.RPCell_Frame"]], "rpcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.RPCell_Frame.FreeParametersType"]], "rpcell_frame.signals (class in n2d2)": [[1, "N2D2.RPCell_Frame.Signals"]], "rpcell_frame_cuda (class in n2d2)": [[1, "N2D2.RPCell_Frame_CUDA"]], "rpcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.RPCell_Frame_CUDA.FreeParametersType"]], "rpcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.RPCell_Frame_CUDA.Signals"]], "randomaffinetransformation (class in n2d2)": [[1, "N2D2.RandomAffineTransformation"]], "rangeaffinetransformation (class in n2d2)": [[1, "N2D2.RangeAffineTransformation"]], "rangeaffinetransformation.operator (class in n2d2)": [[1, "N2D2.RangeAffineTransformation.Operator"]], "rangeclippingtransformation (class in n2d2)": [[1, "N2D2.RangeClippingTransformation"]], "rectifieractivation (class in n2d2)": [[1, "N2D2.RectifierActivation"]], "rectifieractivation_frame_cuda_double (class in n2d2)": [[1, "N2D2.RectifierActivation_Frame_CUDA_double"]], "rectifieractivation_frame_cuda_float (class in n2d2)": [[1, "N2D2.RectifierActivation_Frame_CUDA_float"]], "rectifieractivation_frame_double (class in n2d2)": [[1, "N2D2.RectifierActivation_Frame_double"]], "rectifieractivation_frame_float (class in n2d2)": [[1, "N2D2.RectifierActivation_Frame_float"]], "rescaletransformation (class in n2d2)": [[1, "N2D2.RescaleTransformation"]], "reshapetransformation (class in n2d2)": [[1, "N2D2.ReshapeTransformation"]], "resizecell (class in n2d2)": [[1, "N2D2.ResizeCell"]], "resizecell.freeparameterstype (class in n2d2)": [[1, "N2D2.ResizeCell.FreeParametersType"]], "resizecell.resizemode (class in n2d2)": [[1, "N2D2.ResizeCell.ResizeMode"]], "resizecell_frame (class in n2d2)": [[1, "N2D2.ResizeCell_Frame"]], "resizecell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.ResizeCell_Frame.FreeParametersType"]], "resizecell_frame.resizemode (class in n2d2)": [[1, "N2D2.ResizeCell_Frame.ResizeMode"]], "resizecell_frame.signals (class in n2d2)": [[1, "N2D2.ResizeCell_Frame.Signals"]], "resizecell_frame_cuda (class in n2d2)": [[1, "N2D2.ResizeCell_Frame_CUDA"]], "resizecell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.ResizeCell_Frame_CUDA.FreeParametersType"]], "resizecell_frame_cuda.resizemode (class in n2d2)": [[1, "N2D2.ResizeCell_Frame_CUDA.ResizeMode"]], "resizecell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.ResizeCell_Frame_CUDA.Signals"]], "saturationactivation (class in n2d2)": [[1, "N2D2.SaturationActivation"]], "scalingcell (class in n2d2)": [[1, "N2D2.ScalingCell"]], "scalingcell.freeparameterstype (class in n2d2)": [[1, "N2D2.ScalingCell.FreeParametersType"]], "scalingcell_frame_cuda_double (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_CUDA_double"]], "scalingcell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.FreeParametersType"]], "scalingcell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.Signals"]], "scalingcell_frame_cuda_float (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_CUDA_float"]], "scalingcell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.FreeParametersType"]], "scalingcell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.Signals"]], "scalingcell_frame_double (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_double"]], "scalingcell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_double.FreeParametersType"]], "scalingcell_frame_double.signals (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_double.Signals"]], "scalingcell_frame_float (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_float"]], "scalingcell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_float.FreeParametersType"]], "scalingcell_frame_float.signals (class in n2d2)": [[1, "N2D2.ScalingCell_Frame_float.Signals"]], "sliceextractiontransformation (class in n2d2)": [[1, "N2D2.SliceExtractionTransformation"]], "sliceextractiontransformation.bordertype (class in n2d2)": [[1, "N2D2.SliceExtractionTransformation.BorderType"]], "softmaxcell (class in n2d2)": [[1, "N2D2.SoftmaxCell"]], "softmaxcell.freeparameterstype (class in n2d2)": [[1, "N2D2.SoftmaxCell.FreeParametersType"]], "softmaxcell_frame_cuda_double (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double"]], "softmaxcell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.FreeParametersType"]], "softmaxcell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.Signals"]], "softmaxcell_frame_cuda_float (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float"]], "softmaxcell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.FreeParametersType"]], "softmaxcell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.Signals"]], "softmaxcell_frame_double (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_double"]], "softmaxcell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_double.FreeParametersType"]], "softmaxcell_frame_double.signals (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_double.Signals"]], "softmaxcell_frame_float (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_float"]], "softmaxcell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_float.FreeParametersType"]], "softmaxcell_frame_float.signals (class in n2d2)": [[1, "N2D2.SoftmaxCell_Frame_float.Signals"]], "softplusactivation (class in n2d2)": [[1, "N2D2.SoftplusActivation"]], "solver (class in n2d2)": [[1, "N2D2.Solver"]], "stimuliprovider (class in n2d2)": [[1, "N2D2.StimuliProvider"]], "swishactivation (class in n2d2)": [[1, "N2D2.SwishActivation"]], "swishactivation_frame_cuda_double (class in n2d2)": [[1, "N2D2.SwishActivation_Frame_CUDA_double"]], "swishactivation_frame_cuda_float (class in n2d2)": [[1, "N2D2.SwishActivation_Frame_CUDA_float"]], "swishactivation_frame_double (class in n2d2)": [[1, "N2D2.SwishActivation_Frame_double"]], "swishactivation_frame_float (class in n2d2)": [[1, "N2D2.SwishActivation_Frame_float"]], "tanhactivation (class in n2d2)": [[1, "N2D2.TanhActivation"]], "tanhactivation_frame_cuda_double (class in n2d2)": [[1, "N2D2.TanhActivation_Frame_CUDA_double"]], "tanhactivation_frame_cuda_float (class in n2d2)": [[1, "N2D2.TanhActivation_Frame_CUDA_float"]], "tanhactivation_frame_double (class in n2d2)": [[1, "N2D2.TanhActivation_Frame_double"]], "tanhactivation_frame_float (class in n2d2)": [[1, "N2D2.TanhActivation_Frame_float"]], "target (class in n2d2)": [[1, "N2D2.Target"]], "targetbiascell (class in n2d2)": [[1, "N2D2.TargetBiasCell"]], "targetbiascell.freeparameterstype (class in n2d2)": [[1, "N2D2.TargetBiasCell.FreeParametersType"]], "targetbiascell_frame_cuda_double (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double"]], "targetbiascell_frame_cuda_double.freeparameterstype (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.FreeParametersType"]], "targetbiascell_frame_cuda_double.signals (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.Signals"]], "targetbiascell_frame_cuda_float (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float"]], "targetbiascell_frame_cuda_float.freeparameterstype (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.FreeParametersType"]], "targetbiascell_frame_cuda_float.signals (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.Signals"]], "targetbiascell_frame_double (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_double"]], "targetbiascell_frame_double.freeparameterstype (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_double.FreeParametersType"]], "targetbiascell_frame_double.signals (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_double.Signals"]], "targetbiascell_frame_float (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_float"]], "targetbiascell_frame_float.freeparameterstype (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_float.FreeParametersType"]], "targetbiascell_frame_float.signals (class in n2d2)": [[1, "N2D2.TargetBiasCell_Frame_float.Signals"]], "tensor_bool (class in n2d2)": [[1, "N2D2.Tensor_bool"]], "tensor_double (class in n2d2)": [[1, "N2D2.Tensor_double"]], "tensor_float (class in n2d2)": [[1, "N2D2.Tensor_float"]], "thresholdcell (class in n2d2)": [[1, "N2D2.ThresholdCell"]], "thresholdcell.freeparameterstype (class in n2d2)": [[1, "N2D2.ThresholdCell.FreeParametersType"]], "thresholdcell_frame (class in n2d2)": [[1, "N2D2.ThresholdCell_Frame"]], "thresholdcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.ThresholdCell_Frame.FreeParametersType"]], "thresholdcell_frame.signals (class in n2d2)": [[1, "N2D2.ThresholdCell_Frame.Signals"]], "thresholdcell_frame_cuda (class in n2d2)": [[1, "N2D2.ThresholdCell_Frame_CUDA"]], "thresholdcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.ThresholdCell_Frame_CUDA.FreeParametersType"]], "thresholdcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.ThresholdCell_Frame_CUDA.Signals"]], "thresholdtransformation (class in n2d2)": [[1, "N2D2.ThresholdTransformation"]], "transformation (class in n2d2)": [[1, "N2D2.Transformation"]], "transformationcell (class in n2d2)": [[1, "N2D2.TransformationCell"]], "transformationcell.freeparameterstype (class in n2d2)": [[1, "N2D2.TransformationCell.FreeParametersType"]], "transformationcell_frame (class in n2d2)": [[1, "N2D2.TransformationCell_Frame"]], "transformationcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.TransformationCell_Frame.FreeParametersType"]], "transformationcell_frame.signals (class in n2d2)": [[1, "N2D2.TransformationCell_Frame.Signals"]], "transformationcell_frame_cuda (class in n2d2)": [[1, "N2D2.TransformationCell_Frame_CUDA"]], "transformationcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.TransformationCell_Frame_CUDA.FreeParametersType"]], "transformationcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.TransformationCell_Frame_CUDA.Signals"]], "unpoolcell (class in n2d2)": [[1, "N2D2.UnpoolCell"]], "unpoolcell.freeparameterstype (class in n2d2)": [[1, "N2D2.UnpoolCell.FreeParametersType"]], "unpoolcell.pooling (class in n2d2)": [[1, "N2D2.UnpoolCell.Pooling"]], "unpoolcell_frame (class in n2d2)": [[1, "N2D2.UnpoolCell_Frame"]], "unpoolcell_frame.freeparameterstype (class in n2d2)": [[1, "N2D2.UnpoolCell_Frame.FreeParametersType"]], "unpoolcell_frame.pooling (class in n2d2)": [[1, "N2D2.UnpoolCell_Frame.Pooling"]], "unpoolcell_frame.signals (class in n2d2)": [[1, "N2D2.UnpoolCell_Frame.Signals"]], "unpoolcell_frame_cuda (class in n2d2)": [[1, "N2D2.UnpoolCell_Frame_CUDA"]], "unpoolcell_frame_cuda.freeparameterstype (class in n2d2)": [[1, "N2D2.UnpoolCell_Frame_CUDA.FreeParametersType"]], "unpoolcell_frame_cuda.pooling (class in n2d2)": [[1, "N2D2.UnpoolCell_Frame_CUDA.Pooling"]], "unpoolcell_frame_cuda.signals (class in n2d2)": [[1, "N2D2.UnpoolCell_Frame_CUDA.Signals"]], "wallisfiltertransformation (class in n2d2)": [[1, "N2D2.WallisFilterTransformation"]], "__init__() (n2d2.aer_database method)": [[1, "N2D2.AER_Database.__init__"]], "__init__() (n2d2.aer_database.stimuliset method)": [[1, "N2D2.AER_Database.StimuliSet.__init__"]], "__init__() (n2d2.aer_database.stimulisetmask method)": [[1, "N2D2.AER_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.actitracker_database method)": [[1, "N2D2.Actitracker_Database.__init__"]], "__init__() (n2d2.actitracker_database.stimuliset method)": [[1, "N2D2.Actitracker_Database.StimuliSet.__init__"]], "__init__() (n2d2.actitracker_database.stimulisetmask method)": [[1, "N2D2.Actitracker_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.activation method)": [[1, "N2D2.Activation.__init__"]], "__init__() (n2d2.affinetransformation method)": [[1, "N2D2.AffineTransformation.__init__"]], "__init__() (n2d2.affinetransformation.operator method)": [[1, "N2D2.AffineTransformation.Operator.__init__"]], "__init__() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.__init__"]], "__init__() (n2d2.anchorcell.freeparameterstype method)": [[1, "N2D2.AnchorCell.FreeParametersType.__init__"]], "__init__() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.__init__"]], "__init__() (n2d2.anchorcell_frame.freeparameterstype method)": [[1, "N2D2.AnchorCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.anchorcell_frame.signals method)": [[1, "N2D2.AnchorCell_Frame.Signals.__init__"]], "__init__() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.__init__"]], "__init__() (n2d2.anchorcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.AnchorCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.anchorcell_frame_cuda.signals method)": [[1, "N2D2.AnchorCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.apodizationtransformation method)": [[1, "N2D2.ApodizationTransformation.__init__"]], "__init__() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.__init__"]], "__init__() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.__init__"]], "__init__() (n2d2.batchnormcell.freeparameterstype method)": [[1, "N2D2.BatchNormCell.FreeParametersType.__init__"]], "__init__() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.batchnormcell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.batchnormcell_frame_cuda_double.signals method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.batchnormcell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.batchnormcell_frame_cuda_float.signals method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.__init__"]], "__init__() (n2d2.batchnormcell_frame_double.freeparameterstype method)": [[1, "N2D2.BatchNormCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.batchnormcell_frame_double.signals method)": [[1, "N2D2.BatchNormCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.__init__"]], "__init__() (n2d2.batchnormcell_frame_float.freeparameterstype method)": [[1, "N2D2.BatchNormCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.batchnormcell_frame_float.signals method)": [[1, "N2D2.BatchNormCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.cifar_database method)": [[1, "N2D2.CIFAR_Database.__init__"]], "__init__() (n2d2.cifar_database.stimuliset method)": [[1, "N2D2.CIFAR_Database.StimuliSet.__init__"]], "__init__() (n2d2.cifar_database.stimulisetmask method)": [[1, "N2D2.CIFAR_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.ckp_database method)": [[1, "N2D2.CKP_Database.__init__"]], "__init__() (n2d2.ckp_database.stimuliset method)": [[1, "N2D2.CKP_Database.StimuliSet.__init__"]], "__init__() (n2d2.ckp_database.stimulisetmask method)": [[1, "N2D2.CKP_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.caltech101_dir_database method)": [[1, "N2D2.Caltech101_DIR_Database.__init__"]], "__init__() (n2d2.caltech101_dir_database.stimuliset method)": [[1, "N2D2.Caltech101_DIR_Database.StimuliSet.__init__"]], "__init__() (n2d2.caltech101_dir_database.stimulisetmask method)": [[1, "N2D2.Caltech101_DIR_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.caltech256_dir_database method)": [[1, "N2D2.Caltech256_DIR_Database.__init__"]], "__init__() (n2d2.caltech256_dir_database.stimuliset method)": [[1, "N2D2.Caltech256_DIR_Database.StimuliSet.__init__"]], "__init__() (n2d2.caltech256_dir_database.stimulisetmask method)": [[1, "N2D2.Caltech256_DIR_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.caltechpedestrian_database method)": [[1, "N2D2.CaltechPedestrian_Database.__init__"]], "__init__() (n2d2.caltechpedestrian_database.stimuliset method)": [[1, "N2D2.CaltechPedestrian_Database.StimuliSet.__init__"]], "__init__() (n2d2.caltechpedestrian_database.stimulisetmask method)": [[1, "N2D2.CaltechPedestrian_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.celeba_database method)": [[1, "N2D2.CelebA_Database.__init__"]], "__init__() (n2d2.celeba_database.stimuliset method)": [[1, "N2D2.CelebA_Database.StimuliSet.__init__"]], "__init__() (n2d2.celeba_database.stimulisetmask method)": [[1, "N2D2.CelebA_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.cell method)": [[1, "N2D2.Cell.__init__"]], "__init__() (n2d2.cell.freeparameterstype method)": [[1, "N2D2.Cell.FreeParametersType.__init__"]], "__init__() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.cell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.Cell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.cell_frame_cuda_double.signals method)": [[1, "N2D2.Cell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.cell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.Cell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.cell_frame_cuda_float.signals method)": [[1, "N2D2.Cell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.__init__"]], "__init__() (n2d2.cell_frame_top.signals method)": [[1, "N2D2.Cell_Frame_Top.Signals.__init__"]], "__init__() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.__init__"]], "__init__() (n2d2.cell_frame_double.freeparameterstype method)": [[1, "N2D2.Cell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.cell_frame_double.signals method)": [[1, "N2D2.Cell_Frame_double.Signals.__init__"]], "__init__() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.__init__"]], "__init__() (n2d2.cell_frame_float.freeparameterstype method)": [[1, "N2D2.Cell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.cell_frame_float.signals method)": [[1, "N2D2.Cell_Frame_float.Signals.__init__"]], "__init__() (n2d2.channelextractiontransformation method)": [[1, "N2D2.ChannelExtractionTransformation.__init__"]], "__init__() (n2d2.channelextractiontransformation.channel method)": [[1, "N2D2.ChannelExtractionTransformation.Channel.__init__"]], "__init__() (n2d2.colorspacetransformation method)": [[1, "N2D2.ColorSpaceTransformation.__init__"]], "__init__() (n2d2.colorspacetransformation.colorspace method)": [[1, "N2D2.ColorSpaceTransformation.ColorSpace.__init__"]], "__init__() (n2d2.compositetransformation method)": [[1, "N2D2.CompositeTransformation.__init__"]], "__init__() (n2d2.compressionnoisetransformation method)": [[1, "N2D2.CompressionNoiseTransformation.__init__"]], "__init__() (n2d2.convcell method)": [[1, "N2D2.ConvCell.__init__"]], "__init__() (n2d2.convcell.freeparameterstype method)": [[1, "N2D2.ConvCell.FreeParametersType.__init__"]], "__init__() (n2d2.convcell.weightsexportformat method)": [[1, "N2D2.ConvCell.WeightsExportFormat.__init__"]], "__init__() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.convcell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.convcell_frame_cuda_double.signals method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.convcell_frame_cuda_double.weightsexportformat method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.WeightsExportFormat.__init__"]], "__init__() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.convcell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.convcell_frame_cuda_float.signals method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.convcell_frame_cuda_float.weightsexportformat method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.WeightsExportFormat.__init__"]], "__init__() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.__init__"]], "__init__() (n2d2.convcell_frame_double.freeparameterstype method)": [[1, "N2D2.ConvCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.convcell_frame_double.signals method)": [[1, "N2D2.ConvCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.convcell_frame_double.weightsexportformat method)": [[1, "N2D2.ConvCell_Frame_double.WeightsExportFormat.__init__"]], "__init__() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.__init__"]], "__init__() (n2d2.convcell_frame_float.freeparameterstype method)": [[1, "N2D2.ConvCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.convcell_frame_float.signals method)": [[1, "N2D2.ConvCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.convcell_frame_float.weightsexportformat method)": [[1, "N2D2.ConvCell_Frame_float.WeightsExportFormat.__init__"]], "__init__() (n2d2.cudabasedevicetensor method)": [[1, "N2D2.CudaBaseDeviceTensor.__init__"]], "__init__() (n2d2.cudabasetensor method)": [[1, "N2D2.CudaBaseTensor.__init__"]], "__init__() (n2d2.cudatensor_double method)": [[1, "N2D2.CudaTensor_double.__init__"]], "__init__() (n2d2.cudatensor_float method)": [[1, "N2D2.CudaTensor_float.__init__"]], "__init__() (n2d2.dcttransformation method)": [[1, "N2D2.DCTTransformation.__init__"]], "__init__() (n2d2.dfttransformation method)": [[1, "N2D2.DFTTransformation.__init__"]], "__init__() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.__init__"]], "__init__() (n2d2.dir_database.stimuliset method)": [[1, "N2D2.DIR_Database.StimuliSet.__init__"]], "__init__() (n2d2.dir_database.stimulisetmask method)": [[1, "N2D2.DIR_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.__init__"]], "__init__() (n2d2.dota_database.stimuliset method)": [[1, "N2D2.DOTA_Database.StimuliSet.__init__"]], "__init__() (n2d2.dota_database.stimulisetmask method)": [[1, "N2D2.DOTA_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.__init__"]], "__init__() (n2d2.daimler_database.stimuliset method)": [[1, "N2D2.Daimler_Database.StimuliSet.__init__"]], "__init__() (n2d2.daimler_database.stimulisetmask method)": [[1, "N2D2.Daimler_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.database method)": [[1, "N2D2.Database.__init__"]], "__init__() (n2d2.database.stimuliset method)": [[1, "N2D2.Database.StimuliSet.__init__"]], "__init__() (n2d2.database.stimulisetmask method)": [[1, "N2D2.Database.StimuliSetMask.__init__"]], "__init__() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.__init__"]], "__init__() (n2d2.deconvcell.freeparameterstype method)": [[1, "N2D2.DeconvCell.FreeParametersType.__init__"]], "__init__() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.deconvcell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.deconvcell_frame_cuda_double.signals method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.deconvcell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.deconvcell_frame_cuda_float.signals method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.__init__"]], "__init__() (n2d2.deconvcell_frame_double.freeparameterstype method)": [[1, "N2D2.DeconvCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.deconvcell_frame_double.signals method)": [[1, "N2D2.DeconvCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.__init__"]], "__init__() (n2d2.deconvcell_frame_float.freeparameterstype method)": [[1, "N2D2.DeconvCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.deconvcell_frame_float.signals method)": [[1, "N2D2.DeconvCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.__init__"]], "__init__() (n2d2.distortiontransformation method)": [[1, "N2D2.DistortionTransformation.__init__"]], "__init__() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.__init__"]], "__init__() (n2d2.dropoutcell.freeparameterstype method)": [[1, "N2D2.DropoutCell.FreeParametersType.__init__"]], "__init__() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.dropoutcell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.dropoutcell_frame_cuda_double.signals method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.dropoutcell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.dropoutcell_frame_cuda_float.signals method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.__init__"]], "__init__() (n2d2.dropoutcell_frame_double.freeparameterstype method)": [[1, "N2D2.DropoutCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.dropoutcell_frame_double.signals method)": [[1, "N2D2.DropoutCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.__init__"]], "__init__() (n2d2.dropoutcell_frame_float.freeparameterstype method)": [[1, "N2D2.DropoutCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.dropoutcell_frame_float.signals method)": [[1, "N2D2.DropoutCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.__init__"]], "__init__() (n2d2.elemwisecell.coeffmode method)": [[1, "N2D2.ElemWiseCell.CoeffMode.__init__"]], "__init__() (n2d2.elemwisecell.freeparameterstype method)": [[1, "N2D2.ElemWiseCell.FreeParametersType.__init__"]], "__init__() (n2d2.elemwisecell.operation method)": [[1, "N2D2.ElemWiseCell.Operation.__init__"]], "__init__() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.__init__"]], "__init__() (n2d2.elemwisecell_frame.coeffmode method)": [[1, "N2D2.ElemWiseCell_Frame.CoeffMode.__init__"]], "__init__() (n2d2.elemwisecell_frame.freeparameterstype method)": [[1, "N2D2.ElemWiseCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.elemwisecell_frame.operation method)": [[1, "N2D2.ElemWiseCell_Frame.Operation.__init__"]], "__init__() (n2d2.elemwisecell_frame.signals method)": [[1, "N2D2.ElemWiseCell_Frame.Signals.__init__"]], "__init__() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.__init__"]], "__init__() (n2d2.elemwisecell_frame_cuda.coeffmode method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.CoeffMode.__init__"]], "__init__() (n2d2.elemwisecell_frame_cuda.freeparameterstype method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.elemwisecell_frame_cuda.operation method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.Operation.__init__"]], "__init__() (n2d2.elemwisecell_frame_cuda.signals method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.equalizetransformation method)": [[1, "N2D2.EqualizeTransformation.__init__"]], "__init__() (n2d2.expandlabeltransformation method)": [[1, "N2D2.ExpandLabelTransformation.__init__"]], "__init__() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.__init__"]], "__init__() (n2d2.fddb_database.stimuliset method)": [[1, "N2D2.FDDB_Database.StimuliSet.__init__"]], "__init__() (n2d2.fddb_database.stimulisetmask method)": [[1, "N2D2.FDDB_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.__init__"]], "__init__() (n2d2.fmpcell.freeparameterstype method)": [[1, "N2D2.FMPCell.FreeParametersType.__init__"]], "__init__() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.__init__"]], "__init__() (n2d2.fmpcell_frame.freeparameterstype method)": [[1, "N2D2.FMPCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.fmpcell_frame.signals method)": [[1, "N2D2.FMPCell_Frame.Signals.__init__"]], "__init__() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.__init__"]], "__init__() (n2d2.fmpcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.FMPCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.fmpcell_frame_cuda.signals method)": [[1, "N2D2.FMPCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.fashion_mnist_idx_database method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.__init__"]], "__init__() (n2d2.fashion_mnist_idx_database.stimuliset method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.StimuliSet.__init__"]], "__init__() (n2d2.fashion_mnist_idx_database.stimulisetmask method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.fccell method)": [[1, "N2D2.FcCell.__init__"]], "__init__() (n2d2.fccell.freeparameterstype method)": [[1, "N2D2.FcCell.FreeParametersType.__init__"]], "__init__() (n2d2.fccell.weightsexportformat method)": [[1, "N2D2.FcCell.WeightsExportFormat.__init__"]], "__init__() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.fccell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.FcCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.fccell_frame_cuda_double.signals method)": [[1, "N2D2.FcCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.fccell_frame_cuda_double.weightsexportformat method)": [[1, "N2D2.FcCell_Frame_CUDA_double.WeightsExportFormat.__init__"]], "__init__() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.fccell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.FcCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.fccell_frame_cuda_float.signals method)": [[1, "N2D2.FcCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.fccell_frame_cuda_float.weightsexportformat method)": [[1, "N2D2.FcCell_Frame_CUDA_float.WeightsExportFormat.__init__"]], "__init__() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.__init__"]], "__init__() (n2d2.fccell_frame_double.freeparameterstype method)": [[1, "N2D2.FcCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.fccell_frame_double.signals method)": [[1, "N2D2.FcCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.fccell_frame_double.weightsexportformat method)": [[1, "N2D2.FcCell_Frame_double.WeightsExportFormat.__init__"]], "__init__() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.__init__"]], "__init__() (n2d2.fccell_frame_float.freeparameterstype method)": [[1, "N2D2.FcCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.fccell_frame_float.signals method)": [[1, "N2D2.FcCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.fccell_frame_float.weightsexportformat method)": [[1, "N2D2.FcCell_Frame_float.WeightsExportFormat.__init__"]], "__init__() (n2d2.filler method)": [[1, "N2D2.Filler.__init__"]], "__init__() (n2d2.filtertransformation method)": [[1, "N2D2.FilterTransformation.__init__"]], "__init__() (n2d2.fliptransformation method)": [[1, "N2D2.FlipTransformation.__init__"]], "__init__() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.__init__"]], "__init__() (n2d2.gtsdb_dir_database.stimuliset method)": [[1, "N2D2.GTSDB_DIR_Database.StimuliSet.__init__"]], "__init__() (n2d2.gtsdb_dir_database.stimulisetmask method)": [[1, "N2D2.GTSDB_DIR_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.__init__"]], "__init__() (n2d2.gtsrb_dir_database.stimuliset method)": [[1, "N2D2.GTSRB_DIR_Database.StimuliSet.__init__"]], "__init__() (n2d2.gtsrb_dir_database.stimulisetmask method)": [[1, "N2D2.GTSRB_DIR_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.gradientfiltertransformation method)": [[1, "N2D2.GradientFilterTransformation.__init__"]], "__init__() (n2d2.idx_database method)": [[1, "N2D2.IDX_Database.__init__"]], "__init__() (n2d2.idx_database.stimuliset method)": [[1, "N2D2.IDX_Database.StimuliSet.__init__"]], "__init__() (n2d2.idx_database.stimulisetmask method)": [[1, "N2D2.IDX_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.__init__"]], "__init__() (n2d2.ilsvrc2012_database.stimuliset method)": [[1, "N2D2.ILSVRC2012_Database.StimuliSet.__init__"]], "__init__() (n2d2.ilsvrc2012_database.stimulisetmask method)": [[1, "N2D2.ILSVRC2012_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.__init__"]], "__init__() (n2d2.imdbwiki_database.stimuliset method)": [[1, "N2D2.IMDBWIKI_Database.StimuliSet.__init__"]], "__init__() (n2d2.imdbwiki_database.stimulisetmask method)": [[1, "N2D2.IMDBWIKI_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.__init__"]], "__init__() (n2d2.kitti_database.stimuliset method)": [[1, "N2D2.KITTI_Database.StimuliSet.__init__"]], "__init__() (n2d2.kitti_database.stimulisetmask method)": [[1, "N2D2.KITTI_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.__init__"]], "__init__() (n2d2.kitti_object_database.stimuliset method)": [[1, "N2D2.KITTI_Object_Database.StimuliSet.__init__"]], "__init__() (n2d2.kitti_object_database.stimulisetmask method)": [[1, "N2D2.KITTI_Object_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.__init__"]], "__init__() (n2d2.kitti_road_database.stimuliset method)": [[1, "N2D2.KITTI_Road_Database.StimuliSet.__init__"]], "__init__() (n2d2.kitti_road_database.stimulisetmask method)": [[1, "N2D2.KITTI_Road_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.__init__"]], "__init__() (n2d2.litisrouen_database.stimuliset method)": [[1, "N2D2.LITISRouen_Database.StimuliSet.__init__"]], "__init__() (n2d2.litisrouen_database.stimulisetmask method)": [[1, "N2D2.LITISRouen_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.__init__"]], "__init__() (n2d2.lrncell.freeparameterstype method)": [[1, "N2D2.LRNCell.FreeParametersType.__init__"]], "__init__() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.lrncell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.lrncell_frame_cuda_double.signals method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.lrncell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.lrncell_frame_cuda_float.signals method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.__init__"]], "__init__() (n2d2.lrncell_frame_double.freeparameterstype method)": [[1, "N2D2.LRNCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.lrncell_frame_double.signals method)": [[1, "N2D2.LRNCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.__init__"]], "__init__() (n2d2.lrncell_frame_float.freeparameterstype method)": [[1, "N2D2.LRNCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.lrncell_frame_float.signals method)": [[1, "N2D2.LRNCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.__init__"]], "__init__() (n2d2.lstmcell.freeparameterstype method)": [[1, "N2D2.LSTMCell.FreeParametersType.__init__"]], "__init__() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.lstmcell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.lstmcell_frame_cuda_double.signals method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.lstmcell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.lstmcell_frame_cuda_float.signals method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.labelextractiontransformation method)": [[1, "N2D2.LabelExtractionTransformation.__init__"]], "__init__() (n2d2.labelsliceextractiontransformation method)": [[1, "N2D2.LabelSliceExtractionTransformation.__init__"]], "__init__() (n2d2.linearactivation method)": [[1, "N2D2.LinearActivation.__init__"]], "__init__() (n2d2.linearactivation_frame_cuda_double method)": [[1, "N2D2.LinearActivation_Frame_CUDA_double.__init__"]], "__init__() (n2d2.linearactivation_frame_cuda_float method)": [[1, "N2D2.LinearActivation_Frame_CUDA_float.__init__"]], "__init__() (n2d2.linearactivation_frame_double method)": [[1, "N2D2.LinearActivation_Frame_double.__init__"]], "__init__() (n2d2.linearactivation_frame_float method)": [[1, "N2D2.LinearActivation_Frame_float.__init__"]], "__init__() (n2d2.logisticactivation method)": [[1, "N2D2.LogisticActivation.__init__"]], "__init__() (n2d2.mnist_idx_database method)": [[1, "N2D2.MNIST_IDX_Database.__init__"]], "__init__() (n2d2.mnist_idx_database.stimuliset method)": [[1, "N2D2.MNIST_IDX_Database.StimuliSet.__init__"]], "__init__() (n2d2.mnist_idx_database.stimulisetmask method)": [[1, "N2D2.MNIST_IDX_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.magnitudephasetransformation method)": [[1, "N2D2.MagnitudePhaseTransformation.__init__"]], "__init__() (n2d2.morphologicalreconstructiontransformation method)": [[1, "N2D2.MorphologicalReconstructionTransformation.__init__"]], "__init__() (n2d2.morphologicalreconstructiontransformation.operation method)": [[1, "N2D2.MorphologicalReconstructionTransformation.Operation.__init__"]], "__init__() (n2d2.morphologytransformation method)": [[1, "N2D2.MorphologyTransformation.__init__"]], "__init__() (n2d2.morphologytransformation.operation method)": [[1, "N2D2.MorphologyTransformation.Operation.__init__"]], "__init__() (n2d2.n_mnist_database method)": [[1, "N2D2.N_MNIST_Database.__init__"]], "__init__() (n2d2.n_mnist_database.stimuliset method)": [[1, "N2D2.N_MNIST_Database.StimuliSet.__init__"]], "__init__() (n2d2.n_mnist_database.stimulisetmask method)": [[1, "N2D2.N_MNIST_Database.StimuliSetMask.__init__"]], "__init__() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.__init__"]], "__init__() (n2d2.normalizecell.freeparameterstype method)": [[1, "N2D2.NormalizeCell.FreeParametersType.__init__"]], "__init__() (n2d2.normalizecell.norm method)": [[1, "N2D2.NormalizeCell.Norm.__init__"]], "__init__() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.normalizecell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.normalizecell_frame_cuda_double.norm method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.Norm.__init__"]], "__init__() (n2d2.normalizecell_frame_cuda_double.signals method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.normalizecell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.normalizecell_frame_cuda_float.norm method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.Norm.__init__"]], "__init__() (n2d2.normalizecell_frame_cuda_float.signals method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.__init__"]], "__init__() (n2d2.normalizecell_frame_double.freeparameterstype method)": [[1, "N2D2.NormalizeCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.normalizecell_frame_double.norm method)": [[1, "N2D2.NormalizeCell_Frame_double.Norm.__init__"]], "__init__() (n2d2.normalizecell_frame_double.signals method)": [[1, "N2D2.NormalizeCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.__init__"]], "__init__() (n2d2.normalizecell_frame_float.freeparameterstype method)": [[1, "N2D2.NormalizeCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.normalizecell_frame_float.norm method)": [[1, "N2D2.NormalizeCell_Frame_float.Norm.__init__"]], "__init__() (n2d2.normalizecell_frame_float.signals method)": [[1, "N2D2.NormalizeCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.normalizetransformation method)": [[1, "N2D2.NormalizeTransformation.__init__"]], "__init__() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.__init__"]], "__init__() (n2d2.objectdetcell.freeparameterstype method)": [[1, "N2D2.ObjectDetCell.FreeParametersType.__init__"]], "__init__() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.__init__"]], "__init__() (n2d2.objectdetcell_frame.freeparameterstype method)": [[1, "N2D2.ObjectDetCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.objectdetcell_frame.signals method)": [[1, "N2D2.ObjectDetCell_Frame.Signals.__init__"]], "__init__() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.__init__"]], "__init__() (n2d2.objectdetcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.objectdetcell_frame_cuda.signals method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.padcroptransformation method)": [[1, "N2D2.PadCropTransformation.__init__"]], "__init__() (n2d2.padcroptransformation.bordertype method)": [[1, "N2D2.PadCropTransformation.BorderType.__init__"]], "__init__() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.__init__"]], "__init__() (n2d2.paddingcell.freeparameterstype method)": [[1, "N2D2.PaddingCell.FreeParametersType.__init__"]], "__init__() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.__init__"]], "__init__() (n2d2.paddingcell_frame.freeparameterstype method)": [[1, "N2D2.PaddingCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.paddingcell_frame.signals method)": [[1, "N2D2.PaddingCell_Frame.Signals.__init__"]], "__init__() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.__init__"]], "__init__() (n2d2.paddingcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.PaddingCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.paddingcell_frame_cuda.signals method)": [[1, "N2D2.PaddingCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.__init__"]], "__init__() (n2d2.poolcell.freeparameterstype method)": [[1, "N2D2.PoolCell.FreeParametersType.__init__"]], "__init__() (n2d2.poolcell.pooling method)": [[1, "N2D2.PoolCell.Pooling.__init__"]], "__init__() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.poolcell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.poolcell_frame_cuda_double.pooling method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.Pooling.__init__"]], "__init__() (n2d2.poolcell_frame_cuda_double.signals method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.poolcell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.poolcell_frame_cuda_float.pooling method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.Pooling.__init__"]], "__init__() (n2d2.poolcell_frame_cuda_float.signals method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.__init__"]], "__init__() (n2d2.poolcell_frame_ext_cuda_double.freeparameterstype method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.poolcell_frame_ext_cuda_double.pooling method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.Pooling.__init__"]], "__init__() (n2d2.poolcell_frame_ext_cuda_double.signals method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.Signals.__init__"]], "__init__() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.__init__"]], "__init__() (n2d2.poolcell_frame_ext_cuda_float.freeparameterstype method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.poolcell_frame_ext_cuda_float.pooling method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.Pooling.__init__"]], "__init__() (n2d2.poolcell_frame_ext_cuda_float.signals method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.Signals.__init__"]], "__init__() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.__init__"]], "__init__() (n2d2.poolcell_frame_double.freeparameterstype method)": [[1, "N2D2.PoolCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.poolcell_frame_double.pooling method)": [[1, "N2D2.PoolCell_Frame_double.Pooling.__init__"]], "__init__() (n2d2.poolcell_frame_double.signals method)": [[1, "N2D2.PoolCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.__init__"]], "__init__() (n2d2.poolcell_frame_float.freeparameterstype method)": [[1, "N2D2.PoolCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.poolcell_frame_float.pooling method)": [[1, "N2D2.PoolCell_Frame_float.Pooling.__init__"]], "__init__() (n2d2.poolcell_frame_float.signals method)": [[1, "N2D2.PoolCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.__init__"]], "__init__() (n2d2.proposalcell.freeparameterstype method)": [[1, "N2D2.ProposalCell.FreeParametersType.__init__"]], "__init__() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.__init__"]], "__init__() (n2d2.proposalcell_frame.freeparameterstype method)": [[1, "N2D2.ProposalCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.proposalcell_frame.signals method)": [[1, "N2D2.ProposalCell_Frame.Signals.__init__"]], "__init__() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.__init__"]], "__init__() (n2d2.proposalcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.ProposalCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.proposalcell_frame_cuda.signals method)": [[1, "N2D2.ProposalCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.__init__"]], "__init__() (n2d2.roipoolingcell.freeparameterstype method)": [[1, "N2D2.ROIPoolingCell.FreeParametersType.__init__"]], "__init__() (n2d2.roipoolingcell.roipooling method)": [[1, "N2D2.ROIPoolingCell.ROIPooling.__init__"]], "__init__() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.__init__"]], "__init__() (n2d2.roipoolingcell_frame.freeparameterstype method)": [[1, "N2D2.ROIPoolingCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.roipoolingcell_frame.roipooling method)": [[1, "N2D2.ROIPoolingCell_Frame.ROIPooling.__init__"]], "__init__() (n2d2.roipoolingcell_frame.signals method)": [[1, "N2D2.ROIPoolingCell_Frame.Signals.__init__"]], "__init__() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.__init__"]], "__init__() (n2d2.roipoolingcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.roipoolingcell_frame_cuda.roipooling method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.ROIPooling.__init__"]], "__init__() (n2d2.roipoolingcell_frame_cuda.signals method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.rpcell method)": [[1, "N2D2.RPCell.__init__"]], "__init__() (n2d2.rpcell.freeparameterstype method)": [[1, "N2D2.RPCell.FreeParametersType.__init__"]], "__init__() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.__init__"]], "__init__() (n2d2.rpcell_frame.freeparameterstype method)": [[1, "N2D2.RPCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.rpcell_frame.signals method)": [[1, "N2D2.RPCell_Frame.Signals.__init__"]], "__init__() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.__init__"]], "__init__() (n2d2.rpcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.RPCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.rpcell_frame_cuda.signals method)": [[1, "N2D2.RPCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.randomaffinetransformation method)": [[1, "N2D2.RandomAffineTransformation.__init__"]], "__init__() (n2d2.rangeaffinetransformation method)": [[1, "N2D2.RangeAffineTransformation.__init__"]], "__init__() (n2d2.rangeaffinetransformation.operator method)": [[1, "N2D2.RangeAffineTransformation.Operator.__init__"]], "__init__() (n2d2.rangeclippingtransformation method)": [[1, "N2D2.RangeClippingTransformation.__init__"]], "__init__() (n2d2.rectifieractivation method)": [[1, "N2D2.RectifierActivation.__init__"]], "__init__() (n2d2.rectifieractivation_frame_cuda_double method)": [[1, "N2D2.RectifierActivation_Frame_CUDA_double.__init__"]], "__init__() (n2d2.rectifieractivation_frame_cuda_float method)": [[1, "N2D2.RectifierActivation_Frame_CUDA_float.__init__"]], "__init__() (n2d2.rectifieractivation_frame_double method)": [[1, "N2D2.RectifierActivation_Frame_double.__init__"]], "__init__() (n2d2.rectifieractivation_frame_float method)": [[1, "N2D2.RectifierActivation_Frame_float.__init__"]], "__init__() (n2d2.rescaletransformation method)": [[1, "N2D2.RescaleTransformation.__init__"]], "__init__() (n2d2.reshapetransformation method)": [[1, "N2D2.ReshapeTransformation.__init__"]], "__init__() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.__init__"]], "__init__() (n2d2.resizecell.freeparameterstype method)": [[1, "N2D2.ResizeCell.FreeParametersType.__init__"]], "__init__() (n2d2.resizecell.resizemode method)": [[1, "N2D2.ResizeCell.ResizeMode.__init__"]], "__init__() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.__init__"]], "__init__() (n2d2.resizecell_frame.freeparameterstype method)": [[1, "N2D2.ResizeCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.resizecell_frame.resizemode method)": [[1, "N2D2.ResizeCell_Frame.ResizeMode.__init__"]], "__init__() (n2d2.resizecell_frame.signals method)": [[1, "N2D2.ResizeCell_Frame.Signals.__init__"]], "__init__() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.__init__"]], "__init__() (n2d2.resizecell_frame_cuda.freeparameterstype method)": [[1, "N2D2.ResizeCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.resizecell_frame_cuda.resizemode method)": [[1, "N2D2.ResizeCell_Frame_CUDA.ResizeMode.__init__"]], "__init__() (n2d2.resizecell_frame_cuda.signals method)": [[1, "N2D2.ResizeCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.saturationactivation method)": [[1, "N2D2.SaturationActivation.__init__"]], "__init__() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.__init__"]], "__init__() (n2d2.scalingcell.freeparameterstype method)": [[1, "N2D2.ScalingCell.FreeParametersType.__init__"]], "__init__() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.scalingcell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.scalingcell_frame_cuda_double.signals method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.scalingcell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.scalingcell_frame_cuda_float.signals method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.__init__"]], "__init__() (n2d2.scalingcell_frame_double.freeparameterstype method)": [[1, "N2D2.ScalingCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.scalingcell_frame_double.signals method)": [[1, "N2D2.ScalingCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.__init__"]], "__init__() (n2d2.scalingcell_frame_float.freeparameterstype method)": [[1, "N2D2.ScalingCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.scalingcell_frame_float.signals method)": [[1, "N2D2.ScalingCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.__init__"]], "__init__() (n2d2.sliceextractiontransformation.bordertype method)": [[1, "N2D2.SliceExtractionTransformation.BorderType.__init__"]], "__init__() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.__init__"]], "__init__() (n2d2.softmaxcell.freeparameterstype method)": [[1, "N2D2.SoftmaxCell.FreeParametersType.__init__"]], "__init__() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.softmaxcell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.softmaxcell_frame_cuda_double.signals method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.softmaxcell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.softmaxcell_frame_cuda_float.signals method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.__init__"]], "__init__() (n2d2.softmaxcell_frame_double.freeparameterstype method)": [[1, "N2D2.SoftmaxCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.softmaxcell_frame_double.signals method)": [[1, "N2D2.SoftmaxCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.__init__"]], "__init__() (n2d2.softmaxcell_frame_float.freeparameterstype method)": [[1, "N2D2.SoftmaxCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.softmaxcell_frame_float.signals method)": [[1, "N2D2.SoftmaxCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.softplusactivation method)": [[1, "N2D2.SoftplusActivation.__init__"]], "__init__() (n2d2.solver method)": [[1, "N2D2.Solver.__init__"]], "__init__() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.__init__"]], "__init__() (n2d2.swishactivation method)": [[1, "N2D2.SwishActivation.__init__"]], "__init__() (n2d2.swishactivation_frame_cuda_double method)": [[1, "N2D2.SwishActivation_Frame_CUDA_double.__init__"]], "__init__() (n2d2.swishactivation_frame_cuda_float method)": [[1, "N2D2.SwishActivation_Frame_CUDA_float.__init__"]], "__init__() (n2d2.swishactivation_frame_double method)": [[1, "N2D2.SwishActivation_Frame_double.__init__"]], "__init__() (n2d2.swishactivation_frame_float method)": [[1, "N2D2.SwishActivation_Frame_float.__init__"]], "__init__() (n2d2.tanhactivation method)": [[1, "N2D2.TanhActivation.__init__"]], "__init__() (n2d2.tanhactivation_frame_cuda_double method)": [[1, "N2D2.TanhActivation_Frame_CUDA_double.__init__"]], "__init__() (n2d2.tanhactivation_frame_cuda_float method)": [[1, "N2D2.TanhActivation_Frame_CUDA_float.__init__"]], "__init__() (n2d2.tanhactivation_frame_double method)": [[1, "N2D2.TanhActivation_Frame_double.__init__"]], "__init__() (n2d2.tanhactivation_frame_float method)": [[1, "N2D2.TanhActivation_Frame_float.__init__"]], "__init__() (n2d2.target method)": [[1, "N2D2.Target.__init__"]], "__init__() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.__init__"]], "__init__() (n2d2.targetbiascell.freeparameterstype method)": [[1, "N2D2.TargetBiasCell.FreeParametersType.__init__"]], "__init__() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.__init__"]], "__init__() (n2d2.targetbiascell_frame_cuda_double.freeparameterstype method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.FreeParametersType.__init__"]], "__init__() (n2d2.targetbiascell_frame_cuda_double.signals method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.Signals.__init__"]], "__init__() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.__init__"]], "__init__() (n2d2.targetbiascell_frame_cuda_float.freeparameterstype method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.FreeParametersType.__init__"]], "__init__() (n2d2.targetbiascell_frame_cuda_float.signals method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.Signals.__init__"]], "__init__() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.__init__"]], "__init__() (n2d2.targetbiascell_frame_double.freeparameterstype method)": [[1, "N2D2.TargetBiasCell_Frame_double.FreeParametersType.__init__"]], "__init__() (n2d2.targetbiascell_frame_double.signals method)": [[1, "N2D2.TargetBiasCell_Frame_double.Signals.__init__"]], "__init__() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.__init__"]], "__init__() (n2d2.targetbiascell_frame_float.freeparameterstype method)": [[1, "N2D2.TargetBiasCell_Frame_float.FreeParametersType.__init__"]], "__init__() (n2d2.targetbiascell_frame_float.signals method)": [[1, "N2D2.TargetBiasCell_Frame_float.Signals.__init__"]], "__init__() (n2d2.tensor_bool method)": [[1, "N2D2.Tensor_bool.__init__"]], "__init__() (n2d2.tensor_double method)": [[1, "N2D2.Tensor_double.__init__"]], "__init__() (n2d2.tensor_float method)": [[1, "N2D2.Tensor_float.__init__"]], "__init__() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.__init__"]], "__init__() (n2d2.thresholdcell.freeparameterstype method)": [[1, "N2D2.ThresholdCell.FreeParametersType.__init__"]], "__init__() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.__init__"]], "__init__() (n2d2.thresholdcell_frame.freeparameterstype method)": [[1, "N2D2.ThresholdCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.thresholdcell_frame.signals method)": [[1, "N2D2.ThresholdCell_Frame.Signals.__init__"]], "__init__() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.__init__"]], "__init__() (n2d2.thresholdcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.thresholdcell_frame_cuda.signals method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.thresholdtransformation method)": [[1, "N2D2.ThresholdTransformation.__init__"]], "__init__() (n2d2.transformation method)": [[1, "N2D2.Transformation.__init__"]], "__init__() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.__init__"]], "__init__() (n2d2.transformationcell.freeparameterstype method)": [[1, "N2D2.TransformationCell.FreeParametersType.__init__"]], "__init__() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.__init__"]], "__init__() (n2d2.transformationcell_frame.freeparameterstype method)": [[1, "N2D2.TransformationCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.transformationcell_frame.signals method)": [[1, "N2D2.TransformationCell_Frame.Signals.__init__"]], "__init__() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.__init__"]], "__init__() (n2d2.transformationcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.TransformationCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.transformationcell_frame_cuda.signals method)": [[1, "N2D2.TransformationCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.__init__"]], "__init__() (n2d2.unpoolcell.freeparameterstype method)": [[1, "N2D2.UnpoolCell.FreeParametersType.__init__"]], "__init__() (n2d2.unpoolcell.pooling method)": [[1, "N2D2.UnpoolCell.Pooling.__init__"]], "__init__() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.__init__"]], "__init__() (n2d2.unpoolcell_frame.freeparameterstype method)": [[1, "N2D2.UnpoolCell_Frame.FreeParametersType.__init__"]], "__init__() (n2d2.unpoolcell_frame.pooling method)": [[1, "N2D2.UnpoolCell_Frame.Pooling.__init__"]], "__init__() (n2d2.unpoolcell_frame.signals method)": [[1, "N2D2.UnpoolCell_Frame.Signals.__init__"]], "__init__() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.__init__"]], "__init__() (n2d2.unpoolcell_frame_cuda.freeparameterstype method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.FreeParametersType.__init__"]], "__init__() (n2d2.unpoolcell_frame_cuda.pooling method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.Pooling.__init__"]], "__init__() (n2d2.unpoolcell_frame_cuda.signals method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.Signals.__init__"]], "__init__() (n2d2.wallisfiltertransformation method)": [[1, "N2D2.WallisFilterTransformation.__init__"]], "addcmonitor() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.addCMonitor"]], "addcell() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.addCell"]], "addinput() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.addInput"]], "addinput() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.addInput"]], "addinput() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.addInput"]], "addinput() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.addInput"]], "addinput() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.addInput"]], "addinput() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.addInput"]], "addinput() (n2d2.cell method)": [[1, "N2D2.Cell.addInput"]], "addinput() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.addInput"]], "addinput() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.addInput"]], "addinput() (n2d2.convcell method)": [[1, "N2D2.ConvCell.addInput"]], "addinput() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.addInput"]], "addinput() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.addInput"]], "addinput() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.addInput"]], "addinput() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.addInput"]], "addinput() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.addInput"]], "addinput() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.addInput"]], "addinput() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.addInput"]], "addinput() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.addInput"]], "addinput() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.addInput"]], "addinput() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.addInput"]], "addinput() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.addInput"]], "addinput() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.addInput"]], "addinput() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.addInput"]], "addinput() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.addInput"]], "addinput() (n2d2.fccell method)": [[1, "N2D2.FcCell.addInput"]], "addinput() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.addInput"]], "addinput() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.addInput"]], "addinput() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.addInput"]], "addinput() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.addInput"]], "addinput() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.addInput"]], "addinput() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.addInput"]], "addinput() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.addInput"]], "addinput() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.addInput"]], "addinput() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.addInput"]], "addinput() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.addInput"]], "addinput() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.addInput"]], "addinput() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.addInput"]], "addinput() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.addInput"]], "addinput() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.addInput"]], "addinput() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.addInput"]], "addinput() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.addInput"]], "addinput() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.addInput"]], "addinput() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.addInput"]], "addinput() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.addInput"]], "addinput() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.addInput"]], "addinput() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.addInput"]], "addinput() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.addInput"]], "addinput() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.addInput"]], "addinput() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.addInput"]], "addinput() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.addInput"]], "addinput() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.addInput"]], "addinput() (n2d2.rpcell method)": [[1, "N2D2.RPCell.addInput"]], "addinput() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.addInput"]], "addinput() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.addInput"]], "addinput() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.addInput"]], "addinput() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.addInput"]], "addinput() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.addInput"]], "addinput() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.addInput"]], "addinput() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.addInput"]], "addinput() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.addInput"]], "addinput() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.addInput"]], "addinput() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.addInput"]], "addinput() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.addInput"]], "addinput() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.addInput"]], "addinput() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.addInput"]], "addinput() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.addInput"]], "addinput() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.addInput"]], "addinput() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.addInput"]], "addinput() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.addInput"]], "addinput() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.addInput"]], "addinput() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.addInput"]], "addinput() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.addInput"]], "addinput() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.addInput"]], "addinput() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.addInput"]], "addinput() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.addInput"]], "addinput() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.addInput"]], "addinput() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.addInput"]], "addinputbis() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.addInputBis"]], "addinputbis() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.addInputBis"]], "addinputbis() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.addInputBis"]], "addinputbis() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.addInputBis"]], "addinputbis() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.addInputBis"]], "addinputbis() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.addInputBis"]], "addinputbis() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.addInputBis"]], "addinputbis() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.addInputBis"]], "addinputbis() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.addInputBis"]], "addinputbis() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.addInputBis"]], "addinputbis() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.addInputBis"]], "addinputbis() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.addInputBis"]], "addinputbis() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.addInputBis"]], "addinputbis() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.addInputBis"]], "addinputbis() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.addInputBis"]], "addinputbis() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.addInputBis"]], "addinputbis() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.addInputBis"]], "addinputbis() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.addInputBis"]], "addinputbis() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.addInputBis"]], "addinputbis() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.addInputBis"]], "addinputbis() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.addInputBis"]], "addinputbis() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.addInputBis"]], "addinputbis() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.addInputBis"]], "addmonitor() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.addMonitor"]], "addmultiscaleinput() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.cell method)": [[1, "N2D2.Cell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.convcell method)": [[1, "N2D2.ConvCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.fccell method)": [[1, "N2D2.FcCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.rpcell method)": [[1, "N2D2.RPCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.addMultiscaleInput"]], "addmultiscaleinput() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.addMultiscaleInput"]], "addontheflytransformation() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.addOnTheFlyTransformation"]], "addtarget() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.addTarget"]], "addtransformation() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.addTransformation"]], "allbatchsprovided() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.allBatchsProvided"]], "applyloss() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.applyLoss"]], "applyloss() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.applyLoss"]], "applyloss() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.applyLoss"]], "applyloss() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.applyLoss"]], "applyloss() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.applyLoss"]], "applyloss() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.applyLoss"]], "backpropagate() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.backPropagate"]], "backpropagate() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.backPropagate"]], "backpropagate() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.backPropagate"]], "backpropagate() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.backPropagate"]], "backpropagate() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.backPropagate"]], "backpropagate() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.backPropagate"]], "backpropagate() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.backPropagate"]], "backpropagate() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.backPropagate"]], "backpropagate() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.backPropagate"]], "backpropagate() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.backPropagate"]], "backpropagate() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.backPropagate"]], "backpropagate() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.backPropagate"]], "backpropagate() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.backPropagate"]], "backpropagate() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.backPropagate"]], "backpropagate() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.backPropagate"]], "backpropagate() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.backPropagate"]], "backpropagate() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.backPropagate"]], "backpropagate() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.backPropagate"]], "backpropagate() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.backPropagate"]], "backpropagate() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.backPropagate"]], "backpropagate() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.backPropagate"]], "backpropagate() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.backPropagate"]], "backpropagate() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.backPropagate"]], "backpropagate() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.backPropagate"]], "creset() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.cReset"]], "ctargetsprocess() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.cTargetsProcess"]], "cticks() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.cTicks"]], "checkgradient() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.checkGradient"]], "checkgradient() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.checkGradient"]], "checkgradient() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.checkGradient"]], "checkgradient() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.checkGradient"]], "checkgradient() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.checkGradient"]], "checkgradient() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.checkGradient"]], "checkgradient() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.checkGradient"]], "checkgradient() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.checkGradient"]], "checkgradient() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.checkGradient"]], "checkgradient() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.checkGradient"]], "checkgradient() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.checkGradient"]], "checkgradient() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.checkGradient"]], "checkgradient() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.checkGradient"]], "checkgradient() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.checkGradient"]], "checkgradient() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.checkGradient"]], "checkgradient() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.checkGradient"]], "checkgradient() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.checkGradient"]], "checkgradient() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.checkGradient"]], "checkgradient() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.checkGradient"]], "checkgradient() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.checkGradient"]], "checkgradient() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.checkGradient"]], "checkgradient() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.checkGradient"]], "checkgradient() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.checkGradient"]], "clear() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.clear"]], "clear() (n2d2.target method)": [[1, "N2D2.Target.clear"]], "clearinputtensors() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.clearInputTensors"]], "clearinputtensors() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.clearInputTensors"]], "clearinputtensors() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.clearInputTensors"]], "clearinputtensors() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.clearInputTensors"]], "clearinputtensors() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.clearInputTensors"]], "clearinputtensors() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.clearInputTensors"]], "clearinputtensors() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.clearInputTensors"]], "clearinputs() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.clearInputs"]], "clearinputs() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.clearInputs"]], "clearinputs() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.clearInputs"]], "clearinputs() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.cell method)": [[1, "N2D2.Cell.clearInputs"]], "clearinputs() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.clearInputs"]], "clearinputs() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.clearInputs"]], "clearinputs() (n2d2.convcell method)": [[1, "N2D2.ConvCell.clearInputs"]], "clearinputs() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.clearInputs"]], "clearinputs() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.clearInputs"]], "clearinputs() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.clearInputs"]], "clearinputs() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.clearInputs"]], "clearinputs() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.clearInputs"]], "clearinputs() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.clearInputs"]], "clearinputs() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.fccell method)": [[1, "N2D2.FcCell.clearInputs"]], "clearinputs() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.clearInputs"]], "clearinputs() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.clearInputs"]], "clearinputs() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.clearInputs"]], "clearinputs() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.clearInputs"]], "clearinputs() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.clearInputs"]], "clearinputs() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.clearInputs"]], "clearinputs() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.clearInputs"]], "clearinputs() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.clearInputs"]], "clearinputs() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.clearInputs"]], "clearinputs() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.clearInputs"]], "clearinputs() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.clearInputs"]], "clearinputs() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.clearInputs"]], "clearinputs() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.clearInputs"]], "clearinputs() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.clearInputs"]], "clearinputs() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.rpcell method)": [[1, "N2D2.RPCell.clearInputs"]], "clearinputs() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.clearInputs"]], "clearinputs() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.clearInputs"]], "clearinputs() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.clearInputs"]], "clearinputs() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.clearInputs"]], "clearinputs() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.clearInputs"]], "clearinputs() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.clearInputs"]], "clearinputs() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.clearInputs"]], "clearinputs() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.clearInputs"]], "clearinputs() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.clearInputs"]], "clearinputs() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.clearInputs"]], "clearinputs() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.clearInputs"]], "clearinputs() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.clearInputs"]], "clearinputs() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.clearInputs"]], "clearinputs() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.clearInputs"]], "clearinputs() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.clearInputs"]], "clearinputs() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.clearInputs"]], "clearinputs() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.clearInputs"]], "clearinputs() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.clearInputs"]], "clearoutputtensors() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.clearOutputTensors"]], "clearoutputtensors() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.clearOutputTensors"]], "clearoutputtensors() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.clearOutputTensors"]], "clearoutputtensors() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.clearOutputTensors"]], "clearoutputtensors() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.clearOutputTensors"]], "devicetensor() (n2d2.cudabasetensor method)": [[1, "N2D2.CudaBaseTensor.deviceTensor"]], "dimb() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.dimB"]], "dimd() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.dimD"]], "dimx() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.dimX"]], "dimy() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.dimY"]], "dimz() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.dimZ"]], "dims() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.dims"]], "empty() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.empty"]], "exportactivationparameters() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.cell method)": [[1, "N2D2.Cell.exportActivationParameters"]], "exportactivationparameters() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.convcell method)": [[1, "N2D2.ConvCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.fccell method)": [[1, "N2D2.FcCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.rpcell method)": [[1, "N2D2.RPCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.exportActivationParameters"]], "exportactivationparameters() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.exportActivationParameters"]], "exportactivationparameters() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.exportActivationParameters"]], "exportactivationparameters() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.exportActivationParameters"]], "exportactivationparameters() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.exportActivationParameters"]], "exportactivationparameters() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.exportActivationParameters"]], "exportfreeparameters() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.cell method)": [[1, "N2D2.Cell.exportFreeParameters"]], "exportfreeparameters() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.convcell method)": [[1, "N2D2.ConvCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.fccell method)": [[1, "N2D2.FcCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.rpcell method)": [[1, "N2D2.RPCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.exportFreeParameters"]], "exportfreeparameters() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.exportFreeParameters"]], "exportfreeparameters() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.exportFreeParameters"]], "exportfreeparameters() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.exportFreeParameters"]], "exportfreeparameters() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.exportFreeParameters"]], "exportfreeparameters() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.exportFreeParameters"]], "exportnetworkfreeparameters() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.exportNetworkFreeParameters"]], "exportnetworksolverparameters() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.exportNetworkSolverParameters"]], "exportquantfreeparameters() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.cell method)": [[1, "N2D2.Cell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.convcell method)": [[1, "N2D2.ConvCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.fccell method)": [[1, "N2D2.FcCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.rpcell method)": [[1, "N2D2.RPCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.exportQuantFreeParameters"]], "exportquantfreeparameters() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.exportQuantFreeParameters"]], "fill() (n2d2.tensor_bool method)": [[1, "N2D2.Tensor_bool.fill"]], "fill() (n2d2.tensor_double method)": [[1, "N2D2.Tensor_double.fill"]], "fill() (n2d2.tensor_float method)": [[1, "N2D2.Tensor_float.fill"]], "fusebatchnorm() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.fuseBatchNorm"]], "getactivation() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getActivation"]], "getactivation() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getActivation"]], "getactivation() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getActivation"]], "getactivation() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.getActivation"]], "getactivation() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getActivation"]], "getactivation() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getActivation"]], "getactivation() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getActivation"]], "getactivation() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getActivation"]], "getactivation() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getActivation"]], "getactivation() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getActivation"]], "getactivation() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getActivation"]], "getactivation() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getActivation"]], "getactivation() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getActivation"]], "getactivation() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getActivation"]], "getactivation() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getActivation"]], "getactivation() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getActivation"]], "getactivation() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getActivation"]], "getactivation() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getActivation"]], "getactivation() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getActivation"]], "getactivation() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getActivation"]], "getactivation() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getActivation"]], "getactivation() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getActivation"]], "getactivation() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getActivation"]], "getactivation() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getActivation"]], "getactivation() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getActivation"]], "getactivation() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getActivation"]], "getactivation() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getActivation"]], "getactivation() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getActivation"]], "getactivation() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getActivation"]], "getactivation() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getActivation"]], "getactivation() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getActivation"]], "getactivation() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getActivation"]], "getactivation() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getActivation"]], "getactivation() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getActivation"]], "getactivation() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getActivation"]], "getactivation() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getActivation"]], "getactivation() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getActivation"]], "getactivation() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getActivation"]], "getactivation() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getActivation"]], "getactivation() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getActivation"]], "getactivation() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getActivation"]], "getactivation() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getActivation"]], "getactivation() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getActivation"]], "getadditivewh() (n2d2.padcroptransformation method)": [[1, "N2D2.PadCropTransformation.getAdditiveWH"]], "getallowpadding() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getAllowPadding"]], "getalpha() (n2d2.tanhactivation method)": [[1, "N2D2.TanhActivation.getAlpha"]], "getassociateddeepnet() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.cell method)": [[1, "N2D2.Cell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.fccell method)": [[1, "N2D2.FcCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getAssociatedDeepNet"]], "getassociateddeepnet() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getAssociatedDeepNet"]], "getbackgroundclass() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.getBackgroundClass"]], "getbatchsize() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getBatchSize"]], "getbias() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getBias"]], "getbias() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getBias"]], "getbias() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getBias"]], "getbias() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getBias"]], "getbias() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getBias"]], "getbias() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getBias"]], "getbias() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getBias"]], "getbias() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getBias"]], "getbias() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getBias"]], "getbias() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getBias"]], "getbias() (n2d2.fccell method)": [[1, "N2D2.FcCell.getBias"]], "getbias() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getBias"]], "getbias() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getBias"]], "getbias() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getBias"]], "getbias() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getBias"]], "getbiasfiller() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getBiasFiller"]], "getbiasfiller() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getBiasFiller"]], "getbiasfiller() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getBiasFiller"]], "getbiasfiller() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getBiasFiller"]], "getbiasfiller() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getBiasFiller"]], "getbiasfiller() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getBiasFiller"]], "getbiasfiller() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getBiasFiller"]], "getbiasfiller() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getBiasFiller"]], "getbiasfiller() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getBiasFiller"]], "getbiasfiller() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getBiasFiller"]], "getbiasfiller() (n2d2.fccell method)": [[1, "N2D2.FcCell.getBiasFiller"]], "getbiasfiller() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getBiasFiller"]], "getbiasfiller() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getBiasFiller"]], "getbiasfiller() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getBiasFiller"]], "getbiasfiller() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getBiasFiller"]], "getbiassolver() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getBiasSolver"]], "getbiassolver() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getBiasSolver"]], "getbiassolver() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getBiasSolver"]], "getbiassolver() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getBiasSolver"]], "getbiassolver() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getBiasSolver"]], "getbiassolver() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getBiasSolver"]], "getbiassolver() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getBiasSolver"]], "getbiassolver() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getBiasSolver"]], "getbiassolver() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getBiasSolver"]], "getbiassolver() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getBiasSolver"]], "getbiassolver() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getBiasSolver"]], "getbiassolver() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getBiasSolver"]], "getbiassolver() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getBiasSolver"]], "getbiassolver() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getBiasSolver"]], "getbiassolver() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getBiasSolver"]], "getbiassolver() (n2d2.fccell method)": [[1, "N2D2.FcCell.getBiasSolver"]], "getbiassolver() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getBiasSolver"]], "getbiassolver() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getBiasSolver"]], "getbiassolver() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getBiasSolver"]], "getbiassolver() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getBiasSolver"]], "getbiases() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getBiases"]], "getbiases() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getBiases"]], "getbiases() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getBiases"]], "getbiases() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getBiases"]], "getbiases() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getBiases"]], "getbiases() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getBiases"]], "getbiases() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getBiases"]], "getbiases() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getBiases"]], "getbiases() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getBiases"]], "getbiases() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getBiases"]], "getbiases() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getBiases"]], "getbiases() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getBiases"]], "getbiases() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getBiases"]], "getbiases() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getBiases"]], "getbiases() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getBiases"]], "getbordertype() (n2d2.padcroptransformation method)": [[1, "N2D2.PadCropTransformation.getBorderType"]], "getbordertype() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getBorderType"]], "getbordervalue() (n2d2.padcroptransformation method)": [[1, "N2D2.PadCropTransformation.getBorderValue"]], "getbordervalue() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getBorderValue"]], "getbotpad() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getBotPad"]], "getbotpad() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getBotPad"]], "getbotpad() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getBotPad"]], "getcmonitor() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getCMonitor"]], "getcell() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getCell"]], "getcell() (n2d2.target method)": [[1, "N2D2.Target.getCell"]], "getcell_frame_top() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getCell_Frame_Top"]], "getcells() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getCells"]], "getchannel() (n2d2.channelextractiontransformation method)": [[1, "N2D2.ChannelExtractionTransformation.getChannel"]], "getchildcells() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getChildCells"]], "getchildrencells() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getChildrenCells"]], "getchildrencells() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getChildrenCells"]], "getchildrencells() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.cell method)": [[1, "N2D2.Cell.getChildrenCells"]], "getchildrencells() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getChildrenCells"]], "getchildrencells() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getChildrenCells"]], "getchildrencells() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getChildrenCells"]], "getchildrencells() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getChildrenCells"]], "getchildrencells() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getChildrenCells"]], "getchildrencells() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.fccell method)": [[1, "N2D2.FcCell.getChildrenCells"]], "getchildrencells() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getChildrenCells"]], "getchildrencells() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getChildrenCells"]], "getchildrencells() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getChildrenCells"]], "getchildrencells() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getChildrenCells"]], "getchildrencells() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getChildrenCells"]], "getchildrencells() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getChildrenCells"]], "getchildrencells() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getChildrenCells"]], "getchildrencells() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getChildrenCells"]], "getchildrencells() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getChildrenCells"]], "getchildrencells() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getChildrenCells"]], "getchildrencells() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getChildrenCells"]], "getchildrencells() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getChildrenCells"]], "getchildrencells() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getChildrenCells"]], "getchildrencells() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getChildrenCells"]], "getchildrencells() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getChildrenCells"]], "getchildrencells() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getChildrenCells"]], "getchildrencells() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getChildrenCells"]], "getchildrencells() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getChildrenCells"]], "getchildrencells() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getChildrenCells"]], "getchildrencells() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getChildrenCells"]], "getchildrencells() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getChildrenCells"]], "getchildrencells() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getChildrenCells"]], "getchildrencells() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getChildrenCells"]], "getclipping() (n2d2.linearactivation method)": [[1, "N2D2.LinearActivation.getClipping"]], "getclipping() (n2d2.rectifieractivation method)": [[1, "N2D2.RectifierActivation.getClipping"]], "getcoeffmode() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getCoeffMode"]], "getcoeffmode() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getCoeffMode"]], "getcoeffmode() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getCoeffMode"]], "getcolorspace() (n2d2.colorspacetransformation method)": [[1, "N2D2.ColorSpaceTransformation.getColorSpace"]], "getcudatensor() (n2d2.cudabasedevicetensor method)": [[1, "N2D2.CudaBaseDeviceTensor.getCudaTensor"]], "getdata() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getData"]], "getdatachannel() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getDataChannel"]], "getdatabase() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getDatabase"]], "getdatabase() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getDatabase"]], "getdefaulttarget() (n2d2.target method)": [[1, "N2D2.Target.getDefaultTarget"]], "getdefaultvalue() (n2d2.target method)": [[1, "N2D2.Target.getDefaultValue"]], "getdiffinputs() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.getDiffInputs"]], "getdiffinputs() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getDiffInputs"]], "getdiffinputs() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getDiffInputs"]], "getdiffinputs() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getDiffInputs"]], "getdiffinputs() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getDiffInputs"]], "getdiffinputs() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getDiffInputs"]], "getdiffinputs() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getDiffInputs"]], "getdiffinputs() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getDiffInputs"]], "getdiffoutputs() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.getDiffOutputs"]], "getdiffoutputs() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getDiffOutputs"]], "getdiffoutputs() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getDiffOutputs"]], "getdiffoutputs() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getDiffOutputs"]], "getdiffoutputs() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getDiffOutputs"]], "getdiffoutputs() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getDiffOutputs"]], "getdiffsynapses() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getDiffSynapses"]], "getdiffsynapses() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getDiffSynapses"]], "getdilationx() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getDilationX"]], "getdilationx() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getDilationX"]], "getdilationx() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getDilationX"]], "getdilationx() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getDilationX"]], "getdilationx() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getDilationX"]], "getdilationx() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getDilationX"]], "getdilationx() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getDilationX"]], "getdilationx() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getDilationX"]], "getdilationx() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getDilationX"]], "getdilationx() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getDilationX"]], "getdilationy() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getDilationY"]], "getdilationy() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getDilationY"]], "getdilationy() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getDilationY"]], "getdilationy() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getDilationY"]], "getdilationy() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getDilationY"]], "getdilationy() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getDilationY"]], "getdilationy() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getDilationY"]], "getdilationy() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getDilationY"]], "getdilationy() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getDilationY"]], "getdilationy() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getDilationY"]], "getdropout() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getDropout"]], "getdropout() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getDropout"]], "getdropout() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getDropout"]], "getdropout() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getDropout"]], "getdropout() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getDropout"]], "getelasticgaussiansize() (n2d2.distortiontransformation method)": [[1, "N2D2.DistortionTransformation.getElasticGaussianSize"]], "getelasticscaling() (n2d2.distortiontransformation method)": [[1, "N2D2.DistortionTransformation.getElasticScaling"]], "getelasticsigma() (n2d2.distortiontransformation method)": [[1, "N2D2.DistortionTransformation.getElasticSigma"]], "getepsilon() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getEpsilon"]], "getepsilon() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getEpsilon"]], "getepsilon() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getEpsilon"]], "getepsilon() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getEpsilon"]], "getepsilon() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getEpsilon"]], "getestimatedlabel() (n2d2.target method)": [[1, "N2D2.Target.getEstimatedLabel"]], "getestimatedlabels() (n2d2.target method)": [[1, "N2D2.Target.getEstimatedLabels"]], "getestimatedlabelsvalue() (n2d2.target method)": [[1, "N2D2.Target.getEstimatedLabelsValue"]], "getfirstoperator() (n2d2.rangeaffinetransformation method)": [[1, "N2D2.RangeAffineTransformation.getFirstOperator"]], "getfirstvalue() (n2d2.rangeaffinetransformation method)": [[1, "N2D2.RangeAffineTransformation.getFirstValue"]], "getgroupsize() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getGroupSize"]], "getgroupsize() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getGroupSize"]], "getgroupsize() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getGroupSize"]], "getgroupsize() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getGroupSize"]], "getgroupsize() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getGroupSize"]], "getheight() (n2d2.padcroptransformation method)": [[1, "N2D2.PadCropTransformation.getHeight"]], "getheight() (n2d2.rescaletransformation method)": [[1, "N2D2.RescaleTransformation.getHeight"]], "getheight() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getHeight"]], "gethorizontalflip() (n2d2.fliptransformation method)": [[1, "N2D2.FlipTransformation.getHorizontalFlip"]], "getignoremissingdata() (n2d2.distortiontransformation method)": [[1, "N2D2.DistortionTransformation.getIgnoreMissingData"]], "getinputs() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getInputs"]], "getinputs() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getInputs"]], "getinputs() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getInputs"]], "getinputs() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.getInputs"]], "getinputs() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getInputs"]], "getinputs() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getInputs"]], "getinputs() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getInputs"]], "getinputs() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getInputs"]], "getinputs() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getInputs"]], "getinputs() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getInputs"]], "getinputs() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getInputs"]], "getinputs() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getInputs"]], "getinputs() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getInputs"]], "getinputs() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getInputs"]], "getinputs() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getInputs"]], "getinputs() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getInputs"]], "getinputs() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getInputs"]], "getinputs() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getInputs"]], "getinputs() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getInputs"]], "getinputs() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getInputs"]], "getinputs() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getInputs"]], "getinputs() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getInputs"]], "getinputs() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getInputs"]], "getinputs() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getInputs"]], "getinputs() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getInputs"]], "getinputs() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getInputs"]], "getinputs() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getInputs"]], "getinputs() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getInputs"]], "getinputs() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getInputs"]], "getinputs() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getInputs"]], "getinputs() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getInputs"]], "getinputs() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getInputs"]], "getinputs() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getInputs"]], "getinputs() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getInputs"]], "getinputs() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getInputs"]], "getinputs() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getInputs"]], "getinputs() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getInputs"]], "getinputs() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getInputs"]], "getinputs() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getInputs"]], "getinputs() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getInputs"]], "getinputs() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getInputs"]], "getinputs() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getInputs"]], "getinputs() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getInputs"]], "getinputsdims() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getInputsDims"]], "getinputsdims() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getInputsDims"]], "getinputsdims() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.cell method)": [[1, "N2D2.Cell.getInputsDims"]], "getinputsdims() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getInputsDims"]], "getinputsdims() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getInputsDims"]], "getinputsdims() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getInputsDims"]], "getinputsdims() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getInputsDims"]], "getinputsdims() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getInputsDims"]], "getinputsdims() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.fccell method)": [[1, "N2D2.FcCell.getInputsDims"]], "getinputsdims() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getInputsDims"]], "getinputsdims() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getInputsDims"]], "getinputsdims() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getInputsDims"]], "getinputsdims() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getInputsDims"]], "getinputsdims() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getInputsDims"]], "getinputsdims() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getInputsDims"]], "getinputsdims() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getInputsDims"]], "getinputsdims() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getInputsDims"]], "getinputsdims() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getInputsDims"]], "getinputsdims() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getInputsDims"]], "getinputsdims() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getInputsDims"]], "getinputsdims() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getInputsDims"]], "getinputsdims() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getInputsDims"]], "getinputsdims() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getInputsDims"]], "getinputsdims() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getInputsDims"]], "getinputsdims() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getInputsDims"]], "getinputsdims() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getInputsDims"]], "getinputsdims() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getInputsDims"]], "getinputsdims() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getInputsDims"]], "getinputsdims() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getInputsDims"]], "getinputsdims() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getInputsDims"]], "getinputsdims() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getInputsDims"]], "getinputsdims() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getInputsDims"]], "getinputssize() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getInputsSize"]], "getinputssize() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getInputsSize"]], "getinputssize() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getInputsSize"]], "getinputssize() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.cell method)": [[1, "N2D2.Cell.getInputsSize"]], "getinputssize() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getInputsSize"]], "getinputssize() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getInputsSize"]], "getinputssize() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getInputsSize"]], "getinputssize() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getInputsSize"]], "getinputssize() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getInputsSize"]], "getinputssize() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getInputsSize"]], "getinputssize() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getInputsSize"]], "getinputssize() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.fccell method)": [[1, "N2D2.FcCell.getInputsSize"]], "getinputssize() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getInputsSize"]], "getinputssize() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getInputsSize"]], "getinputssize() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getInputsSize"]], "getinputssize() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getInputsSize"]], "getinputssize() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getInputsSize"]], "getinputssize() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getInputsSize"]], "getinputssize() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getInputsSize"]], "getinputssize() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getInputsSize"]], "getinputssize() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getInputsSize"]], "getinputssize() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getInputsSize"]], "getinputssize() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getInputsSize"]], "getinputssize() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getInputsSize"]], "getinputssize() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getInputsSize"]], "getinputssize() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getInputsSize"]], "getinputssize() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getInputsSize"]], "getinputssize() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getInputsSize"]], "getinputssize() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getInputsSize"]], "getinputssize() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getInputsSize"]], "getinputssize() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getInputsSize"]], "getinputssize() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getInputsSize"]], "getinputssize() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getInputsSize"]], "getinputssize() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getInputsSize"]], "getinputssize() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getInputsSize"]], "getinputssize() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getInputsSize"]], "getinputssize() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getInputsSize"]], "getinputssize() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getInputsSize"]], "getinputssize() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getInputsSize"]], "getinputssize() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getInputsSize"]], "getinputssize() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getInputsSize"]], "getinputssize() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getInputsSize"]], "getinputssize() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getInputsSize"]], "getkeepaspectratio() (n2d2.rescaletransformation method)": [[1, "N2D2.RescaleTransformation.getKeepAspectRatio"]], "getkernelheight() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getKernelHeight"]], "getkernelheight() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getKernelHeight"]], "getkernelheight() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getKernelHeight"]], "getkernelheight() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getKernelHeight"]], "getkernelheight() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getKernelHeight"]], "getkernelheight() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getKernelHeight"]], "getkernelheight() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getKernelHeight"]], "getkernelheight() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getKernelHeight"]], "getkernelheight() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getKernelHeight"]], "getkernelheight() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getKernelHeight"]], "getkernelwidth() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getKernelWidth"]], "getkernelwidth() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getKernelWidth"]], "getkernelwidth() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getKernelWidth"]], "getkernelwidth() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getKernelWidth"]], "getkernelwidth() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getKernelWidth"]], "getkernelwidth() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getKernelWidth"]], "getkernelwidth() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getKernelWidth"]], "getkernelwidth() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getKernelWidth"]], "getkernelwidth() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getKernelWidth"]], "getkernelwidth() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getKernelWidth"]], "getlabelname() (n2d2.aer_database method)": [[1, "N2D2.AER_Database.getLabelName"]], "getlabelname() (n2d2.actitracker_database method)": [[1, "N2D2.Actitracker_Database.getLabelName"]], "getlabelname() (n2d2.cifar_database method)": [[1, "N2D2.CIFAR_Database.getLabelName"]], "getlabelname() (n2d2.ckp_database method)": [[1, "N2D2.CKP_Database.getLabelName"]], "getlabelname() (n2d2.caltech101_dir_database method)": [[1, "N2D2.Caltech101_DIR_Database.getLabelName"]], "getlabelname() (n2d2.caltech256_dir_database method)": [[1, "N2D2.Caltech256_DIR_Database.getLabelName"]], "getlabelname() (n2d2.caltechpedestrian_database method)": [[1, "N2D2.CaltechPedestrian_Database.getLabelName"]], "getlabelname() (n2d2.celeba_database method)": [[1, "N2D2.CelebA_Database.getLabelName"]], "getlabelname() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.getLabelName"]], "getlabelname() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.getLabelName"]], "getlabelname() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.getLabelName"]], "getlabelname() (n2d2.database method)": [[1, "N2D2.Database.getLabelName"]], "getlabelname() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.getLabelName"]], "getlabelname() (n2d2.fashion_mnist_idx_database method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.getLabelName"]], "getlabelname() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.getLabelName"]], "getlabelname() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.getLabelName"]], "getlabelname() (n2d2.idx_database method)": [[1, "N2D2.IDX_Database.getLabelName"]], "getlabelname() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.getLabelName"]], "getlabelname() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.getLabelName"]], "getlabelname() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.getLabelName"]], "getlabelname() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.getLabelName"]], "getlabelname() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.getLabelName"]], "getlabelname() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.getLabelName"]], "getlabelname() (n2d2.mnist_idx_database method)": [[1, "N2D2.MNIST_IDX_Database.getLabelName"]], "getlabelname() (n2d2.n_mnist_database method)": [[1, "N2D2.N_MNIST_Database.getLabelName"]], "getlabeltarget() (n2d2.target method)": [[1, "N2D2.Target.getLabelTarget"]], "getlabelsdata() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getLabelsData"]], "getlabelsdatachannel() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getLabelsDataChannel"]], "getlabelsrois() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getLabelsROIs"]], "getlayers() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getLayers"]], "getleakslope() (n2d2.rectifieractivation method)": [[1, "N2D2.RectifierActivation.getLeakSlope"]], "getlearn() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.getLearn"]], "getleftpad() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getLeftPad"]], "getleftpad() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getLeftPad"]], "getleftpad() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getLeftPad"]], "getloss() (n2d2.target method)": [[1, "N2D2.Target.getLoss"]], "getmapping() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getMapping"]], "getmapping() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getMapping"]], "getmapping() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getMapping"]], "getmapping() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getMapping"]], "getmapping() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getMapping"]], "getmapping() (n2d2.cell method)": [[1, "N2D2.Cell.getMapping"]], "getmapping() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getMapping"]], "getmapping() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getMapping"]], "getmapping() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getMapping"]], "getmapping() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getMapping"]], "getmapping() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getMapping"]], "getmapping() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getMapping"]], "getmapping() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getMapping"]], "getmapping() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getMapping"]], "getmapping() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getMapping"]], "getmapping() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getMapping"]], "getmapping() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getMapping"]], "getmapping() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getMapping"]], "getmapping() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getMapping"]], "getmapping() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getMapping"]], "getmapping() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getMapping"]], "getmapping() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.fccell method)": [[1, "N2D2.FcCell.getMapping"]], "getmapping() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getMapping"]], "getmapping() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getMapping"]], "getmapping() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getMapping"]], "getmapping() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getMapping"]], "getmapping() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getMapping"]], "getmapping() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getMapping"]], "getmapping() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getMapping"]], "getmapping() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getMapping"]], "getmapping() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getMapping"]], "getmapping() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getMapping"]], "getmapping() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getMapping"]], "getmapping() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getMapping"]], "getmapping() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getMapping"]], "getmapping() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getMapping"]], "getmapping() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getMapping"]], "getmapping() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getMapping"]], "getmapping() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getMapping"]], "getmapping() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getMapping"]], "getmapping() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getMapping"]], "getmapping() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getMapping"]], "getmapping() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getMapping"]], "getmapping() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getMapping"]], "getmapping() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getMapping"]], "getmapping() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getMapping"]], "getmapping() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getMapping"]], "getmapping() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getMapping"]], "getmapping() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getMapping"]], "getmapping() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getMapping"]], "getmapping() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getMapping"]], "getmapping() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getMapping"]], "getmapping() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getMapping"]], "getmapping() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getMapping"]], "getmapping() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getMapping"]], "getmapping() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getMapping"]], "getmapping() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getMapping"]], "getmapping() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getMapping"]], "getmapping() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getMapping"]], "getmapping() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getMapping"]], "getmapping() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getMapping"]], "getmapping() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getMapping"]], "getmapping() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getMapping"]], "getmapping() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getMapping"]], "getmapping() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getMapping"]], "getmapping() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getMapping"]], "getmapping() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getMapping"]], "getmasterdevice() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getMasterDevice"]], "getmaxoutput() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.getMaxOutput"]], "getmaxoutput() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getMaxOutput"]], "getmaxoutput() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getMaxOutput"]], "getmaxoutput() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getMaxOutput"]], "getmaxoutput() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getMaxOutput"]], "getmaxoutput() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getMaxOutput"]], "getmaxoutput() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getMaxOutput"]], "getmaxoutput() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getMaxOutput"]], "getmeans() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getMeans"]], "getmeans() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getMeans"]], "getmeans() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getMeans"]], "getmeans() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getMeans"]], "getmeans() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getMeans"]], "getmode() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getMode"]], "getmode() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getMode"]], "getmode() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getMode"]], "getmonitor() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getMonitor"]], "getmovingaveragemomentum() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getMovingAverageMomentum"]], "getmovingaveragemomentum() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getMovingAverageMomentum"]], "getmovingaveragemomentum() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getMovingAverageMomentum"]], "getmovingaveragemomentum() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getMovingAverageMomentum"]], "getmovingaveragemomentum() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getMovingAverageMomentum"]], "getname() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getName"]], "getname() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getName"]], "getname() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getName"]], "getname() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getName"]], "getname() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getName"]], "getname() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getName"]], "getname() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getName"]], "getname() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getName"]], "getname() (n2d2.cell method)": [[1, "N2D2.Cell.getName"]], "getname() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getName"]], "getname() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getName"]], "getname() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getName"]], "getname() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getName"]], "getname() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getName"]], "getname() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getName"]], "getname() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getName"]], "getname() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getName"]], "getname() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getName"]], "getname() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getName"]], "getname() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getName"]], "getname() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getName"]], "getname() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getName"]], "getname() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getName"]], "getname() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getName"]], "getname() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getName"]], "getname() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getName"]], "getname() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getName"]], "getname() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getName"]], "getname() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getName"]], "getname() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getName"]], "getname() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getName"]], "getname() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getName"]], "getname() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getName"]], "getname() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getName"]], "getname() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getName"]], "getname() (n2d2.fccell method)": [[1, "N2D2.FcCell.getName"]], "getname() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getName"]], "getname() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getName"]], "getname() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getName"]], "getname() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getName"]], "getname() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getName"]], "getname() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getName"]], "getname() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getName"]], "getname() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getName"]], "getname() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getName"]], "getname() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getName"]], "getname() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getName"]], "getname() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getName"]], "getname() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getName"]], "getname() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getName"]], "getname() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getName"]], "getname() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getName"]], "getname() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getName"]], "getname() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getName"]], "getname() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getName"]], "getname() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getName"]], "getname() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getName"]], "getname() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getName"]], "getname() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getName"]], "getname() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getName"]], "getname() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getName"]], "getname() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getName"]], "getname() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getName"]], "getname() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getName"]], "getname() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getName"]], "getname() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getName"]], "getname() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getName"]], "getname() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getName"]], "getname() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getName"]], "getname() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getName"]], "getname() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getName"]], "getname() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getName"]], "getname() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getName"]], "getname() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getName"]], "getname() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getName"]], "getname() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getName"]], "getname() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getName"]], "getname() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getName"]], "getname() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getName"]], "getname() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getName"]], "getname() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getName"]], "getname() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getName"]], "getname() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getName"]], "getname() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getName"]], "getname() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getName"]], "getname() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getName"]], "getname() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getName"]], "getname() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getName"]], "getname() (n2d2.target method)": [[1, "N2D2.Target.getName"]], "getname() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getName"]], "getname() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getName"]], "getname() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getName"]], "getname() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getName"]], "getname() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getName"]], "getname() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getName"]], "getname() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getName"]], "getname() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getName"]], "getname() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getName"]], "getname() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getName"]], "getname() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getName"]], "getname() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getName"]], "getname() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getName"]], "getname() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getName"]], "getnbchannels() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getNbChannels"]], "getnbchannels() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getNbChannels"]], "getnbchannels() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.cell method)": [[1, "N2D2.Cell.getNbChannels"]], "getnbchannels() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getNbChannels"]], "getnbchannels() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getNbChannels"]], "getnbchannels() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getNbChannels"]], "getnbchannels() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getNbChannels"]], "getnbchannels() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getNbChannels"]], "getnbchannels() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.fccell method)": [[1, "N2D2.FcCell.getNbChannels"]], "getnbchannels() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getNbChannels"]], "getnbchannels() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getNbChannels"]], "getnbchannels() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getNbChannels"]], "getnbchannels() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getNbChannels"]], "getnbchannels() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getNbChannels"]], "getnbchannels() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getNbChannels"]], "getnbchannels() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getNbChannels"]], "getnbchannels() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getNbChannels"]], "getnbchannels() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getNbChannels"]], "getnbchannels() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.reshapetransformation method)": [[1, "N2D2.ReshapeTransformation.getNbChannels"]], "getnbchannels() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getNbChannels"]], "getnbchannels() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getNbChannels"]], "getnbchannels() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getNbChannels"]], "getnbchannels() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getNbChannels"]], "getnbchannels() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getNbChannels"]], "getnbchannels() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getNbChannels"]], "getnbchannels() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getNbChannels"]], "getnbchannels() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getNbChannels"]], "getnbchannels() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getNbChannels"]], "getnbchannels() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getNbChannels"]], "getnbchannels() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getNbChannels"]], "getnbchannels() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getNbChannels"]], "getnbchannels() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getNbChannels"]], "getnbchannels() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getNbChannels"]], "getnbchannels() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getNbChannels"]], "getnbcols() (n2d2.reshapetransformation method)": [[1, "N2D2.ReshapeTransformation.getNbCols"]], "getnboutputs() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getNbOutputs"]], "getnboutputs() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getNbOutputs"]], "getnboutputs() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.cell method)": [[1, "N2D2.Cell.getNbOutputs"]], "getnboutputs() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getNbOutputs"]], "getnboutputs() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getNbOutputs"]], "getnboutputs() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getNbOutputs"]], "getnboutputs() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getNbOutputs"]], "getnboutputs() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getNbOutputs"]], "getnboutputs() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.fccell method)": [[1, "N2D2.FcCell.getNbOutputs"]], "getnboutputs() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getNbOutputs"]], "getnboutputs() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getNbOutputs"]], "getnboutputs() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getNbOutputs"]], "getnboutputs() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getNbOutputs"]], "getnboutputs() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getNbOutputs"]], "getnboutputs() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getNbOutputs"]], "getnboutputs() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getNbOutputs"]], "getnboutputs() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getNbOutputs"]], "getnboutputs() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getNbOutputs"]], "getnboutputs() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getNbOutputs"]], "getnboutputs() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getNbOutputs"]], "getnboutputs() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getNbOutputs"]], "getnboutputs() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getNbOutputs"]], "getnboutputs() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getNbOutputs"]], "getnboutputs() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getNbOutputs"]], "getnboutputs() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getNbOutputs"]], "getnboutputs() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getNbOutputs"]], "getnboutputs() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getNbOutputs"]], "getnboutputs() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getNbOutputs"]], "getnboutputs() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getNbOutputs"]], "getnboutputs() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getNbOutputs"]], "getnboutputs() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getNbOutputs"]], "getnboutputs() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getNbOutputs"]], "getnbrows() (n2d2.reshapetransformation method)": [[1, "N2D2.ReshapeTransformation.getNbRows"]], "getnbstimuli() (n2d2.aer_database method)": [[1, "N2D2.AER_Database.getNbStimuli"]], "getnbstimuli() (n2d2.actitracker_database method)": [[1, "N2D2.Actitracker_Database.getNbStimuli"]], "getnbstimuli() (n2d2.cifar_database method)": [[1, "N2D2.CIFAR_Database.getNbStimuli"]], "getnbstimuli() (n2d2.ckp_database method)": [[1, "N2D2.CKP_Database.getNbStimuli"]], "getnbstimuli() (n2d2.caltech101_dir_database method)": [[1, "N2D2.Caltech101_DIR_Database.getNbStimuli"]], "getnbstimuli() (n2d2.caltech256_dir_database method)": [[1, "N2D2.Caltech256_DIR_Database.getNbStimuli"]], "getnbstimuli() (n2d2.caltechpedestrian_database method)": [[1, "N2D2.CaltechPedestrian_Database.getNbStimuli"]], "getnbstimuli() (n2d2.celeba_database method)": [[1, "N2D2.CelebA_Database.getNbStimuli"]], "getnbstimuli() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.getNbStimuli"]], "getnbstimuli() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.getNbStimuli"]], "getnbstimuli() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.getNbStimuli"]], "getnbstimuli() (n2d2.database method)": [[1, "N2D2.Database.getNbStimuli"]], "getnbstimuli() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.getNbStimuli"]], "getnbstimuli() (n2d2.fashion_mnist_idx_database method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.getNbStimuli"]], "getnbstimuli() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.getNbStimuli"]], "getnbstimuli() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.getNbStimuli"]], "getnbstimuli() (n2d2.idx_database method)": [[1, "N2D2.IDX_Database.getNbStimuli"]], "getnbstimuli() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.getNbStimuli"]], "getnbstimuli() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.getNbStimuli"]], "getnbstimuli() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.getNbStimuli"]], "getnbstimuli() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.getNbStimuli"]], "getnbstimuli() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.getNbStimuli"]], "getnbstimuli() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.getNbStimuli"]], "getnbstimuli() (n2d2.mnist_idx_database method)": [[1, "N2D2.MNIST_IDX_Database.getNbStimuli"]], "getnbstimuli() (n2d2.n_mnist_database method)": [[1, "N2D2.N_MNIST_Database.getNbStimuli"]], "getnbtargets() (n2d2.target method)": [[1, "N2D2.Target.getNbTargets"]], "getnetwork() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getNetwork"]], "getoffsetx() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getOffsetX"]], "getoffsety() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getOffsetY"]], "getontheflytransformation() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getOnTheFlyTransformation"]], "getoperation() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getOperation"]], "getoperation() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getOperation"]], "getoperation() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getOperation"]], "getoutputs() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getOutputs"]], "getoutputs() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.getOutputs"]], "getoutputs() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getOutputs"]], "getoutputs() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getOutputs"]], "getoutputs() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getOutputs"]], "getoutputs() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getOutputs"]], "getoutputs() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getOutputs"]], "getoutputs() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getOutputs"]], "getoutputs() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getOutputs"]], "getoutputs() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getOutputs"]], "getoutputs() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getOutputs"]], "getoutputs() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getOutputs"]], "getoutputs() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getOutputs"]], "getoutputs() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getOutputs"]], "getoutputs() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getOutputs"]], "getoutputs() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getOutputs"]], "getoutputs() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getOutputs"]], "getoutputs() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getOutputs"]], "getoutputs() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getOutputs"]], "getoutputs() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getOutputs"]], "getoutputs() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getOutputs"]], "getoutputs() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getOutputs"]], "getoutputs() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getOutputs"]], "getoutputsheight() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getOutputsHeight"]], "getoutputsheight() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getOutputsHeight"]], "getoutputsheight() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.cell method)": [[1, "N2D2.Cell.getOutputsHeight"]], "getoutputsheight() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getOutputsHeight"]], "getoutputsheight() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getOutputsHeight"]], "getoutputsheight() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getOutputsHeight"]], "getoutputsheight() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getOutputsHeight"]], "getoutputsheight() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getOutputsHeight"]], "getoutputsheight() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.fccell method)": [[1, "N2D2.FcCell.getOutputsHeight"]], "getoutputsheight() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getOutputsHeight"]], "getoutputsheight() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getOutputsHeight"]], "getoutputsheight() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getOutputsHeight"]], "getoutputsheight() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getOutputsHeight"]], "getoutputsheight() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getOutputsHeight"]], "getoutputsheight() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getOutputsHeight"]], "getoutputsheight() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getOutputsHeight"]], "getoutputsheight() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getOutputsHeight"]], "getoutputsheight() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getOutputsHeight"]], "getoutputsheight() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getOutputsHeight"]], "getoutputsheight() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getOutputsHeight"]], "getoutputsheight() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getOutputsHeight"]], "getoutputsheight() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getOutputsHeight"]], "getoutputsheight() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getOutputsHeight"]], "getoutputsheight() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getOutputsHeight"]], "getoutputsheight() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getOutputsHeight"]], "getoutputsheight() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getOutputsHeight"]], "getoutputsheight() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getOutputsHeight"]], "getoutputsheight() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getOutputsHeight"]], "getoutputsheight() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getOutputsHeight"]], "getoutputsheight() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getOutputsHeight"]], "getoutputsheight() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getOutputsHeight"]], "getoutputsheight() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getOutputsHeight"]], "getoutputswidth() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getOutputsWidth"]], "getoutputswidth() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getOutputsWidth"]], "getoutputswidth() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.cell method)": [[1, "N2D2.Cell.getOutputsWidth"]], "getoutputswidth() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getOutputsWidth"]], "getoutputswidth() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getOutputsWidth"]], "getoutputswidth() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getOutputsWidth"]], "getoutputswidth() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getOutputsWidth"]], "getoutputswidth() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getOutputsWidth"]], "getoutputswidth() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.fccell method)": [[1, "N2D2.FcCell.getOutputsWidth"]], "getoutputswidth() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getOutputsWidth"]], "getoutputswidth() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getOutputsWidth"]], "getoutputswidth() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getOutputsWidth"]], "getoutputswidth() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getOutputsWidth"]], "getoutputswidth() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getOutputsWidth"]], "getoutputswidth() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getOutputsWidth"]], "getoutputswidth() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getOutputsWidth"]], "getoutputswidth() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getOutputsWidth"]], "getoutputswidth() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getOutputsWidth"]], "getoutputswidth() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getOutputsWidth"]], "getoutputswidth() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getOutputsWidth"]], "getoutputswidth() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getOutputsWidth"]], "getoutputswidth() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getOutputsWidth"]], "getoutputswidth() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getOutputsWidth"]], "getoutputswidth() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getOutputsWidth"]], "getoutputswidth() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getOutputsWidth"]], "getoutputswidth() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getOutputsWidth"]], "getoutputswidth() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getOutputsWidth"]], "getoutputswidth() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getOutputsWidth"]], "getoutputswidth() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getOutputsWidth"]], "getoutputswidth() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getOutputsWidth"]], "getoutputswidth() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getOutputsWidth"]], "getoutputswidth() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getOutputsWidth"]], "getpaddingx() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getPaddingX"]], "getpaddingx() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getPaddingX"]], "getpaddingx() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getPaddingX"]], "getpaddingx() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getPaddingX"]], "getpaddingx() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getPaddingX"]], "getpaddingx() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getPaddingX"]], "getpaddingx() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getPaddingX"]], "getpaddingx() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getPaddingX"]], "getpaddingx() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getPaddingX"]], "getpaddingx() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getPaddingX"]], "getpaddingx() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getPaddingX"]], "getpaddingx() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getPaddingX"]], "getpaddingx() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getPaddingX"]], "getpaddingx() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getPaddingX"]], "getpaddingx() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getPaddingX"]], "getpaddingx() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getPaddingX"]], "getpaddingx() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getPaddingX"]], "getpaddingy() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getPaddingY"]], "getpaddingy() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getPaddingY"]], "getpaddingy() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getPaddingY"]], "getpaddingy() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getPaddingY"]], "getpaddingy() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getPaddingY"]], "getpaddingy() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getPaddingY"]], "getpaddingy() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getPaddingY"]], "getpaddingy() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getPaddingY"]], "getpaddingy() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getPaddingY"]], "getpaddingy() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getPaddingY"]], "getpaddingy() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getPaddingY"]], "getpaddingy() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getPaddingY"]], "getpaddingy() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getPaddingY"]], "getpaddingy() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getPaddingY"]], "getpaddingy() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getPaddingY"]], "getpaddingy() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getPaddingY"]], "getpaddingy() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getPaddingY"]], "getparameterandtype() (n2d2.aer_database method)": [[1, "N2D2.AER_Database.getParameterAndType"]], "getparameterandtype() (n2d2.actitracker_database method)": [[1, "N2D2.Actitracker_Database.getParameterAndType"]], "getparameterandtype() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getParameterAndType"]], "getparameterandtype() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getParameterAndType"]], "getparameterandtype() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.cifar_database method)": [[1, "N2D2.CIFAR_Database.getParameterAndType"]], "getparameterandtype() (n2d2.ckp_database method)": [[1, "N2D2.CKP_Database.getParameterAndType"]], "getparameterandtype() (n2d2.caltech101_dir_database method)": [[1, "N2D2.Caltech101_DIR_Database.getParameterAndType"]], "getparameterandtype() (n2d2.caltech256_dir_database method)": [[1, "N2D2.Caltech256_DIR_Database.getParameterAndType"]], "getparameterandtype() (n2d2.caltechpedestrian_database method)": [[1, "N2D2.CaltechPedestrian_Database.getParameterAndType"]], "getparameterandtype() (n2d2.celeba_database method)": [[1, "N2D2.CelebA_Database.getParameterAndType"]], "getparameterandtype() (n2d2.cell method)": [[1, "N2D2.Cell.getParameterAndType"]], "getparameterandtype() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getParameterAndType"]], "getparameterandtype() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.getParameterAndType"]], "getparameterandtype() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.getParameterAndType"]], "getparameterandtype() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.getParameterAndType"]], "getparameterandtype() (n2d2.database method)": [[1, "N2D2.Database.getParameterAndType"]], "getparameterandtype() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getParameterAndType"]], "getparameterandtype() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getParameterAndType"]], "getparameterandtype() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getParameterAndType"]], "getparameterandtype() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.getParameterAndType"]], "getparameterandtype() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getParameterAndType"]], "getparameterandtype() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.fashion_mnist_idx_database method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.getParameterAndType"]], "getparameterandtype() (n2d2.fccell method)": [[1, "N2D2.FcCell.getParameterAndType"]], "getparameterandtype() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.getParameterAndType"]], "getparameterandtype() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.getParameterAndType"]], "getparameterandtype() (n2d2.idx_database method)": [[1, "N2D2.IDX_Database.getParameterAndType"]], "getparameterandtype() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.getParameterAndType"]], "getparameterandtype() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.getParameterAndType"]], "getparameterandtype() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.getParameterAndType"]], "getparameterandtype() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.getParameterAndType"]], "getparameterandtype() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.getParameterAndType"]], "getparameterandtype() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.getParameterAndType"]], "getparameterandtype() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getParameterAndType"]], "getparameterandtype() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getParameterAndType"]], "getparameterandtype() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.mnist_idx_database method)": [[1, "N2D2.MNIST_IDX_Database.getParameterAndType"]], "getparameterandtype() (n2d2.n_mnist_database method)": [[1, "N2D2.N_MNIST_Database.getParameterAndType"]], "getparameterandtype() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getParameterAndType"]], "getparameterandtype() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getParameterAndType"]], "getparameterandtype() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getParameterAndType"]], "getparameterandtype() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getParameterAndType"]], "getparameterandtype() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getParameterAndType"]], "getparameterandtype() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getParameterAndType"]], "getparameterandtype() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getParameterAndType"]], "getparameterandtype() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getParameterAndType"]], "getparameterandtype() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getParameterAndType"]], "getparameterandtype() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getParameterAndType"]], "getparameterandtype() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getParameterAndType"]], "getparameterandtype() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getParameterAndType"]], "getparameterandtype() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getParameterAndType"]], "getparameterandtype() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getParameterAndType"]], "getparameterandtype() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getParameterAndType"]], "getparameterandtype() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getParameterAndType"]], "getparameterandtype() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getParameterAndType"]], "getparameterandtype() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getParameterAndType"]], "getparameterandtype() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getParameterAndType"]], "getparameterandtype() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getParameterAndType"]], "getparameterandtype() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getParameterAndType"]], "getparameters() (n2d2.aer_database method)": [[1, "N2D2.AER_Database.getParameters"]], "getparameters() (n2d2.actitracker_database method)": [[1, "N2D2.Actitracker_Database.getParameters"]], "getparameters() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getParameters"]], "getparameters() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getParameters"]], "getparameters() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getParameters"]], "getparameters() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getParameters"]], "getparameters() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getParameters"]], "getparameters() (n2d2.cifar_database method)": [[1, "N2D2.CIFAR_Database.getParameters"]], "getparameters() (n2d2.ckp_database method)": [[1, "N2D2.CKP_Database.getParameters"]], "getparameters() (n2d2.caltech101_dir_database method)": [[1, "N2D2.Caltech101_DIR_Database.getParameters"]], "getparameters() (n2d2.caltech256_dir_database method)": [[1, "N2D2.Caltech256_DIR_Database.getParameters"]], "getparameters() (n2d2.caltechpedestrian_database method)": [[1, "N2D2.CaltechPedestrian_Database.getParameters"]], "getparameters() (n2d2.celeba_database method)": [[1, "N2D2.CelebA_Database.getParameters"]], "getparameters() (n2d2.cell method)": [[1, "N2D2.Cell.getParameters"]], "getparameters() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getParameters"]], "getparameters() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getParameters"]], "getparameters() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getParameters"]], "getparameters() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getParameters"]], "getparameters() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getParameters"]], "getparameters() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.getParameters"]], "getparameters() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.getParameters"]], "getparameters() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.getParameters"]], "getparameters() (n2d2.database method)": [[1, "N2D2.Database.getParameters"]], "getparameters() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getParameters"]], "getparameters() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getParameters"]], "getparameters() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getParameters"]], "getparameters() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getParameters"]], "getparameters() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getParameters"]], "getparameters() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getParameters"]], "getparameters() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getParameters"]], "getparameters() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getParameters"]], "getparameters() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.getParameters"]], "getparameters() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getParameters"]], "getparameters() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getParameters"]], "getparameters() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.fashion_mnist_idx_database method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.getParameters"]], "getparameters() (n2d2.fccell method)": [[1, "N2D2.FcCell.getParameters"]], "getparameters() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getParameters"]], "getparameters() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getParameters"]], "getparameters() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.getParameters"]], "getparameters() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.getParameters"]], "getparameters() (n2d2.idx_database method)": [[1, "N2D2.IDX_Database.getParameters"]], "getparameters() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.getParameters"]], "getparameters() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.getParameters"]], "getparameters() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.getParameters"]], "getparameters() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.getParameters"]], "getparameters() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.getParameters"]], "getparameters() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.getParameters"]], "getparameters() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getParameters"]], "getparameters() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getParameters"]], "getparameters() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getParameters"]], "getparameters() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getParameters"]], "getparameters() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.mnist_idx_database method)": [[1, "N2D2.MNIST_IDX_Database.getParameters"]], "getparameters() (n2d2.n_mnist_database method)": [[1, "N2D2.N_MNIST_Database.getParameters"]], "getparameters() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getParameters"]], "getparameters() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getParameters"]], "getparameters() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getParameters"]], "getparameters() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getParameters"]], "getparameters() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getParameters"]], "getparameters() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getParameters"]], "getparameters() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getParameters"]], "getparameters() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getParameters"]], "getparameters() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getParameters"]], "getparameters() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getParameters"]], "getparameters() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getParameters"]], "getparameters() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getParameters"]], "getparameters() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getParameters"]], "getparameters() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getParameters"]], "getparameters() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getParameters"]], "getparameters() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getParameters"]], "getparameters() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getParameters"]], "getparameters() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getParameters"]], "getparameters() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getParameters"]], "getparameters() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getParameters"]], "getparameters() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getParameters"]], "getparameters() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getParameters"]], "getparameters() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getParameters"]], "getparameters() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getParameters"]], "getparameters() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getParameters"]], "getparameters() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getParameters"]], "getparameters() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getParameters"]], "getparameters() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getParameters"]], "getparameters() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getParameters"]], "getparameters() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getParameters"]], "getparameters() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getParameters"]], "getparameters() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getParameters"]], "getparameters() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getParameters"]], "getparameters() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getParameters"]], "getparameters() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getParameters"]], "getparameters() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getParameters"]], "getparameters() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getParameters"]], "getparameters() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getParameters"]], "getparameters() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getParameters"]], "getparentcells() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getParentCells"]], "getparentscells() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getParentsCells"]], "getparentscells() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getParentsCells"]], "getparentscells() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getParentsCells"]], "getparentscells() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.cell method)": [[1, "N2D2.Cell.getParentsCells"]], "getparentscells() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getParentsCells"]], "getparentscells() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getParentsCells"]], "getparentscells() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getParentsCells"]], "getparentscells() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getParentsCells"]], "getparentscells() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getParentsCells"]], "getparentscells() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getParentsCells"]], "getparentscells() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getParentsCells"]], "getparentscells() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.fccell method)": [[1, "N2D2.FcCell.getParentsCells"]], "getparentscells() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getParentsCells"]], "getparentscells() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getParentsCells"]], "getparentscells() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getParentsCells"]], "getparentscells() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getParentsCells"]], "getparentscells() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getParentsCells"]], "getparentscells() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getParentsCells"]], "getparentscells() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getParentsCells"]], "getparentscells() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getParentsCells"]], "getparentscells() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getParentsCells"]], "getparentscells() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getParentsCells"]], "getparentscells() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getParentsCells"]], "getparentscells() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getParentsCells"]], "getparentscells() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getParentsCells"]], "getparentscells() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getParentsCells"]], "getparentscells() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getParentsCells"]], "getparentscells() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getParentsCells"]], "getparentscells() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getParentsCells"]], "getparentscells() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getParentsCells"]], "getparentscells() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getParentsCells"]], "getparentscells() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getParentsCells"]], "getparentscells() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getParentsCells"]], "getparentscells() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getParentsCells"]], "getparentscells() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getParentsCells"]], "getparentscells() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getParentsCells"]], "getparentscells() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getParentsCells"]], "getparentscells() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getParentsCells"]], "getparentscells() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getParentsCells"]], "getparentscells() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getParentsCells"]], "getparentscells() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getParentsCells"]], "getparentscells() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getParentsCells"]], "getparentscells() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getParentsCells"]], "getpoolheight() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getPoolHeight"]], "getpoolheight() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getPoolHeight"]], "getpoolheight() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getPoolHeight"]], "getpoolheight() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getPoolHeight"]], "getpoolheight() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getPoolHeight"]], "getpoolheight() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getPoolHeight"]], "getpoolheight() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getPoolHeight"]], "getpoolwidth() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getPoolWidth"]], "getpoolwidth() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getPoolWidth"]], "getpoolwidth() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getPoolWidth"]], "getpoolwidth() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getPoolWidth"]], "getpoolwidth() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getPoolWidth"]], "getpoolwidth() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getPoolWidth"]], "getpoolwidth() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getPoolWidth"]], "getpooling() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getPooling"]], "getpooling() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getPooling"]], "getpooling() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getPooling"]], "getpooling() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getPooling"]], "getpooling() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getPooling"]], "getpooling() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getPooling"]], "getpooling() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getPooling"]], "getpydatatype() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getPyDataType"]], "getpydatatype() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getPyDataType"]], "getpydatatype() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getPyDataType"]], "getpydatatype() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getPyDataType"]], "getpydatatype() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getPyDataType"]], "getpydatatype() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getPyDataType"]], "getpydatatype() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getPyDataType"]], "getpymodel() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getPyModel"]], "getpymodel() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getPyModel"]], "getpymodel() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getPyModel"]], "getpymodel() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getPyModel"]], "getpymodel() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getPyModel"]], "getpymodel() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getPyModel"]], "getpymodel() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getPyModel"]], "getpymodel() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getPyModel"]], "getpymodel() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getPyModel"]], "getpymodel() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getPyModel"]], "getpymodel() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getPyModel"]], "getpymodel() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getPyModel"]], "getpymodel() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getPyModel"]], "getpymodel() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getPyModel"]], "getpymodel() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getPyModel"]], "getpymodel() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getPyModel"]], "getpymodel() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getPyModel"]], "getpymodel() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getPyModel"]], "getpymodel() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getPyModel"]], "getpymodel() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getPyModel"]], "getpymodel() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getPyModel"]], "getpymodel() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getPyModel"]], "getquantizednbbits() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.cell method)": [[1, "N2D2.Cell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.fccell method)": [[1, "N2D2.FcCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getQuantizedNbBits"]], "getquantizednbbits() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getQuantizedNbBits"]], "getquantizer() (n2d2.activation method)": [[1, "N2D2.Activation.getQuantizer"]], "getquantizer() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getQuantizer"]], "getquantizer() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getQuantizer"]], "getquantizer() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getQuantizer"]], "getquantizer() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getQuantizer"]], "getquantizer() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getQuantizer"]], "getquantizer() (n2d2.fccell method)": [[1, "N2D2.FcCell.getQuantizer"]], "getquantizer() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getQuantizer"]], "getquantizer() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getQuantizer"]], "getquantizer() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getQuantizer"]], "getquantizer() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getQuantizer"]], "getrandomhorizontalflip() (n2d2.fliptransformation method)": [[1, "N2D2.FlipTransformation.getRandomHorizontalFlip"]], "getrandomoffsetx() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getRandomOffsetX"]], "getrandomoffsety() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getRandomOffsetY"]], "getrandomrotation() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getRandomRotation"]], "getrandomrotationrange() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getRandomRotationRange"]], "getrandomscaling() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getRandomScaling"]], "getrandomscalingrange() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getRandomScalingRange"]], "getrandomverticalflip() (n2d2.fliptransformation method)": [[1, "N2D2.FlipTransformation.getRandomVerticalFlip"]], "getresizeoutputheight() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getResizeOutputHeight"]], "getresizeoutputheight() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getResizeOutputHeight"]], "getresizeoutputheight() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getResizeOutputHeight"]], "getresizeoutputwidth() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getResizeOutputWidth"]], "getresizeoutputwidth() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getResizeOutputWidth"]], "getresizeoutputwidth() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getResizeOutputWidth"]], "getresizetofit() (n2d2.rescaletransformation method)": [[1, "N2D2.RescaleTransformation.getResizeToFit"]], "getrightpad() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getRightPad"]], "getrightpad() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getRightPad"]], "getrightpad() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getRightPad"]], "getrotation() (n2d2.distortiontransformation method)": [[1, "N2D2.DistortionTransformation.getRotation"]], "getscalesolver() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getScaleSolver"]], "getscalesolver() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getScaleSolver"]], "getscalesolver() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getScaleSolver"]], "getscalesolver() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getScaleSolver"]], "getscalesolver() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getScaleSolver"]], "getscales() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getScales"]], "getscales() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getScales"]], "getscales() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getScales"]], "getscales() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getScales"]], "getscales() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getScales"]], "getscaling() (n2d2.distortiontransformation method)": [[1, "N2D2.DistortionTransformation.getScaling"]], "getscaling() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getScaling"]], "getscaling() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getScaling"]], "getscaling() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getScaling"]], "getscaling() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getScaling"]], "getscaling() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getScaling"]], "getsecondoperator() (n2d2.rangeaffinetransformation method)": [[1, "N2D2.RangeAffineTransformation.getSecondOperator"]], "getsecondvalue() (n2d2.rangeaffinetransformation method)": [[1, "N2D2.RangeAffineTransformation.getSecondValue"]], "getshifts() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getShifts"]], "getshifts() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getShifts"]], "getshifts() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getShifts"]], "getsize() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getSize"]], "getsized() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getSizeD"]], "getsizex() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getSizeX"]], "getsizey() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getSizeY"]], "getstats() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getStats"]], "getstats() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getStats"]], "getstats() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getStats"]], "getstats() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getStats"]], "getstats() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getStats"]], "getstats() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getStats"]], "getstats() (n2d2.cell method)": [[1, "N2D2.Cell.getStats"]], "getstats() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getStats"]], "getstats() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getStats"]], "getstats() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getStats"]], "getstats() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getStats"]], "getstats() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getStats"]], "getstats() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getStats"]], "getstats() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getStats"]], "getstats() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getStats"]], "getstats() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getStats"]], "getstats() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getStats"]], "getstats() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getStats"]], "getstats() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getStats"]], "getstats() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getStats"]], "getstats() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getStats"]], "getstats() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getStats"]], "getstats() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getStats"]], "getstats() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getStats"]], "getstats() (n2d2.fccell method)": [[1, "N2D2.FcCell.getStats"]], "getstats() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getStats"]], "getstats() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getStats"]], "getstats() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getStats"]], "getstats() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getStats"]], "getstats() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getStats"]], "getstats() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getStats"]], "getstats() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getStats"]], "getstats() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getStats"]], "getstats() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getStats"]], "getstats() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getStats"]], "getstats() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getStats"]], "getstats() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getStats"]], "getstats() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getStats"]], "getstats() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getStats"]], "getstats() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getStats"]], "getstats() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getStats"]], "getstats() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getStats"]], "getstats() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getStats"]], "getstats() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getStats"]], "getstats() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getStats"]], "getstats() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getStats"]], "getstats() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getStats"]], "getstats() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getStats"]], "getstats() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getStats"]], "getstats() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getStats"]], "getstats() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getStats"]], "getstats() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getStats"]], "getstats() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getStats"]], "getstats() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getStats"]], "getstats() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getStats"]], "getstats() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getStats"]], "getstats() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getStats"]], "getstats() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getStats"]], "getstats() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getStats"]], "getstats() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getStats"]], "getstats() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getStats"]], "getstats() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getStats"]], "getstats() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getStats"]], "getstats() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getStats"]], "getstats() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getStats"]], "getstats() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getStats"]], "getstats() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getStats"]], "getstats() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getStats"]], "getstats() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getStats"]], "getstats() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getStats"]], "getstats() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getStats"]], "getstats() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getStats"]], "getstats() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getStats"]], "getstats() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getStats"]], "getstats() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getStats"]], "getstats() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getStats"]], "getstats() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getStats"]], "getstimuliprovider() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getStimuliProvider"]], "getstimuliprovider() (n2d2.target method)": [[1, "N2D2.Target.getStimuliProvider"]], "getstimuluslabel() (n2d2.aer_database method)": [[1, "N2D2.AER_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.actitracker_database method)": [[1, "N2D2.Actitracker_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.cifar_database method)": [[1, "N2D2.CIFAR_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.ckp_database method)": [[1, "N2D2.CKP_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.caltech101_dir_database method)": [[1, "N2D2.Caltech101_DIR_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.caltech256_dir_database method)": [[1, "N2D2.Caltech256_DIR_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.caltechpedestrian_database method)": [[1, "N2D2.CaltechPedestrian_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.celeba_database method)": [[1, "N2D2.CelebA_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.database method)": [[1, "N2D2.Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.fashion_mnist_idx_database method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.idx_database method)": [[1, "N2D2.IDX_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.mnist_idx_database method)": [[1, "N2D2.MNIST_IDX_Database.getStimulusLabel"]], "getstimuluslabel() (n2d2.n_mnist_database method)": [[1, "N2D2.N_MNIST_Database.getStimulusLabel"]], "getstridex() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getStrideX"]], "getstridex() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getStrideX"]], "getstridex() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getStrideX"]], "getstridex() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getStrideX"]], "getstridex() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getStrideX"]], "getstridex() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getStrideX"]], "getstridex() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getStrideX"]], "getstridex() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getStrideX"]], "getstridex() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getStrideX"]], "getstridex() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getStrideX"]], "getstridex() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getStrideX"]], "getstridex() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getStrideX"]], "getstridex() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getStrideX"]], "getstridex() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getStrideX"]], "getstridex() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getStrideX"]], "getstridex() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getStrideX"]], "getstridex() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getStrideX"]], "getstridey() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getStrideY"]], "getstridey() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getStrideY"]], "getstridey() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getStrideY"]], "getstridey() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getStrideY"]], "getstridey() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getStrideY"]], "getstridey() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getStrideY"]], "getstridey() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getStrideY"]], "getstridey() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getStrideY"]], "getstridey() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getStrideY"]], "getstridey() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getStrideY"]], "getstridey() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getStrideY"]], "getstridey() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getStrideY"]], "getstridey() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getStrideY"]], "getstridey() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getStrideY"]], "getstridey() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getStrideY"]], "getstridey() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getStrideY"]], "getstridey() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getStrideY"]], "getsubsamplex() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getSubSampleX"]], "getsubsamplex() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getSubSampleX"]], "getsubsamplex() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getSubSampleX"]], "getsubsamplex() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getSubSampleX"]], "getsubsamplex() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getSubSampleX"]], "getsubsampley() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getSubSampleY"]], "getsubsampley() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getSubSampleY"]], "getsubsampley() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getSubSampleY"]], "getsubsampley() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getSubSampleY"]], "getsubsampley() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getSubSampleY"]], "gettargetlabels() (n2d2.target method)": [[1, "N2D2.Target.getTargetLabels"]], "gettargetlabelsname() (n2d2.target method)": [[1, "N2D2.Target.getTargetLabelsName"]], "gettargettopn() (n2d2.target method)": [[1, "N2D2.Target.getTargetTopN"]], "gettargetvalue() (n2d2.target method)": [[1, "N2D2.Target.getTargetValue"]], "gettargets() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.getTargets"]], "gettoppad() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getTopPad"]], "gettoppad() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getTopPad"]], "gettoppad() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getTopPad"]], "gettransformation() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.getTransformation"]], "gettransformation() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getTransformation"]], "gettransformation() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getTransformation"]], "gettransformation() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getTransformation"]], "gettruncate() (n2d2.rangeaffinetransformation method)": [[1, "N2D2.RangeAffineTransformation.getTruncate"]], "gettype() (n2d2.activation method)": [[1, "N2D2.Activation.getType"]], "gettype() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.getType"]], "gettype() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.getType"]], "gettype() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.getType"]], "gettype() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.getType"]], "gettype() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getType"]], "gettype() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getType"]], "gettype() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getType"]], "gettype() (n2d2.cell method)": [[1, "N2D2.Cell.getType"]], "gettype() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.getType"]], "gettype() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.getType"]], "gettype() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.getType"]], "gettype() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.getType"]], "gettype() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getType"]], "gettype() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getType"]], "gettype() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getType"]], "gettype() (n2d2.cudabasedevicetensor method)": [[1, "N2D2.CudaBaseDeviceTensor.getType"]], "gettype() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getType"]], "gettype() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getType"]], "gettype() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getType"]], "gettype() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.getType"]], "gettype() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.getType"]], "gettype() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.getType"]], "gettype() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getType"]], "gettype() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getType"]], "gettype() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getType"]], "gettype() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.getType"]], "gettype() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.getType"]], "gettype() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.getType"]], "gettype() (n2d2.fccell method)": [[1, "N2D2.FcCell.getType"]], "gettype() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getType"]], "gettype() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getType"]], "gettype() (n2d2.filler method)": [[1, "N2D2.Filler.getType"]], "gettype() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.getType"]], "gettype() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.getType"]], "gettype() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.getType"]], "gettype() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.getType"]], "gettype() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.getType"]], "gettype() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.getType"]], "gettype() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.getType"]], "gettype() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.getType"]], "gettype() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.getType"]], "gettype() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.getType"]], "gettype() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.getType"]], "gettype() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.getType"]], "gettype() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.getType"]], "gettype() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.getType"]], "gettype() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.getType"]], "gettype() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.getType"]], "gettype() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.getType"]], "gettype() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.getType"]], "gettype() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.getType"]], "gettype() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.getType"]], "gettype() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.getType"]], "gettype() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.getType"]], "gettype() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.getType"]], "gettype() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.getType"]], "gettype() (n2d2.rpcell method)": [[1, "N2D2.RPCell.getType"]], "gettype() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.getType"]], "gettype() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.getType"]], "gettype() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.getType"]], "gettype() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.getType"]], "gettype() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.getType"]], "gettype() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.getType"]], "gettype() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.getType"]], "gettype() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.getType"]], "gettype() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getType"]], "gettype() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getType"]], "gettype() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getType"]], "gettype() (n2d2.solver method)": [[1, "N2D2.Solver.getType"]], "gettype() (n2d2.target method)": [[1, "N2D2.Target.getType"]], "gettype() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.getType"]], "gettype() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.getType"]], "gettype() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.getType"]], "gettype() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.getType"]], "gettype() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.getType"]], "gettype() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.getType"]], "gettype() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.getType"]], "gettype() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.getType"]], "gettype() (n2d2.transformation method)": [[1, "N2D2.Transformation.getType"]], "gettype() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.getType"]], "gettype() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.getType"]], "gettype() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.getType"]], "gettype() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.getType"]], "gettype() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.getType"]], "gettype() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.getType"]], "gettypename() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.getTypeName"]], "getusevalidationfortest() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.getUseValidationForTest"]], "getvalidation() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.getValidation"]], "getvariances() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.getVariances"]], "getvariances() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.getVariances"]], "getvariances() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.getVariances"]], "getvariances() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.getVariances"]], "getvariances() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.getVariances"]], "getverticalflip() (n2d2.fliptransformation method)": [[1, "N2D2.FlipTransformation.getVerticalFlip"]], "getweight() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getWeight"]], "getweight() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getWeight"]], "getweight() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getWeight"]], "getweight() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getWeight"]], "getweight() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getWeight"]], "getweight() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getWeight"]], "getweight() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getWeight"]], "getweight() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getWeight"]], "getweight() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getWeight"]], "getweight() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getWeight"]], "getweight() (n2d2.fccell method)": [[1, "N2D2.FcCell.getWeight"]], "getweight() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getWeight"]], "getweight() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getWeight"]], "getweight() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getWeight"]], "getweight() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getWeight"]], "getweights() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.getWeights"]], "getweights() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.getWeights"]], "getweights() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.getWeights"]], "getweightsfiller() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getWeightsFiller"]], "getweightsfiller() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getWeightsFiller"]], "getweightsfiller() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getWeightsFiller"]], "getweightsfiller() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getWeightsFiller"]], "getweightsfiller() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getWeightsFiller"]], "getweightsfiller() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getWeightsFiller"]], "getweightsfiller() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getWeightsFiller"]], "getweightsfiller() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getWeightsFiller"]], "getweightsfiller() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getWeightsFiller"]], "getweightsfiller() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getWeightsFiller"]], "getweightsfiller() (n2d2.fccell method)": [[1, "N2D2.FcCell.getWeightsFiller"]], "getweightsfiller() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getWeightsFiller"]], "getweightsfiller() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getWeightsFiller"]], "getweightsfiller() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getWeightsFiller"]], "getweightsfiller() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getWeightsFiller"]], "getweightssolver() (n2d2.convcell method)": [[1, "N2D2.ConvCell.getWeightsSolver"]], "getweightssolver() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.getWeightsSolver"]], "getweightssolver() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.getWeightsSolver"]], "getweightssolver() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.getWeightsSolver"]], "getweightssolver() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.getWeightsSolver"]], "getweightssolver() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.getWeightsSolver"]], "getweightssolver() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.getWeightsSolver"]], "getweightssolver() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.getWeightsSolver"]], "getweightssolver() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.getWeightsSolver"]], "getweightssolver() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.getWeightsSolver"]], "getweightssolver() (n2d2.fccell method)": [[1, "N2D2.FcCell.getWeightsSolver"]], "getweightssolver() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.getWeightsSolver"]], "getweightssolver() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.getWeightsSolver"]], "getweightssolver() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.getWeightsSolver"]], "getweightssolver() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.getWeightsSolver"]], "getwidth() (n2d2.padcroptransformation method)": [[1, "N2D2.PadCropTransformation.getWidth"]], "getwidth() (n2d2.rescaletransformation method)": [[1, "N2D2.RescaleTransformation.getWidth"]], "getwidth() (n2d2.sliceextractiontransformation method)": [[1, "N2D2.SliceExtractionTransformation.getWidth"]], "getwithloss() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.getWithLoss"]], "getwithloss() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.getWithLoss"]], "getwithloss() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.getWithLoss"]], "getwithloss() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.getWithLoss"]], "getwithloss() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.getWithLoss"]], "hostbased() (n2d2.cudabasetensor method)": [[1, "N2D2.CudaBaseTensor.hostBased"]], "importactivationparameters() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.importActivationParameters"]], "importactivationparameters() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.importActivationParameters"]], "importactivationparameters() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.cell method)": [[1, "N2D2.Cell.importActivationParameters"]], "importactivationparameters() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.convcell method)": [[1, "N2D2.ConvCell.importActivationParameters"]], "importactivationparameters() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.importActivationParameters"]], "importactivationparameters() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.importActivationParameters"]], "importactivationparameters() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.importActivationParameters"]], "importactivationparameters() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.importActivationParameters"]], "importactivationparameters() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.fccell method)": [[1, "N2D2.FcCell.importActivationParameters"]], "importactivationparameters() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.importActivationParameters"]], "importactivationparameters() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.importActivationParameters"]], "importactivationparameters() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.importActivationParameters"]], "importactivationparameters() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.importActivationParameters"]], "importactivationparameters() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.importActivationParameters"]], "importactivationparameters() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.importActivationParameters"]], "importactivationparameters() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.importActivationParameters"]], "importactivationparameters() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.importActivationParameters"]], "importactivationparameters() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.rpcell method)": [[1, "N2D2.RPCell.importActivationParameters"]], "importactivationparameters() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.importActivationParameters"]], "importactivationparameters() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.importActivationParameters"]], "importactivationparameters() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.importActivationParameters"]], "importactivationparameters() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.importActivationParameters"]], "importactivationparameters() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.importActivationParameters"]], "importactivationparameters() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.importActivationParameters"]], "importactivationparameters() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.importActivationParameters"]], "importactivationparameters() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.importActivationParameters"]], "importactivationparameters() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.importActivationParameters"]], "importactivationparameters() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.importActivationParameters"]], "importactivationparameters() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.importActivationParameters"]], "importactivationparameters() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.importActivationParameters"]], "importactivationparameters() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.importActivationParameters"]], "importactivationparameters() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.importActivationParameters"]], "importfreeparameters() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.importFreeParameters"]], "importfreeparameters() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.importFreeParameters"]], "importfreeparameters() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.cell method)": [[1, "N2D2.Cell.importFreeParameters"]], "importfreeparameters() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.convcell method)": [[1, "N2D2.ConvCell.importFreeParameters"]], "importfreeparameters() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.importFreeParameters"]], "importfreeparameters() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.importFreeParameters"]], "importfreeparameters() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.importFreeParameters"]], "importfreeparameters() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.importFreeParameters"]], "importfreeparameters() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.fccell method)": [[1, "N2D2.FcCell.importFreeParameters"]], "importfreeparameters() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.importFreeParameters"]], "importfreeparameters() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.importFreeParameters"]], "importfreeparameters() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.importFreeParameters"]], "importfreeparameters() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.importFreeParameters"]], "importfreeparameters() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.importFreeParameters"]], "importfreeparameters() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.importFreeParameters"]], "importfreeparameters() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.importFreeParameters"]], "importfreeparameters() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.importFreeParameters"]], "importfreeparameters() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.rpcell method)": [[1, "N2D2.RPCell.importFreeParameters"]], "importfreeparameters() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.importFreeParameters"]], "importfreeparameters() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.importFreeParameters"]], "importfreeparameters() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.importFreeParameters"]], "importfreeparameters() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.importFreeParameters"]], "importfreeparameters() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.importFreeParameters"]], "importfreeparameters() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.importFreeParameters"]], "importfreeparameters() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.importFreeParameters"]], "importfreeparameters() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.importFreeParameters"]], "importfreeparameters() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.importFreeParameters"]], "importfreeparameters() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.importFreeParameters"]], "importfreeparameters() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.importFreeParameters"]], "importfreeparameters() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.importFreeParameters"]], "importfreeparameters() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.importFreeParameters"]], "importfreeparameters() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.importFreeParameters"]], "importnetworkfreeparameters() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.importNetworkFreeParameters"]], "initialize() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.initialize"]], "initialize() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.initialize"]], "initialize() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.initialize"]], "initialize() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.initialize"]], "initialize() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.initialize"]], "initialize() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.initialize"]], "initialize() (n2d2.cell method)": [[1, "N2D2.Cell.initialize"]], "initialize() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.initialize"]], "initialize() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.initialize"]], "initialize() (n2d2.convcell method)": [[1, "N2D2.ConvCell.initialize"]], "initialize() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.initialize"]], "initialize() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.initialize"]], "initialize() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.initialize"]], "initialize() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.initialize"]], "initialize() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.initialize"]], "initialize() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.initialize"]], "initialize() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.initialize"]], "initialize() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.initialize"]], "initialize() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.initialize"]], "initialize() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.initialize"]], "initialize() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.initialize"]], "initialize() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.initialize"]], "initialize() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.initialize"]], "initialize() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.initialize"]], "initialize() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.initialize"]], "initialize() (n2d2.fccell method)": [[1, "N2D2.FcCell.initialize"]], "initialize() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.initialize"]], "initialize() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.initialize"]], "initialize() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.initialize"]], "initialize() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.initialize"]], "initialize() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.initialize"]], "initialize() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.initialize"]], "initialize() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.initialize"]], "initialize() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.initialize"]], "initialize() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.initialize"]], "initialize() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.initialize"]], "initialize() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.initialize"]], "initialize() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.initialize"]], "initialize() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.initialize"]], "initialize() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.initialize"]], "initialize() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.initialize"]], "initialize() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.initialize"]], "initialize() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.initialize"]], "initialize() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.initialize"]], "initialize() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.initialize"]], "initialize() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.initialize"]], "initialize() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.initialize"]], "initialize() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.initialize"]], "initialize() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.initialize"]], "initialize() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.initialize"]], "initialize() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.initialize"]], "initialize() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.initialize"]], "initialize() (n2d2.rpcell method)": [[1, "N2D2.RPCell.initialize"]], "initialize() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.initialize"]], "initialize() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.initialize"]], "initialize() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.initialize"]], "initialize() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.initialize"]], "initialize() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.initialize"]], "initialize() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.initialize"]], "initialize() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.initialize"]], "initialize() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.initialize"]], "initialize() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.initialize"]], "initialize() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.initialize"]], "initialize() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.initialize"]], "initialize() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.initialize"]], "initialize() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.initialize"]], "initialize() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.initialize"]], "initialize() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.initialize"]], "initialize() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.initialize"]], "initialize() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.initialize"]], "initialize() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.initialize"]], "initialize() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.initialize"]], "initialize() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.initialize"]], "initialize() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.initialize"]], "initialize() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.initialize"]], "initialize() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.initialize"]], "initialize() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.initialize"]], "initialize() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.initialize"]], "initializecmonitors() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.initializeCMonitors"]], "initializedatadependent() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.initializeDataDependent"]], "initializedatadependent() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.initializeDataDependent"]], "initializedatadependent() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.cell method)": [[1, "N2D2.Cell.initializeDataDependent"]], "initializedatadependent() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.convcell method)": [[1, "N2D2.ConvCell.initializeDataDependent"]], "initializedatadependent() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.initializeDataDependent"]], "initializedatadependent() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.initializeDataDependent"]], "initializedatadependent() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.initializeDataDependent"]], "initializedatadependent() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.initializeDataDependent"]], "initializedatadependent() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.fccell method)": [[1, "N2D2.FcCell.initializeDataDependent"]], "initializedatadependent() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.initializeDataDependent"]], "initializedatadependent() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.initializeDataDependent"]], "initializedatadependent() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.initializeDataDependent"]], "initializedatadependent() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.initializeDataDependent"]], "initializedatadependent() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.initializeDataDependent"]], "initializedatadependent() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.initializeDataDependent"]], "initializedatadependent() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.initializeDataDependent"]], "initializedatadependent() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.initializeDataDependent"]], "initializedatadependent() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.rpcell method)": [[1, "N2D2.RPCell.initializeDataDependent"]], "initializedatadependent() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.initializeDataDependent"]], "initializedatadependent() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.initializeDataDependent"]], "initializedatadependent() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.initializeDataDependent"]], "initializedatadependent() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.initializeDataDependent"]], "initializedatadependent() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.initializeDataDependent"]], "initializedatadependent() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.initializeDataDependent"]], "initializedatadependent() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.initializeDataDependent"]], "initializedatadependent() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.initializeDataDependent"]], "initializedatadependent() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.initializeDataDependent"]], "initializedatadependent() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.initializeDataDependent"]], "initializedatadependent() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.initializeDataDependent"]], "initializedatadependent() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.initializeDataDependent"]], "initializedatadependent() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.initializeDataDependent"]], "initializedatadependent() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.initializeDataDependent"]], "initializeparameters() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.initializeParameters"]], "initializeparameters() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.initializeParameters"]], "initializeparameters() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.initializeParameters"]], "initializeparameters() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.initializeParameters"]], "initializeparameters() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.initializeParameters"]], "initializeparameters() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.initializeParameters"]], "initializeparameters() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.initializeParameters"]], "initializeweightquantizer() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.initializeWeightQuantizer"]], "initializeweightquantizer() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.initializeWeightQuantizer"]], "initializeweightquantizer() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.initializeWeightQuantizer"]], "initializeweightquantizer() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.initializeWeightQuantizer"]], "initializeweightquantizer() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.initializeWeightQuantizer"]], "initializeweightquantizer() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.initializeWeightQuantizer"]], "initializeweightquantizer() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.initializeWeightQuantizer"]], "initializeweightquantizer() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.initializeWeightQuantizer"]], "iscompositestimuli() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.isCompositeStimuli"]], "isvalid() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.isValid"]], "labelsmapping() (n2d2.target method)": [[1, "N2D2.Target.labelsMapping"]], "linkinput() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.linkInput"]], "linkinput() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.linkInput"]], "linkinput() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.linkInput"]], "linkinput() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.linkInput"]], "linkinput() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.linkInput"]], "linkinput() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.linkInput"]], "linkinput() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.linkInput"]], "linkinput() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.linkInput"]], "linkinput() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.linkInput"]], "linkinput() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.linkInput"]], "linkinput() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.linkInput"]], "linkinput() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.linkInput"]], "linkinput() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.linkInput"]], "linkinput() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.linkInput"]], "linkinput() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.linkInput"]], "linkinput() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.linkInput"]], "linkinput() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.linkInput"]], "linkinput() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.linkInput"]], "linkinput() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.linkInput"]], "linkinput() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.linkInput"]], "linkinput() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.linkInput"]], "linkinput() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.linkInput"]], "linkinput() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.linkInput"]], "linkinput() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.linkInput"]], "linkinput() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.linkInput"]], "linkinput() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.linkInput"]], "linkinput() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.linkInput"]], "linkinput() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.linkInput"]], "linkinput() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.linkInput"]], "linkinput() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.linkInput"]], "linkinput() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.linkInput"]], "linkinput() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.linkInput"]], "linkinput() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.linkInput"]], "linkinput() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.linkInput"]], "linkinput() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.linkInput"]], "linkinput() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.linkInput"]], "linkinput() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.linkInput"]], "linkinput() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.linkInput"]], "linkinput() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.linkInput"]], "linkinput() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.linkInput"]], "linkinput() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.linkInput"]], "linkinput() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.linkInput"]], "load() (n2d2.aer_database method)": [[1, "N2D2.AER_Database.load"]], "load() (n2d2.actitracker_database method)": [[1, "N2D2.Actitracker_Database.load"]], "load() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.load"]], "load() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.load"]], "load() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.load"]], "load() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.load"]], "load() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.load"]], "load() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.load"]], "load() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.load"]], "load() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.load"]], "load() (n2d2.cifar_database method)": [[1, "N2D2.CIFAR_Database.load"]], "load() (n2d2.ckp_database method)": [[1, "N2D2.CKP_Database.load"]], "load() (n2d2.caltech101_dir_database method)": [[1, "N2D2.Caltech101_DIR_Database.load"]], "load() (n2d2.caltech256_dir_database method)": [[1, "N2D2.Caltech256_DIR_Database.load"]], "load() (n2d2.caltechpedestrian_database method)": [[1, "N2D2.CaltechPedestrian_Database.load"]], "load() (n2d2.celeba_database method)": [[1, "N2D2.CelebA_Database.load"]], "load() (n2d2.cell method)": [[1, "N2D2.Cell.load"]], "load() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.load"]], "load() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.load"]], "load() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.load"]], "load() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.load"]], "load() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.load"]], "load() (n2d2.convcell method)": [[1, "N2D2.ConvCell.load"]], "load() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.load"]], "load() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.load"]], "load() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.load"]], "load() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.load"]], "load() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.load"]], "load() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.load"]], "load() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.load"]], "load() (n2d2.database method)": [[1, "N2D2.Database.load"]], "load() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.load"]], "load() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.load"]], "load() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.load"]], "load() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.load"]], "load() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.load"]], "load() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.load"]], "load() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.load"]], "load() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.load"]], "load() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.load"]], "load() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.load"]], "load() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.load"]], "load() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.load"]], "load() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.load"]], "load() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.load"]], "load() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.load"]], "load() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.load"]], "load() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.load"]], "load() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.load"]], "load() (n2d2.fashion_mnist_idx_database method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.load"]], "load() (n2d2.fccell method)": [[1, "N2D2.FcCell.load"]], "load() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.load"]], "load() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.load"]], "load() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.load"]], "load() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.load"]], "load() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.load"]], "load() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.load"]], "load() (n2d2.idx_database method)": [[1, "N2D2.IDX_Database.load"]], "load() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.load"]], "load() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.load"]], "load() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.load"]], "load() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.load"]], "load() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.load"]], "load() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.load"]], "load() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.load"]], "load() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.load"]], "load() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.load"]], "load() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.load"]], "load() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.load"]], "load() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.load"]], "load() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.load"]], "load() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.load"]], "load() (n2d2.mnist_idx_database method)": [[1, "N2D2.MNIST_IDX_Database.load"]], "load() (n2d2.n_mnist_database method)": [[1, "N2D2.N_MNIST_Database.load"]], "load() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.load"]], "load() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.load"]], "load() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.load"]], "load() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.load"]], "load() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.load"]], "load() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.load"]], "load() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.load"]], "load() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.load"]], "load() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.load"]], "load() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.load"]], "load() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.load"]], "load() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.load"]], "load() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.load"]], "load() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.load"]], "load() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.load"]], "load() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.load"]], "load() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.load"]], "load() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.load"]], "load() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.load"]], "load() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.load"]], "load() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.load"]], "load() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.load"]], "load() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.load"]], "load() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.load"]], "load() (n2d2.rpcell method)": [[1, "N2D2.RPCell.load"]], "load() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.load"]], "load() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.load"]], "load() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.load"]], "load() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.load"]], "load() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.load"]], "load() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.load"]], "load() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.load"]], "load() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.load"]], "load() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.load"]], "load() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.load"]], "load() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.load"]], "load() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.load"]], "load() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.load"]], "load() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.load"]], "load() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.load"]], "load() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.load"]], "load() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.load"]], "load() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.load"]], "load() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.load"]], "load() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.load"]], "load() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.load"]], "load() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.load"]], "load() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.load"]], "load() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.load"]], "load() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.load"]], "load() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.load"]], "load() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.load"]], "load() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.load"]], "load() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.load"]], "loaddir() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.loadDir"]], "loaddir() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.loadDir"]], "loaddir() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.loadDir"]], "loaddir() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.loadDir"]], "loaddir() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.loadDir"]], "loaddir() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.loadDir"]], "loaddir() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.loadDir"]], "loaddir() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.loadDir"]], "loaddir() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.loadDir"]], "loaddir() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.loadDir"]], "loaddir() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.loadDir"]], "loaddir() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.loadDir"]], "loadnetworkparameters() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.loadNetworkParameters"]], "log() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.log"]], "log() (n2d2.target method)": [[1, "N2D2.Target.log"]], "logestimatedlabels() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.logEstimatedLabels"]], "logestimatedlabels() (n2d2.target method)": [[1, "N2D2.Target.logEstimatedLabels"]], "logestimatedlabelsjson() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.logEstimatedLabelsJSON"]], "logestimatedlabelsjson() (n2d2.target method)": [[1, "N2D2.Target.logEstimatedLabelsJSON"]], "logfreeparameters() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.logFreeParameters"]], "loglabelslegend() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.logLabelsLegend"]], "loglabelslegend() (n2d2.target method)": [[1, "N2D2.Target.logLabelsLegend"]], "loglabelsmapping() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.logLabelsMapping"]], "loglabelsmapping() (n2d2.target method)": [[1, "N2D2.Target.logLabelsMapping"]], "logreceptivefields() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.logReceptiveFields"]], "logstats() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.logStats"]], "logtimings() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.logTimings"]], "mean() (n2d2.tensor_bool method)": [[1, "N2D2.Tensor_bool.mean"]], "mean() (n2d2.tensor_double method)": [[1, "N2D2.Tensor_double.mean"]], "mean() (n2d2.tensor_float method)": [[1, "N2D2.Tensor_float.mean"]], "name (n2d2.aer_database.stimuliset property)": [[1, "N2D2.AER_Database.StimuliSet.name"]], "name (n2d2.aer_database.stimulisetmask property)": [[1, "N2D2.AER_Database.StimuliSetMask.name"]], "name (n2d2.actitracker_database.stimuliset property)": [[1, "N2D2.Actitracker_Database.StimuliSet.name"]], "name (n2d2.actitracker_database.stimulisetmask property)": [[1, "N2D2.Actitracker_Database.StimuliSetMask.name"]], "name (n2d2.affinetransformation.operator property)": [[1, "N2D2.AffineTransformation.Operator.name"]], "name (n2d2.anchorcell.freeparameterstype property)": [[1, "N2D2.AnchorCell.FreeParametersType.name"]], "name (n2d2.anchorcell_frame.freeparameterstype property)": [[1, "N2D2.AnchorCell_Frame.FreeParametersType.name"]], "name (n2d2.anchorcell_frame.signals property)": [[1, "N2D2.AnchorCell_Frame.Signals.name"]], "name (n2d2.anchorcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.AnchorCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.anchorcell_frame_cuda.signals property)": [[1, "N2D2.AnchorCell_Frame_CUDA.Signals.name"]], "name (n2d2.batchnormcell.freeparameterstype property)": [[1, "N2D2.BatchNormCell.FreeParametersType.name"]], "name (n2d2.batchnormcell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.batchnormcell_frame_cuda_double.signals property)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.batchnormcell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.batchnormcell_frame_cuda_float.signals property)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.batchnormcell_frame_double.freeparameterstype property)": [[1, "N2D2.BatchNormCell_Frame_double.FreeParametersType.name"]], "name (n2d2.batchnormcell_frame_double.signals property)": [[1, "N2D2.BatchNormCell_Frame_double.Signals.name"]], "name (n2d2.batchnormcell_frame_float.freeparameterstype property)": [[1, "N2D2.BatchNormCell_Frame_float.FreeParametersType.name"]], "name (n2d2.batchnormcell_frame_float.signals property)": [[1, "N2D2.BatchNormCell_Frame_float.Signals.name"]], "name (n2d2.cifar_database.stimuliset property)": [[1, "N2D2.CIFAR_Database.StimuliSet.name"]], "name (n2d2.cifar_database.stimulisetmask property)": [[1, "N2D2.CIFAR_Database.StimuliSetMask.name"]], "name (n2d2.ckp_database.stimuliset property)": [[1, "N2D2.CKP_Database.StimuliSet.name"]], "name (n2d2.ckp_database.stimulisetmask property)": [[1, "N2D2.CKP_Database.StimuliSetMask.name"]], "name (n2d2.caltech101_dir_database.stimuliset property)": [[1, "N2D2.Caltech101_DIR_Database.StimuliSet.name"]], "name (n2d2.caltech101_dir_database.stimulisetmask property)": [[1, "N2D2.Caltech101_DIR_Database.StimuliSetMask.name"]], "name (n2d2.caltech256_dir_database.stimuliset property)": [[1, "N2D2.Caltech256_DIR_Database.StimuliSet.name"]], "name (n2d2.caltech256_dir_database.stimulisetmask property)": [[1, "N2D2.Caltech256_DIR_Database.StimuliSetMask.name"]], "name (n2d2.caltechpedestrian_database.stimuliset property)": [[1, "N2D2.CaltechPedestrian_Database.StimuliSet.name"]], "name (n2d2.caltechpedestrian_database.stimulisetmask property)": [[1, "N2D2.CaltechPedestrian_Database.StimuliSetMask.name"]], "name (n2d2.celeba_database.stimuliset property)": [[1, "N2D2.CelebA_Database.StimuliSet.name"]], "name (n2d2.celeba_database.stimulisetmask property)": [[1, "N2D2.CelebA_Database.StimuliSetMask.name"]], "name (n2d2.cell.freeparameterstype property)": [[1, "N2D2.Cell.FreeParametersType.name"]], "name (n2d2.cell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.Cell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.cell_frame_cuda_double.signals property)": [[1, "N2D2.Cell_Frame_CUDA_double.Signals.name"]], "name (n2d2.cell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.Cell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.cell_frame_cuda_float.signals property)": [[1, "N2D2.Cell_Frame_CUDA_float.Signals.name"]], "name (n2d2.cell_frame_top.signals property)": [[1, "N2D2.Cell_Frame_Top.Signals.name"]], "name (n2d2.cell_frame_double.freeparameterstype property)": [[1, "N2D2.Cell_Frame_double.FreeParametersType.name"]], "name (n2d2.cell_frame_double.signals property)": [[1, "N2D2.Cell_Frame_double.Signals.name"]], "name (n2d2.cell_frame_float.freeparameterstype property)": [[1, "N2D2.Cell_Frame_float.FreeParametersType.name"]], "name (n2d2.cell_frame_float.signals property)": [[1, "N2D2.Cell_Frame_float.Signals.name"]], "name (n2d2.channelextractiontransformation.channel property)": [[1, "N2D2.ChannelExtractionTransformation.Channel.name"]], "name (n2d2.colorspacetransformation.colorspace property)": [[1, "N2D2.ColorSpaceTransformation.ColorSpace.name"]], "name (n2d2.convcell.freeparameterstype property)": [[1, "N2D2.ConvCell.FreeParametersType.name"]], "name (n2d2.convcell.weightsexportformat property)": [[1, "N2D2.ConvCell.WeightsExportFormat.name"]], "name (n2d2.convcell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.ConvCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.convcell_frame_cuda_double.signals property)": [[1, "N2D2.ConvCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.convcell_frame_cuda_double.weightsexportformat property)": [[1, "N2D2.ConvCell_Frame_CUDA_double.WeightsExportFormat.name"]], "name (n2d2.convcell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.ConvCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.convcell_frame_cuda_float.signals property)": [[1, "N2D2.ConvCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.convcell_frame_cuda_float.weightsexportformat property)": [[1, "N2D2.ConvCell_Frame_CUDA_float.WeightsExportFormat.name"]], "name (n2d2.convcell_frame_double.freeparameterstype property)": [[1, "N2D2.ConvCell_Frame_double.FreeParametersType.name"]], "name (n2d2.convcell_frame_double.signals property)": [[1, "N2D2.ConvCell_Frame_double.Signals.name"]], "name (n2d2.convcell_frame_double.weightsexportformat property)": [[1, "N2D2.ConvCell_Frame_double.WeightsExportFormat.name"]], "name (n2d2.convcell_frame_float.freeparameterstype property)": [[1, "N2D2.ConvCell_Frame_float.FreeParametersType.name"]], "name (n2d2.convcell_frame_float.signals property)": [[1, "N2D2.ConvCell_Frame_float.Signals.name"]], "name (n2d2.convcell_frame_float.weightsexportformat property)": [[1, "N2D2.ConvCell_Frame_float.WeightsExportFormat.name"]], "name (n2d2.dir_database.stimuliset property)": [[1, "N2D2.DIR_Database.StimuliSet.name"]], "name (n2d2.dir_database.stimulisetmask property)": [[1, "N2D2.DIR_Database.StimuliSetMask.name"]], "name (n2d2.dota_database.stimuliset property)": [[1, "N2D2.DOTA_Database.StimuliSet.name"]], "name (n2d2.dota_database.stimulisetmask property)": [[1, "N2D2.DOTA_Database.StimuliSetMask.name"]], "name (n2d2.daimler_database.stimuliset property)": [[1, "N2D2.Daimler_Database.StimuliSet.name"]], "name (n2d2.daimler_database.stimulisetmask property)": [[1, "N2D2.Daimler_Database.StimuliSetMask.name"]], "name (n2d2.database.stimuliset property)": [[1, "N2D2.Database.StimuliSet.name"]], "name (n2d2.database.stimulisetmask property)": [[1, "N2D2.Database.StimuliSetMask.name"]], "name (n2d2.deconvcell.freeparameterstype property)": [[1, "N2D2.DeconvCell.FreeParametersType.name"]], "name (n2d2.deconvcell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.deconvcell_frame_cuda_double.signals property)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.deconvcell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.deconvcell_frame_cuda_float.signals property)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.deconvcell_frame_double.freeparameterstype property)": [[1, "N2D2.DeconvCell_Frame_double.FreeParametersType.name"]], "name (n2d2.deconvcell_frame_double.signals property)": [[1, "N2D2.DeconvCell_Frame_double.Signals.name"]], "name (n2d2.deconvcell_frame_float.freeparameterstype property)": [[1, "N2D2.DeconvCell_Frame_float.FreeParametersType.name"]], "name (n2d2.deconvcell_frame_float.signals property)": [[1, "N2D2.DeconvCell_Frame_float.Signals.name"]], "name (n2d2.dropoutcell.freeparameterstype property)": [[1, "N2D2.DropoutCell.FreeParametersType.name"]], "name (n2d2.dropoutcell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.dropoutcell_frame_cuda_double.signals property)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.dropoutcell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.dropoutcell_frame_cuda_float.signals property)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.dropoutcell_frame_double.freeparameterstype property)": [[1, "N2D2.DropoutCell_Frame_double.FreeParametersType.name"]], "name (n2d2.dropoutcell_frame_double.signals property)": [[1, "N2D2.DropoutCell_Frame_double.Signals.name"]], "name (n2d2.dropoutcell_frame_float.freeparameterstype property)": [[1, "N2D2.DropoutCell_Frame_float.FreeParametersType.name"]], "name (n2d2.dropoutcell_frame_float.signals property)": [[1, "N2D2.DropoutCell_Frame_float.Signals.name"]], "name (n2d2.elemwisecell.coeffmode property)": [[1, "N2D2.ElemWiseCell.CoeffMode.name"]], "name (n2d2.elemwisecell.freeparameterstype property)": [[1, "N2D2.ElemWiseCell.FreeParametersType.name"]], "name (n2d2.elemwisecell.operation property)": [[1, "N2D2.ElemWiseCell.Operation.name"]], "name (n2d2.elemwisecell_frame.coeffmode property)": [[1, "N2D2.ElemWiseCell_Frame.CoeffMode.name"]], "name (n2d2.elemwisecell_frame.freeparameterstype property)": [[1, "N2D2.ElemWiseCell_Frame.FreeParametersType.name"]], "name (n2d2.elemwisecell_frame.operation property)": [[1, "N2D2.ElemWiseCell_Frame.Operation.name"]], "name (n2d2.elemwisecell_frame.signals property)": [[1, "N2D2.ElemWiseCell_Frame.Signals.name"]], "name (n2d2.elemwisecell_frame_cuda.coeffmode property)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.CoeffMode.name"]], "name (n2d2.elemwisecell_frame_cuda.freeparameterstype property)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.elemwisecell_frame_cuda.operation property)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.Operation.name"]], "name (n2d2.elemwisecell_frame_cuda.signals property)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.Signals.name"]], "name (n2d2.fddb_database.stimuliset property)": [[1, "N2D2.FDDB_Database.StimuliSet.name"]], "name (n2d2.fddb_database.stimulisetmask property)": [[1, "N2D2.FDDB_Database.StimuliSetMask.name"]], "name (n2d2.fmpcell.freeparameterstype property)": [[1, "N2D2.FMPCell.FreeParametersType.name"]], "name (n2d2.fmpcell_frame.freeparameterstype property)": [[1, "N2D2.FMPCell_Frame.FreeParametersType.name"]], "name (n2d2.fmpcell_frame.signals property)": [[1, "N2D2.FMPCell_Frame.Signals.name"]], "name (n2d2.fmpcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.FMPCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.fmpcell_frame_cuda.signals property)": [[1, "N2D2.FMPCell_Frame_CUDA.Signals.name"]], "name (n2d2.fashion_mnist_idx_database.stimuliset property)": [[1, "N2D2.Fashion_MNIST_IDX_Database.StimuliSet.name"]], "name (n2d2.fashion_mnist_idx_database.stimulisetmask property)": [[1, "N2D2.Fashion_MNIST_IDX_Database.StimuliSetMask.name"]], "name (n2d2.fccell.freeparameterstype property)": [[1, "N2D2.FcCell.FreeParametersType.name"]], "name (n2d2.fccell.weightsexportformat property)": [[1, "N2D2.FcCell.WeightsExportFormat.name"]], "name (n2d2.fccell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.FcCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.fccell_frame_cuda_double.signals property)": [[1, "N2D2.FcCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.fccell_frame_cuda_double.weightsexportformat property)": [[1, "N2D2.FcCell_Frame_CUDA_double.WeightsExportFormat.name"]], "name (n2d2.fccell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.FcCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.fccell_frame_cuda_float.signals property)": [[1, "N2D2.FcCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.fccell_frame_cuda_float.weightsexportformat property)": [[1, "N2D2.FcCell_Frame_CUDA_float.WeightsExportFormat.name"]], "name (n2d2.fccell_frame_double.freeparameterstype property)": [[1, "N2D2.FcCell_Frame_double.FreeParametersType.name"]], "name (n2d2.fccell_frame_double.signals property)": [[1, "N2D2.FcCell_Frame_double.Signals.name"]], "name (n2d2.fccell_frame_double.weightsexportformat property)": [[1, "N2D2.FcCell_Frame_double.WeightsExportFormat.name"]], "name (n2d2.fccell_frame_float.freeparameterstype property)": [[1, "N2D2.FcCell_Frame_float.FreeParametersType.name"]], "name (n2d2.fccell_frame_float.signals property)": [[1, "N2D2.FcCell_Frame_float.Signals.name"]], "name (n2d2.fccell_frame_float.weightsexportformat property)": [[1, "N2D2.FcCell_Frame_float.WeightsExportFormat.name"]], "name (n2d2.gtsdb_dir_database.stimuliset property)": [[1, "N2D2.GTSDB_DIR_Database.StimuliSet.name"]], "name (n2d2.gtsdb_dir_database.stimulisetmask property)": [[1, "N2D2.GTSDB_DIR_Database.StimuliSetMask.name"]], "name (n2d2.gtsrb_dir_database.stimuliset property)": [[1, "N2D2.GTSRB_DIR_Database.StimuliSet.name"]], "name (n2d2.gtsrb_dir_database.stimulisetmask property)": [[1, "N2D2.GTSRB_DIR_Database.StimuliSetMask.name"]], "name (n2d2.idx_database.stimuliset property)": [[1, "N2D2.IDX_Database.StimuliSet.name"]], "name (n2d2.idx_database.stimulisetmask property)": [[1, "N2D2.IDX_Database.StimuliSetMask.name"]], "name (n2d2.ilsvrc2012_database.stimuliset property)": [[1, "N2D2.ILSVRC2012_Database.StimuliSet.name"]], "name (n2d2.ilsvrc2012_database.stimulisetmask property)": [[1, "N2D2.ILSVRC2012_Database.StimuliSetMask.name"]], "name (n2d2.imdbwiki_database.stimuliset property)": [[1, "N2D2.IMDBWIKI_Database.StimuliSet.name"]], "name (n2d2.imdbwiki_database.stimulisetmask property)": [[1, "N2D2.IMDBWIKI_Database.StimuliSetMask.name"]], "name (n2d2.kitti_database.stimuliset property)": [[1, "N2D2.KITTI_Database.StimuliSet.name"]], "name (n2d2.kitti_database.stimulisetmask property)": [[1, "N2D2.KITTI_Database.StimuliSetMask.name"]], "name (n2d2.kitti_object_database.stimuliset property)": [[1, "N2D2.KITTI_Object_Database.StimuliSet.name"]], "name (n2d2.kitti_object_database.stimulisetmask property)": [[1, "N2D2.KITTI_Object_Database.StimuliSetMask.name"]], "name (n2d2.kitti_road_database.stimuliset property)": [[1, "N2D2.KITTI_Road_Database.StimuliSet.name"]], "name (n2d2.kitti_road_database.stimulisetmask property)": [[1, "N2D2.KITTI_Road_Database.StimuliSetMask.name"]], "name (n2d2.litisrouen_database.stimuliset property)": [[1, "N2D2.LITISRouen_Database.StimuliSet.name"]], "name (n2d2.litisrouen_database.stimulisetmask property)": [[1, "N2D2.LITISRouen_Database.StimuliSetMask.name"]], "name (n2d2.lrncell.freeparameterstype property)": [[1, "N2D2.LRNCell.FreeParametersType.name"]], "name (n2d2.lrncell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.LRNCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.lrncell_frame_cuda_double.signals property)": [[1, "N2D2.LRNCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.lrncell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.LRNCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.lrncell_frame_cuda_float.signals property)": [[1, "N2D2.LRNCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.lrncell_frame_double.freeparameterstype property)": [[1, "N2D2.LRNCell_Frame_double.FreeParametersType.name"]], "name (n2d2.lrncell_frame_double.signals property)": [[1, "N2D2.LRNCell_Frame_double.Signals.name"]], "name (n2d2.lrncell_frame_float.freeparameterstype property)": [[1, "N2D2.LRNCell_Frame_float.FreeParametersType.name"]], "name (n2d2.lrncell_frame_float.signals property)": [[1, "N2D2.LRNCell_Frame_float.Signals.name"]], "name (n2d2.lstmcell.freeparameterstype property)": [[1, "N2D2.LSTMCell.FreeParametersType.name"]], "name (n2d2.lstmcell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.lstmcell_frame_cuda_double.signals property)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.lstmcell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.lstmcell_frame_cuda_float.signals property)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.mnist_idx_database.stimuliset property)": [[1, "N2D2.MNIST_IDX_Database.StimuliSet.name"]], "name (n2d2.mnist_idx_database.stimulisetmask property)": [[1, "N2D2.MNIST_IDX_Database.StimuliSetMask.name"]], "name (n2d2.morphologicalreconstructiontransformation.operation property)": [[1, "N2D2.MorphologicalReconstructionTransformation.Operation.name"]], "name (n2d2.morphologytransformation.operation property)": [[1, "N2D2.MorphologyTransformation.Operation.name"]], "name (n2d2.n_mnist_database.stimuliset property)": [[1, "N2D2.N_MNIST_Database.StimuliSet.name"]], "name (n2d2.n_mnist_database.stimulisetmask property)": [[1, "N2D2.N_MNIST_Database.StimuliSetMask.name"]], "name (n2d2.normalizecell.freeparameterstype property)": [[1, "N2D2.NormalizeCell.FreeParametersType.name"]], "name (n2d2.normalizecell.norm property)": [[1, "N2D2.NormalizeCell.Norm.name"]], "name (n2d2.normalizecell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.normalizecell_frame_cuda_double.norm property)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.Norm.name"]], "name (n2d2.normalizecell_frame_cuda_double.signals property)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.normalizecell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.normalizecell_frame_cuda_float.norm property)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.Norm.name"]], "name (n2d2.normalizecell_frame_cuda_float.signals property)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.normalizecell_frame_double.freeparameterstype property)": [[1, "N2D2.NormalizeCell_Frame_double.FreeParametersType.name"]], "name (n2d2.normalizecell_frame_double.norm property)": [[1, "N2D2.NormalizeCell_Frame_double.Norm.name"]], "name (n2d2.normalizecell_frame_double.signals property)": [[1, "N2D2.NormalizeCell_Frame_double.Signals.name"]], "name (n2d2.normalizecell_frame_float.freeparameterstype property)": [[1, "N2D2.NormalizeCell_Frame_float.FreeParametersType.name"]], "name (n2d2.normalizecell_frame_float.norm property)": [[1, "N2D2.NormalizeCell_Frame_float.Norm.name"]], "name (n2d2.normalizecell_frame_float.signals property)": [[1, "N2D2.NormalizeCell_Frame_float.Signals.name"]], "name (n2d2.objectdetcell.freeparameterstype property)": [[1, "N2D2.ObjectDetCell.FreeParametersType.name"]], "name (n2d2.objectdetcell_frame.freeparameterstype property)": [[1, "N2D2.ObjectDetCell_Frame.FreeParametersType.name"]], "name (n2d2.objectdetcell_frame.signals property)": [[1, "N2D2.ObjectDetCell_Frame.Signals.name"]], "name (n2d2.objectdetcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.objectdetcell_frame_cuda.signals property)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.Signals.name"]], "name (n2d2.padcroptransformation.bordertype property)": [[1, "N2D2.PadCropTransformation.BorderType.name"]], "name (n2d2.paddingcell.freeparameterstype property)": [[1, "N2D2.PaddingCell.FreeParametersType.name"]], "name (n2d2.paddingcell_frame.freeparameterstype property)": [[1, "N2D2.PaddingCell_Frame.FreeParametersType.name"]], "name (n2d2.paddingcell_frame.signals property)": [[1, "N2D2.PaddingCell_Frame.Signals.name"]], "name (n2d2.paddingcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.PaddingCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.paddingcell_frame_cuda.signals property)": [[1, "N2D2.PaddingCell_Frame_CUDA.Signals.name"]], "name (n2d2.poolcell.freeparameterstype property)": [[1, "N2D2.PoolCell.FreeParametersType.name"]], "name (n2d2.poolcell.pooling property)": [[1, "N2D2.PoolCell.Pooling.name"]], "name (n2d2.poolcell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.PoolCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.poolcell_frame_cuda_double.pooling property)": [[1, "N2D2.PoolCell_Frame_CUDA_double.Pooling.name"]], "name (n2d2.poolcell_frame_cuda_double.signals property)": [[1, "N2D2.PoolCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.poolcell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.PoolCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.poolcell_frame_cuda_float.pooling property)": [[1, "N2D2.PoolCell_Frame_CUDA_float.Pooling.name"]], "name (n2d2.poolcell_frame_cuda_float.signals property)": [[1, "N2D2.PoolCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.poolcell_frame_ext_cuda_double.freeparameterstype property)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.FreeParametersType.name"]], "name (n2d2.poolcell_frame_ext_cuda_double.pooling property)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.Pooling.name"]], "name (n2d2.poolcell_frame_ext_cuda_double.signals property)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.Signals.name"]], "name (n2d2.poolcell_frame_ext_cuda_float.freeparameterstype property)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.FreeParametersType.name"]], "name (n2d2.poolcell_frame_ext_cuda_float.pooling property)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.Pooling.name"]], "name (n2d2.poolcell_frame_ext_cuda_float.signals property)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.Signals.name"]], "name (n2d2.poolcell_frame_double.freeparameterstype property)": [[1, "N2D2.PoolCell_Frame_double.FreeParametersType.name"]], "name (n2d2.poolcell_frame_double.pooling property)": [[1, "N2D2.PoolCell_Frame_double.Pooling.name"]], "name (n2d2.poolcell_frame_double.signals property)": [[1, "N2D2.PoolCell_Frame_double.Signals.name"]], "name (n2d2.poolcell_frame_float.freeparameterstype property)": [[1, "N2D2.PoolCell_Frame_float.FreeParametersType.name"]], "name (n2d2.poolcell_frame_float.pooling property)": [[1, "N2D2.PoolCell_Frame_float.Pooling.name"]], "name (n2d2.poolcell_frame_float.signals property)": [[1, "N2D2.PoolCell_Frame_float.Signals.name"]], "name (n2d2.proposalcell.freeparameterstype property)": [[1, "N2D2.ProposalCell.FreeParametersType.name"]], "name (n2d2.proposalcell_frame.freeparameterstype property)": [[1, "N2D2.ProposalCell_Frame.FreeParametersType.name"]], "name (n2d2.proposalcell_frame.signals property)": [[1, "N2D2.ProposalCell_Frame.Signals.name"]], "name (n2d2.proposalcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.ProposalCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.proposalcell_frame_cuda.signals property)": [[1, "N2D2.ProposalCell_Frame_CUDA.Signals.name"]], "name (n2d2.roipoolingcell.freeparameterstype property)": [[1, "N2D2.ROIPoolingCell.FreeParametersType.name"]], "name (n2d2.roipoolingcell.roipooling property)": [[1, "N2D2.ROIPoolingCell.ROIPooling.name"]], "name (n2d2.roipoolingcell_frame.freeparameterstype property)": [[1, "N2D2.ROIPoolingCell_Frame.FreeParametersType.name"]], "name (n2d2.roipoolingcell_frame.roipooling property)": [[1, "N2D2.ROIPoolingCell_Frame.ROIPooling.name"]], "name (n2d2.roipoolingcell_frame.signals property)": [[1, "N2D2.ROIPoolingCell_Frame.Signals.name"]], "name (n2d2.roipoolingcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.roipoolingcell_frame_cuda.roipooling property)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.ROIPooling.name"]], "name (n2d2.roipoolingcell_frame_cuda.signals property)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.Signals.name"]], "name (n2d2.rpcell.freeparameterstype property)": [[1, "N2D2.RPCell.FreeParametersType.name"]], "name (n2d2.rpcell_frame.freeparameterstype property)": [[1, "N2D2.RPCell_Frame.FreeParametersType.name"]], "name (n2d2.rpcell_frame.signals property)": [[1, "N2D2.RPCell_Frame.Signals.name"]], "name (n2d2.rpcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.RPCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.rpcell_frame_cuda.signals property)": [[1, "N2D2.RPCell_Frame_CUDA.Signals.name"]], "name (n2d2.rangeaffinetransformation.operator property)": [[1, "N2D2.RangeAffineTransformation.Operator.name"]], "name (n2d2.resizecell.freeparameterstype property)": [[1, "N2D2.ResizeCell.FreeParametersType.name"]], "name (n2d2.resizecell.resizemode property)": [[1, "N2D2.ResizeCell.ResizeMode.name"]], "name (n2d2.resizecell_frame.freeparameterstype property)": [[1, "N2D2.ResizeCell_Frame.FreeParametersType.name"]], "name (n2d2.resizecell_frame.resizemode property)": [[1, "N2D2.ResizeCell_Frame.ResizeMode.name"]], "name (n2d2.resizecell_frame.signals property)": [[1, "N2D2.ResizeCell_Frame.Signals.name"]], "name (n2d2.resizecell_frame_cuda.freeparameterstype property)": [[1, "N2D2.ResizeCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.resizecell_frame_cuda.resizemode property)": [[1, "N2D2.ResizeCell_Frame_CUDA.ResizeMode.name"]], "name (n2d2.resizecell_frame_cuda.signals property)": [[1, "N2D2.ResizeCell_Frame_CUDA.Signals.name"]], "name (n2d2.scalingcell.freeparameterstype property)": [[1, "N2D2.ScalingCell.FreeParametersType.name"]], "name (n2d2.scalingcell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.scalingcell_frame_cuda_double.signals property)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.scalingcell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.scalingcell_frame_cuda_float.signals property)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.scalingcell_frame_double.freeparameterstype property)": [[1, "N2D2.ScalingCell_Frame_double.FreeParametersType.name"]], "name (n2d2.scalingcell_frame_double.signals property)": [[1, "N2D2.ScalingCell_Frame_double.Signals.name"]], "name (n2d2.scalingcell_frame_float.freeparameterstype property)": [[1, "N2D2.ScalingCell_Frame_float.FreeParametersType.name"]], "name (n2d2.scalingcell_frame_float.signals property)": [[1, "N2D2.ScalingCell_Frame_float.Signals.name"]], "name (n2d2.sliceextractiontransformation.bordertype property)": [[1, "N2D2.SliceExtractionTransformation.BorderType.name"]], "name (n2d2.softmaxcell.freeparameterstype property)": [[1, "N2D2.SoftmaxCell.FreeParametersType.name"]], "name (n2d2.softmaxcell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.softmaxcell_frame_cuda_double.signals property)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.softmaxcell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.softmaxcell_frame_cuda_float.signals property)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.softmaxcell_frame_double.freeparameterstype property)": [[1, "N2D2.SoftmaxCell_Frame_double.FreeParametersType.name"]], "name (n2d2.softmaxcell_frame_double.signals property)": [[1, "N2D2.SoftmaxCell_Frame_double.Signals.name"]], "name (n2d2.softmaxcell_frame_float.freeparameterstype property)": [[1, "N2D2.SoftmaxCell_Frame_float.FreeParametersType.name"]], "name (n2d2.softmaxcell_frame_float.signals property)": [[1, "N2D2.SoftmaxCell_Frame_float.Signals.name"]], "name (n2d2.targetbiascell.freeparameterstype property)": [[1, "N2D2.TargetBiasCell.FreeParametersType.name"]], "name (n2d2.targetbiascell_frame_cuda_double.freeparameterstype property)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.FreeParametersType.name"]], "name (n2d2.targetbiascell_frame_cuda_double.signals property)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.Signals.name"]], "name (n2d2.targetbiascell_frame_cuda_float.freeparameterstype property)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.FreeParametersType.name"]], "name (n2d2.targetbiascell_frame_cuda_float.signals property)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.Signals.name"]], "name (n2d2.targetbiascell_frame_double.freeparameterstype property)": [[1, "N2D2.TargetBiasCell_Frame_double.FreeParametersType.name"]], "name (n2d2.targetbiascell_frame_double.signals property)": [[1, "N2D2.TargetBiasCell_Frame_double.Signals.name"]], "name (n2d2.targetbiascell_frame_float.freeparameterstype property)": [[1, "N2D2.TargetBiasCell_Frame_float.FreeParametersType.name"]], "name (n2d2.targetbiascell_frame_float.signals property)": [[1, "N2D2.TargetBiasCell_Frame_float.Signals.name"]], "name (n2d2.thresholdcell.freeparameterstype property)": [[1, "N2D2.ThresholdCell.FreeParametersType.name"]], "name (n2d2.thresholdcell_frame.freeparameterstype property)": [[1, "N2D2.ThresholdCell_Frame.FreeParametersType.name"]], "name (n2d2.thresholdcell_frame.signals property)": [[1, "N2D2.ThresholdCell_Frame.Signals.name"]], "name (n2d2.thresholdcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.ThresholdCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.thresholdcell_frame_cuda.signals property)": [[1, "N2D2.ThresholdCell_Frame_CUDA.Signals.name"]], "name (n2d2.transformationcell.freeparameterstype property)": [[1, "N2D2.TransformationCell.FreeParametersType.name"]], "name (n2d2.transformationcell_frame.freeparameterstype property)": [[1, "N2D2.TransformationCell_Frame.FreeParametersType.name"]], "name (n2d2.transformationcell_frame.signals property)": [[1, "N2D2.TransformationCell_Frame.Signals.name"]], "name (n2d2.transformationcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.TransformationCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.transformationcell_frame_cuda.signals property)": [[1, "N2D2.TransformationCell_Frame_CUDA.Signals.name"]], "name (n2d2.unpoolcell.freeparameterstype property)": [[1, "N2D2.UnpoolCell.FreeParametersType.name"]], "name (n2d2.unpoolcell.pooling property)": [[1, "N2D2.UnpoolCell.Pooling.name"]], "name (n2d2.unpoolcell_frame.freeparameterstype property)": [[1, "N2D2.UnpoolCell_Frame.FreeParametersType.name"]], "name (n2d2.unpoolcell_frame.pooling property)": [[1, "N2D2.UnpoolCell_Frame.Pooling.name"]], "name (n2d2.unpoolcell_frame.signals property)": [[1, "N2D2.UnpoolCell_Frame.Signals.name"]], "name (n2d2.unpoolcell_frame_cuda.freeparameterstype property)": [[1, "N2D2.UnpoolCell_Frame_CUDA.FreeParametersType.name"]], "name (n2d2.unpoolcell_frame_cuda.pooling property)": [[1, "N2D2.UnpoolCell_Frame_CUDA.Pooling.name"]], "name (n2d2.unpoolcell_frame_cuda.signals property)": [[1, "N2D2.UnpoolCell_Frame_CUDA.Signals.name"]], "nbdims() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.nbDims"]], "normalizeintegersstimuli() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.normalizeIntegersStimuli"]], "op_assign() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.op_assign"]], "process() (n2d2.target method)": [[1, "N2D2.Target.process"]], "propagate() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.propagate"]], "propagate() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.propagate"]], "propagate() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.propagate"]], "propagate() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.propagate"]], "propagate() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.propagate"]], "propagate() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.propagate"]], "propagate() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.propagate"]], "propagate() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.propagate"]], "propagate() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.propagate"]], "propagate() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.propagate"]], "propagate() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.propagate"]], "propagate() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.propagate"]], "propagate() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.propagate"]], "propagate() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.propagate"]], "propagate() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.propagate"]], "propagate() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.propagate"]], "propagate() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.propagate"]], "propagate() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.propagate"]], "propagate() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.propagate"]], "propagate() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.propagate"]], "propagate() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.propagate"]], "propagate() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.propagate"]], "propagate() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.propagate"]], "propagate() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.propagate"]], "propagate() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.propagate"]], "propagate() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.propagate"]], "propagate() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.propagate"]], "propagate() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.propagate"]], "propagate() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.propagate"]], "propagate() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.propagate"]], "propagate() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.propagate"]], "propagate() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.propagate"]], "propagate() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.propagate"]], "propagate() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.propagate"]], "propagate() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.propagate"]], "propagate() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.propagate"]], "propagate() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.propagate"]], "propagate() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.propagate"]], "propagate() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.propagate"]], "propagate() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.propagate"]], "propagate() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.propagate"]], "propagate() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.propagate"]], "propagate() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.propagate"]], "propagate() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.propagate"]], "propagate() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.propagate"]], "propagate() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.propagate"]], "propagate() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.propagate"]], "propagate() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.propagate"]], "propagate() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.propagate"]], "propagate() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.propagate"]], "propagate() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.propagate"]], "propagate() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.propagate"]], "propagate() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.propagate"]], "propagate() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.propagate"]], "providetargets() (n2d2.target method)": [[1, "N2D2.Target.provideTargets"]], "push_back() (n2d2.compositetransformation method)": [[1, "N2D2.CompositeTransformation.push_back"]], "readbatch() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.readBatch"]], "readrandombatch() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.readRandomBatch"]], "removecell() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.removeCell"]], "removedropout() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.removeDropout"]], "resetbias() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.resetBias"]], "resetbias() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.resetBias"]], "resetbias() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.resetBias"]], "resetbias() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.resetBias"]], "resetbias() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.resetBias"]], "resetbias() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.resetBias"]], "resetbias() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.resetBias"]], "resetbias() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.resetBias"]], "resetweights() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.resetWeights"]], "resetweights() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.resetWeights"]], "resetweights() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.resetWeights"]], "resetweights() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.resetWeights"]], "resetweights() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.resetWeights"]], "resetweights() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.resetWeights"]], "resetweights() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.resetWeights"]], "resetweights() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.resetWeights"]], "resetweightssolver() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.resetWeightsSolver"]], "resetweightssolver() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.resetWeightsSolver"]], "resetweightssolver() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.resetWeightsSolver"]], "resetweightssolver() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.resetWeightsSolver"]], "resetweightssolver() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.resetWeightsSolver"]], "resetweightssolver() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.resetWeightsSolver"]], "resetweightssolver() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.resetWeightsSolver"]], "resetweightssolver() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.resetWeightsSolver"]], "resetweightssolver() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.resetWeightsSolver"]], "resetweightssolver() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.resetWeightsSolver"]], "resetweightssolver() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.resetWeightsSolver"]], "resetweightssolver() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.resetWeightsSolver"]], "reshape() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.reshape"]], "resize() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.resize"]], "save() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.save"]], "save() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.save"]], "save() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.save"]], "save() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.save"]], "save() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.save"]], "save() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.save"]], "save() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.save"]], "save() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.save"]], "save() (n2d2.cell method)": [[1, "N2D2.Cell.save"]], "save() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.save"]], "save() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.save"]], "save() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.save"]], "save() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.save"]], "save() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.save"]], "save() (n2d2.convcell method)": [[1, "N2D2.ConvCell.save"]], "save() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.save"]], "save() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.save"]], "save() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.save"]], "save() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.save"]], "save() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.save"]], "save() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.save"]], "save() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.save"]], "save() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.save"]], "save() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.save"]], "save() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.save"]], "save() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.save"]], "save() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.save"]], "save() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.save"]], "save() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.save"]], "save() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.save"]], "save() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.save"]], "save() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.save"]], "save() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.save"]], "save() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.save"]], "save() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.save"]], "save() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.save"]], "save() (n2d2.fccell method)": [[1, "N2D2.FcCell.save"]], "save() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.save"]], "save() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.save"]], "save() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.save"]], "save() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.save"]], "save() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.save"]], "save() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.save"]], "save() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.save"]], "save() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.save"]], "save() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.save"]], "save() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.save"]], "save() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.save"]], "save() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.save"]], "save() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.save"]], "save() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.save"]], "save() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.save"]], "save() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.save"]], "save() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.save"]], "save() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.save"]], "save() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.save"]], "save() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.save"]], "save() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.save"]], "save() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.save"]], "save() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.save"]], "save() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.save"]], "save() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.save"]], "save() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.save"]], "save() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.save"]], "save() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.save"]], "save() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.save"]], "save() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.save"]], "save() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.save"]], "save() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.save"]], "save() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.save"]], "save() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.save"]], "save() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.save"]], "save() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.save"]], "save() (n2d2.rpcell method)": [[1, "N2D2.RPCell.save"]], "save() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.save"]], "save() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.save"]], "save() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.save"]], "save() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.save"]], "save() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.save"]], "save() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.save"]], "save() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.save"]], "save() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.save"]], "save() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.save"]], "save() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.save"]], "save() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.save"]], "save() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.save"]], "save() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.save"]], "save() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.save"]], "save() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.save"]], "save() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.save"]], "save() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.save"]], "save() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.save"]], "save() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.save"]], "save() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.save"]], "save() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.save"]], "save() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.save"]], "save() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.save"]], "save() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.save"]], "save() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.save"]], "save() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.save"]], "save() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.save"]], "save() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.save"]], "save() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.save"]], "savefreeparameters() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.saveFreeParameters"]], "savefreeparameters() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.saveFreeParameters"]], "savefreeparameters() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.cell method)": [[1, "N2D2.Cell.saveFreeParameters"]], "savefreeparameters() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.convcell method)": [[1, "N2D2.ConvCell.saveFreeParameters"]], "savefreeparameters() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.saveFreeParameters"]], "savefreeparameters() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.saveFreeParameters"]], "savefreeparameters() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.saveFreeParameters"]], "savefreeparameters() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.saveFreeParameters"]], "savefreeparameters() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.fccell method)": [[1, "N2D2.FcCell.saveFreeParameters"]], "savefreeparameters() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.saveFreeParameters"]], "savefreeparameters() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.saveFreeParameters"]], "savefreeparameters() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.saveFreeParameters"]], "savefreeparameters() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.saveFreeParameters"]], "savefreeparameters() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.saveFreeParameters"]], "savefreeparameters() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.saveFreeParameters"]], "savefreeparameters() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.saveFreeParameters"]], "savefreeparameters() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.saveFreeParameters"]], "savefreeparameters() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.rpcell method)": [[1, "N2D2.RPCell.saveFreeParameters"]], "savefreeparameters() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.saveFreeParameters"]], "savefreeparameters() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.saveFreeParameters"]], "savefreeparameters() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.saveFreeParameters"]], "savefreeparameters() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.saveFreeParameters"]], "savefreeparameters() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.saveFreeParameters"]], "savefreeparameters() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.saveFreeParameters"]], "savefreeparameters() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.saveFreeParameters"]], "savefreeparameters() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.saveFreeParameters"]], "savefreeparameters() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.saveFreeParameters"]], "savefreeparameters() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.saveFreeParameters"]], "savefreeparameters() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.saveFreeParameters"]], "savefreeparameters() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.saveFreeParameters"]], "savefreeparameters() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.saveFreeParameters"]], "savefreeparameters() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.saveFreeParameters"]], "savenetworkparameters() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.saveNetworkParameters"]], "setactivation() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.setActivation"]], "setactivation() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setActivation"]], "setactivation() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setActivation"]], "setactivation() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.setActivation"]], "setactivation() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.setActivation"]], "setactivation() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.setActivation"]], "setactivation() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setActivation"]], "setactivation() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setActivation"]], "setactivation() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setActivation"]], "setactivation() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setActivation"]], "setactivation() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.setActivation"]], "setactivation() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.setActivation"]], "setactivation() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.setActivation"]], "setactivation() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.setActivation"]], "setactivation() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setActivation"]], "setactivation() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setActivation"]], "setactivation() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.setActivation"]], "setactivation() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.setActivation"]], "setactivation() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.setActivation"]], "setactivation() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.setActivation"]], "setactivation() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.setActivation"]], "setactivation() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.setActivation"]], "setactivation() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.setActivation"]], "setactivation() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.setActivation"]], "setactivation() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.setActivation"]], "setactivation() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.setActivation"]], "setactivation() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.setActivation"]], "setactivation() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.setActivation"]], "setactivation() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.setActivation"]], "setactivation() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.setActivation"]], "setactivation() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.setActivation"]], "setactivation() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.setActivation"]], "setactivation() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.setActivation"]], "setactivation() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.setActivation"]], "setactivation() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.setActivation"]], "setactivation() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.setActivation"]], "setactivation() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.setActivation"]], "setactivation() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.setActivation"]], "setactivation() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.setActivation"]], "setactivation() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.setActivation"]], "setactivation() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.setActivation"]], "setactivation() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.setActivation"]], "setactivation() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.setActivation"]], "setbatch() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.setBatch"]], "setbias() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.setBias"]], "setbias() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setBias"]], "setbias() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setBias"]], "setbias() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setBias"]], "setbias() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setBias"]], "setbias() (n2d2.convcell method)": [[1, "N2D2.ConvCell.setBias"]], "setbias() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setBias"]], "setbias() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setBias"]], "setbias() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setBias"]], "setbias() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setBias"]], "setbias() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.setBias"]], "setbias() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setBias"]], "setbias() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setBias"]], "setbias() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setBias"]], "setbias() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setBias"]], "setbias() (n2d2.fccell method)": [[1, "N2D2.FcCell.setBias"]], "setbias() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setBias"]], "setbias() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setBias"]], "setbias() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setBias"]], "setbias() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setBias"]], "setbiasfiller() (n2d2.convcell method)": [[1, "N2D2.ConvCell.setBiasFiller"]], "setbiasfiller() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setBiasFiller"]], "setbiasfiller() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setBiasFiller"]], "setbiasfiller() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setBiasFiller"]], "setbiasfiller() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setBiasFiller"]], "setbiasfiller() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.setBiasFiller"]], "setbiasfiller() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setBiasFiller"]], "setbiasfiller() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setBiasFiller"]], "setbiasfiller() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setBiasFiller"]], "setbiasfiller() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setBiasFiller"]], "setbiasfiller() (n2d2.fccell method)": [[1, "N2D2.FcCell.setBiasFiller"]], "setbiasfiller() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setBiasFiller"]], "setbiasfiller() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setBiasFiller"]], "setbiasfiller() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setBiasFiller"]], "setbiasfiller() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setBiasFiller"]], "setbiassolver() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.setBiasSolver"]], "setbiassolver() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setBiasSolver"]], "setbiassolver() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setBiasSolver"]], "setbiassolver() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setBiasSolver"]], "setbiassolver() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setBiasSolver"]], "setbiassolver() (n2d2.convcell method)": [[1, "N2D2.ConvCell.setBiasSolver"]], "setbiassolver() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setBiasSolver"]], "setbiassolver() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setBiasSolver"]], "setbiassolver() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setBiasSolver"]], "setbiassolver() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setBiasSolver"]], "setbiassolver() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.setBiasSolver"]], "setbiassolver() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setBiasSolver"]], "setbiassolver() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setBiasSolver"]], "setbiassolver() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setBiasSolver"]], "setbiassolver() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setBiasSolver"]], "setbiassolver() (n2d2.fccell method)": [[1, "N2D2.FcCell.setBiasSolver"]], "setbiassolver() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setBiasSolver"]], "setbiassolver() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setBiasSolver"]], "setbiassolver() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setBiasSolver"]], "setbiassolver() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setBiasSolver"]], "setdatabase() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.setDatabase"]], "setdefaulttarget() (n2d2.target method)": [[1, "N2D2.Target.setDefaultTarget"]], "setdiffinputs() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.setDiffInputs"]], "setdiffinputs() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.setDiffInputs"]], "setdiffinputs() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.setDiffInputs"]], "setdiffinputs() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.setDiffInputs"]], "setdiffinputs() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.setDiffInputs"]], "setdiffinputs() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.setDiffInputs"]], "setdiffinputs() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.setDiffInputs"]], "setdiffinputsvalid() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.setDiffInputsValid"]], "setdiffinputsvalid() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.setDiffInputsValid"]], "setignoremasks() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.setIgnoreMasks"]], "setignoremasks() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.setIgnoreMasks"]], "setlabeltarget() (n2d2.target method)": [[1, "N2D2.Target.setLabelTarget"]], "setmapping() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.setMapping"]], "setmapping() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.setMapping"]], "setmapping() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.setMapping"]], "setmapping() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setMapping"]], "setmapping() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setMapping"]], "setmapping() (n2d2.cell method)": [[1, "N2D2.Cell.setMapping"]], "setmapping() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.setMapping"]], "setmapping() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.setMapping"]], "setmapping() (n2d2.convcell method)": [[1, "N2D2.ConvCell.setMapping"]], "setmapping() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setMapping"]], "setmapping() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setMapping"]], "setmapping() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.setMapping"]], "setmapping() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setMapping"]], "setmapping() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setMapping"]], "setmapping() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.setMapping"]], "setmapping() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.setMapping"]], "setmapping() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.setMapping"]], "setmapping() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.setMapping"]], "setmapping() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.setMapping"]], "setmapping() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.setMapping"]], "setmapping() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.setMapping"]], "setmapping() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.fccell method)": [[1, "N2D2.FcCell.setMapping"]], "setmapping() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setMapping"]], "setmapping() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setMapping"]], "setmapping() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.setMapping"]], "setmapping() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.setMapping"]], "setmapping() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.setMapping"]], "setmapping() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.setMapping"]], "setmapping() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.setMapping"]], "setmapping() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.setMapping"]], "setmapping() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.setMapping"]], "setmapping() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.setMapping"]], "setmapping() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.setMapping"]], "setmapping() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.setMapping"]], "setmapping() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.setMapping"]], "setmapping() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.setMapping"]], "setmapping() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.setMapping"]], "setmapping() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.setMapping"]], "setmapping() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.setMapping"]], "setmapping() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.setMapping"]], "setmapping() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.setMapping"]], "setmapping() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.setMapping"]], "setmapping() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.setMapping"]], "setmapping() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.setMapping"]], "setmapping() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.rpcell method)": [[1, "N2D2.RPCell.setMapping"]], "setmapping() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.setMapping"]], "setmapping() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.setMapping"]], "setmapping() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.setMapping"]], "setmapping() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.setMapping"]], "setmapping() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.setMapping"]], "setmapping() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.setMapping"]], "setmapping() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.setMapping"]], "setmapping() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.setMapping"]], "setmapping() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.setMapping"]], "setmapping() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.setMapping"]], "setmapping() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.setMapping"]], "setmapping() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.setMapping"]], "setmapping() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.setMapping"]], "setmapping() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.setMapping"]], "setmapping() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.setMapping"]], "setmapping() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.setMapping"]], "setmapping() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.setMapping"]], "setmapping() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.setMapping"]], "setmapping() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.setMapping"]], "setmapping() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.setMapping"]], "setmapping() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.setMapping"]], "setmapping() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.setMapping"]], "setmasklabeltarget() (n2d2.target method)": [[1, "N2D2.Target.setMaskLabelTarget"]], "setmean() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.setMean"]], "setmean() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setMean"]], "setmean() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setMean"]], "setmean() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setMean"]], "setmean() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setMean"]], "setoutputerrors() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.setOutputErrors"]], "setoutputerrors() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.setOutputErrors"]], "setoutputerrors() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.setOutputErrors"]], "setoutputerrors() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.setOutputErrors"]], "setoutputerrors() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.setOutputErrors"]], "setoutputerrors() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.setOutputErrors"]], "setoutputerrors() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.setOutputErrors"]], "setoutputerrors() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.setOutputErrors"]], "setoutputtarget() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.setOutputTarget"]], "setoutputtarget() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.setOutputTarget"]], "setoutputtarget() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.setOutputTarget"]], "setoutputtarget() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.setOutputTarget"]], "setoutputtarget() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.setOutputTarget"]], "setoutputtarget() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.setOutputTarget"]], "setoutputtarget() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.setOutputTarget"]], "setoutputtarget() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.setOutputTarget"]], "setoutputtargets() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.setOutputTargets"]], "setoutputtargets() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.setOutputTargets"]], "setoutputtargets() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.setOutputTargets"]], "setoutputtargets() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.setOutputTargets"]], "setoutputtargets() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.setOutputTargets"]], "setoutputtargets() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.setOutputTargets"]], "setoutputtargets() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.setOutputTargets"]], "setoutputtargets() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.setOutputTargets"]], "setparameter() (n2d2.aer_database method)": [[1, "N2D2.AER_Database.setParameter"]], "setparameter() (n2d2.actitracker_database method)": [[1, "N2D2.Actitracker_Database.setParameter"]], "setparameter() (n2d2.anchorcell method)": [[1, "N2D2.AnchorCell.setParameter"]], "setparameter() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.setParameter"]], "setparameter() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.setParameter"]], "setparameter() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setParameter"]], "setparameter() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setParameter"]], "setparameter() (n2d2.cifar_database method)": [[1, "N2D2.CIFAR_Database.setParameter"]], "setparameter() (n2d2.ckp_database method)": [[1, "N2D2.CKP_Database.setParameter"]], "setparameter() (n2d2.caltech101_dir_database method)": [[1, "N2D2.Caltech101_DIR_Database.setParameter"]], "setparameter() (n2d2.caltech256_dir_database method)": [[1, "N2D2.Caltech256_DIR_Database.setParameter"]], "setparameter() (n2d2.caltechpedestrian_database method)": [[1, "N2D2.CaltechPedestrian_Database.setParameter"]], "setparameter() (n2d2.celeba_database method)": [[1, "N2D2.CelebA_Database.setParameter"]], "setparameter() (n2d2.cell method)": [[1, "N2D2.Cell.setParameter"]], "setparameter() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.setParameter"]], "setparameter() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.setParameter"]], "setparameter() (n2d2.convcell method)": [[1, "N2D2.ConvCell.setParameter"]], "setparameter() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setParameter"]], "setparameter() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setParameter"]], "setparameter() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.setParameter"]], "setparameter() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.setParameter"]], "setparameter() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.setParameter"]], "setparameter() (n2d2.database method)": [[1, "N2D2.Database.setParameter"]], "setparameter() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.setParameter"]], "setparameter() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setParameter"]], "setparameter() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setParameter"]], "setparameter() (n2d2.dropoutcell method)": [[1, "N2D2.DropoutCell.setParameter"]], "setparameter() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.setParameter"]], "setparameter() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.setParameter"]], "setparameter() (n2d2.elemwisecell method)": [[1, "N2D2.ElemWiseCell.setParameter"]], "setparameter() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.setParameter"]], "setparameter() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.setParameter"]], "setparameter() (n2d2.fmpcell method)": [[1, "N2D2.FMPCell.setParameter"]], "setparameter() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.setParameter"]], "setparameter() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.fashion_mnist_idx_database method)": [[1, "N2D2.Fashion_MNIST_IDX_Database.setParameter"]], "setparameter() (n2d2.fccell method)": [[1, "N2D2.FcCell.setParameter"]], "setparameter() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setParameter"]], "setparameter() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setParameter"]], "setparameter() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.setParameter"]], "setparameter() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.setParameter"]], "setparameter() (n2d2.idx_database method)": [[1, "N2D2.IDX_Database.setParameter"]], "setparameter() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.setParameter"]], "setparameter() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.setParameter"]], "setparameter() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.setParameter"]], "setparameter() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.setParameter"]], "setparameter() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.setParameter"]], "setparameter() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.setParameter"]], "setparameter() (n2d2.lrncell method)": [[1, "N2D2.LRNCell.setParameter"]], "setparameter() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.setParameter"]], "setparameter() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.setParameter"]], "setparameter() (n2d2.lstmcell method)": [[1, "N2D2.LSTMCell.setParameter"]], "setparameter() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.mnist_idx_database method)": [[1, "N2D2.MNIST_IDX_Database.setParameter"]], "setparameter() (n2d2.n_mnist_database method)": [[1, "N2D2.N_MNIST_Database.setParameter"]], "setparameter() (n2d2.normalizecell method)": [[1, "N2D2.NormalizeCell.setParameter"]], "setparameter() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.setParameter"]], "setparameter() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.setParameter"]], "setparameter() (n2d2.objectdetcell method)": [[1, "N2D2.ObjectDetCell.setParameter"]], "setparameter() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.setParameter"]], "setparameter() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.paddingcell method)": [[1, "N2D2.PaddingCell.setParameter"]], "setparameter() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.setParameter"]], "setparameter() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.poolcell method)": [[1, "N2D2.PoolCell.setParameter"]], "setparameter() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.setParameter"]], "setparameter() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.setParameter"]], "setparameter() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.setParameter"]], "setparameter() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.setParameter"]], "setparameter() (n2d2.proposalcell method)": [[1, "N2D2.ProposalCell.setParameter"]], "setparameter() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.setParameter"]], "setparameter() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.roipoolingcell method)": [[1, "N2D2.ROIPoolingCell.setParameter"]], "setparameter() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.setParameter"]], "setparameter() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.rpcell method)": [[1, "N2D2.RPCell.setParameter"]], "setparameter() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.setParameter"]], "setparameter() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.resizecell method)": [[1, "N2D2.ResizeCell.setParameter"]], "setparameter() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.setParameter"]], "setparameter() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.scalingcell method)": [[1, "N2D2.ScalingCell.setParameter"]], "setparameter() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.setParameter"]], "setparameter() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.setParameter"]], "setparameter() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.setParameter"]], "setparameter() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.setParameter"]], "setparameter() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.setParameter"]], "setparameter() (n2d2.targetbiascell method)": [[1, "N2D2.TargetBiasCell.setParameter"]], "setparameter() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.setParameter"]], "setparameter() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.setParameter"]], "setparameter() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.setParameter"]], "setparameter() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.setParameter"]], "setparameter() (n2d2.thresholdcell method)": [[1, "N2D2.ThresholdCell.setParameter"]], "setparameter() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.setParameter"]], "setparameter() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.transformationcell method)": [[1, "N2D2.TransformationCell.setParameter"]], "setparameter() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.setParameter"]], "setparameter() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.setParameter"]], "setparameter() (n2d2.unpoolcell method)": [[1, "N2D2.UnpoolCell.setParameter"]], "setparameter() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.setParameter"]], "setparameter() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.setParameter"]], "setquantizer() (n2d2.activation method)": [[1, "N2D2.Activation.setQuantizer"]], "setquantizer() (n2d2.convcell method)": [[1, "N2D2.ConvCell.setQuantizer"]], "setquantizer() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setQuantizer"]], "setquantizer() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setQuantizer"]], "setquantizer() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setQuantizer"]], "setquantizer() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setQuantizer"]], "setquantizer() (n2d2.fccell method)": [[1, "N2D2.FcCell.setQuantizer"]], "setquantizer() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setQuantizer"]], "setquantizer() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setQuantizer"]], "setquantizer() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setQuantizer"]], "setquantizer() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setQuantizer"]], "setscale() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.setScale"]], "setscale() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setScale"]], "setscale() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setScale"]], "setscale() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setScale"]], "setscale() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setScale"]], "setscalesolver() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.setScaleSolver"]], "setscalesolver() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setScaleSolver"]], "setscalesolver() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setScaleSolver"]], "setscalesolver() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setScaleSolver"]], "setscalesolver() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setScaleSolver"]], "setstimuliprovider() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.setStimuliProvider"]], "setstimuliprovider() (n2d2.target method)": [[1, "N2D2.Target.setStimuliProvider"]], "setstreamedlabel() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.setStreamedLabel"]], "setstreamedtensor() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.setStreamedTensor"]], "setvalid() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.setValid"]], "setvalidextensions() (n2d2.dir_database method)": [[1, "N2D2.DIR_Database.setValidExtensions"]], "setvalidextensions() (n2d2.dota_database method)": [[1, "N2D2.DOTA_Database.setValidExtensions"]], "setvalidextensions() (n2d2.daimler_database method)": [[1, "N2D2.Daimler_Database.setValidExtensions"]], "setvalidextensions() (n2d2.fddb_database method)": [[1, "N2D2.FDDB_Database.setValidExtensions"]], "setvalidextensions() (n2d2.gtsdb_dir_database method)": [[1, "N2D2.GTSDB_DIR_Database.setValidExtensions"]], "setvalidextensions() (n2d2.gtsrb_dir_database method)": [[1, "N2D2.GTSRB_DIR_Database.setValidExtensions"]], "setvalidextensions() (n2d2.ilsvrc2012_database method)": [[1, "N2D2.ILSVRC2012_Database.setValidExtensions"]], "setvalidextensions() (n2d2.imdbwiki_database method)": [[1, "N2D2.IMDBWIKI_Database.setValidExtensions"]], "setvalidextensions() (n2d2.kitti_database method)": [[1, "N2D2.KITTI_Database.setValidExtensions"]], "setvalidextensions() (n2d2.kitti_object_database method)": [[1, "N2D2.KITTI_Object_Database.setValidExtensions"]], "setvalidextensions() (n2d2.kitti_road_database method)": [[1, "N2D2.KITTI_Road_Database.setValidExtensions"]], "setvalidextensions() (n2d2.litisrouen_database method)": [[1, "N2D2.LITISRouen_Database.setValidExtensions"]], "setvariance() (n2d2.batchnormcell method)": [[1, "N2D2.BatchNormCell.setVariance"]], "setvariance() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.setVariance"]], "setvariance() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.setVariance"]], "setvariance() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.setVariance"]], "setvariance() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.setVariance"]], "setweight() (n2d2.convcell method)": [[1, "N2D2.ConvCell.setWeight"]], "setweight() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setWeight"]], "setweight() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setWeight"]], "setweight() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setWeight"]], "setweight() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setWeight"]], "setweight() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.setWeight"]], "setweight() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setWeight"]], "setweight() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setWeight"]], "setweight() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setWeight"]], "setweight() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setWeight"]], "setweight() (n2d2.fccell method)": [[1, "N2D2.FcCell.setWeight"]], "setweight() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setWeight"]], "setweight() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setWeight"]], "setweight() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setWeight"]], "setweight() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setWeight"]], "setweightsfiller() (n2d2.convcell method)": [[1, "N2D2.ConvCell.setWeightsFiller"]], "setweightsfiller() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setWeightsFiller"]], "setweightsfiller() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setWeightsFiller"]], "setweightsfiller() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setWeightsFiller"]], "setweightsfiller() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setWeightsFiller"]], "setweightsfiller() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.setWeightsFiller"]], "setweightsfiller() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setWeightsFiller"]], "setweightsfiller() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setWeightsFiller"]], "setweightsfiller() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setWeightsFiller"]], "setweightsfiller() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setWeightsFiller"]], "setweightsfiller() (n2d2.fccell method)": [[1, "N2D2.FcCell.setWeightsFiller"]], "setweightsfiller() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setWeightsFiller"]], "setweightsfiller() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setWeightsFiller"]], "setweightsfiller() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setWeightsFiller"]], "setweightsfiller() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setWeightsFiller"]], "setweightssolver() (n2d2.convcell method)": [[1, "N2D2.ConvCell.setWeightsSolver"]], "setweightssolver() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.setWeightsSolver"]], "setweightssolver() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.setWeightsSolver"]], "setweightssolver() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.setWeightsSolver"]], "setweightssolver() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.setWeightsSolver"]], "setweightssolver() (n2d2.deconvcell method)": [[1, "N2D2.DeconvCell.setWeightsSolver"]], "setweightssolver() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.setWeightsSolver"]], "setweightssolver() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.setWeightsSolver"]], "setweightssolver() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.setWeightsSolver"]], "setweightssolver() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.setWeightsSolver"]], "setweightssolver() (n2d2.fccell method)": [[1, "N2D2.FcCell.setWeightsSolver"]], "setweightssolver() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.setWeightsSolver"]], "setweightssolver() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.setWeightsSolver"]], "setweightssolver() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.setWeightsSolver"]], "setweightssolver() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.setWeightsSolver"]], "setwithloss() (n2d2.softmaxcell method)": [[1, "N2D2.SoftmaxCell.setWithLoss"]], "setwithloss() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.setWithLoss"]], "setwithloss() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.setWithLoss"]], "setwithloss() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.setWithLoss"]], "setwithloss() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.setWithLoss"]], "size() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.size"]], "size() (n2d2.compositetransformation method)": [[1, "N2D2.CompositeTransformation.size"]], "spikecodingcompare() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.spikeCodingCompare"]], "streambatch() (n2d2.stimuliprovider method)": [[1, "N2D2.StimuliProvider.streamBatch"]], "sum() (n2d2.tensor_bool method)": [[1, "N2D2.Tensor_bool.sum"]], "sum() (n2d2.tensor_double method)": [[1, "N2D2.Tensor_double.sum"]], "sum() (n2d2.tensor_float method)": [[1, "N2D2.Tensor_float.sum"]], "synchronizedbasedtoh() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.synchronizeDBasedToH"]], "synchronizedtoh() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.synchronizeDToH"]], "synchronizedtohbased() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.synchronizeDToHBased"]], "synchronizehbasedtod() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.synchronizeHBasedToD"]], "synchronizehtod() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.synchronizeHToD"]], "synchronizehtodbased() (n2d2.basetensor method)": [[1, "N2D2.BaseTensor.synchronizeHToDBased"]], "test() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.test"]], "update() (n2d2.anchorcell_frame method)": [[1, "N2D2.AnchorCell_Frame.update"]], "update() (n2d2.anchorcell_frame_cuda method)": [[1, "N2D2.AnchorCell_Frame_CUDA.update"]], "update() (n2d2.batchnormcell_frame_cuda_double method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_double.update"]], "update() (n2d2.batchnormcell_frame_cuda_float method)": [[1, "N2D2.BatchNormCell_Frame_CUDA_float.update"]], "update() (n2d2.batchnormcell_frame_double method)": [[1, "N2D2.BatchNormCell_Frame_double.update"]], "update() (n2d2.batchnormcell_frame_float method)": [[1, "N2D2.BatchNormCell_Frame_float.update"]], "update() (n2d2.cell_frame_cuda_double method)": [[1, "N2D2.Cell_Frame_CUDA_double.update"]], "update() (n2d2.cell_frame_cuda_float method)": [[1, "N2D2.Cell_Frame_CUDA_float.update"]], "update() (n2d2.cell_frame_top method)": [[1, "N2D2.Cell_Frame_Top.update"]], "update() (n2d2.cell_frame_double method)": [[1, "N2D2.Cell_Frame_double.update"]], "update() (n2d2.cell_frame_float method)": [[1, "N2D2.Cell_Frame_float.update"]], "update() (n2d2.convcell_frame_cuda_double method)": [[1, "N2D2.ConvCell_Frame_CUDA_double.update"]], "update() (n2d2.convcell_frame_cuda_float method)": [[1, "N2D2.ConvCell_Frame_CUDA_float.update"]], "update() (n2d2.convcell_frame_double method)": [[1, "N2D2.ConvCell_Frame_double.update"]], "update() (n2d2.convcell_frame_float method)": [[1, "N2D2.ConvCell_Frame_float.update"]], "update() (n2d2.deconvcell_frame_cuda_double method)": [[1, "N2D2.DeconvCell_Frame_CUDA_double.update"]], "update() (n2d2.deconvcell_frame_cuda_float method)": [[1, "N2D2.DeconvCell_Frame_CUDA_float.update"]], "update() (n2d2.deconvcell_frame_double method)": [[1, "N2D2.DeconvCell_Frame_double.update"]], "update() (n2d2.deconvcell_frame_float method)": [[1, "N2D2.DeconvCell_Frame_float.update"]], "update() (n2d2.deepnet method)": [[1, "N2D2.DeepNet.update"]], "update() (n2d2.dropoutcell_frame_cuda_double method)": [[1, "N2D2.DropoutCell_Frame_CUDA_double.update"]], "update() (n2d2.dropoutcell_frame_cuda_float method)": [[1, "N2D2.DropoutCell_Frame_CUDA_float.update"]], "update() (n2d2.dropoutcell_frame_double method)": [[1, "N2D2.DropoutCell_Frame_double.update"]], "update() (n2d2.dropoutcell_frame_float method)": [[1, "N2D2.DropoutCell_Frame_float.update"]], "update() (n2d2.elemwisecell_frame method)": [[1, "N2D2.ElemWiseCell_Frame.update"]], "update() (n2d2.elemwisecell_frame_cuda method)": [[1, "N2D2.ElemWiseCell_Frame_CUDA.update"]], "update() (n2d2.fmpcell_frame method)": [[1, "N2D2.FMPCell_Frame.update"]], "update() (n2d2.fmpcell_frame_cuda method)": [[1, "N2D2.FMPCell_Frame_CUDA.update"]], "update() (n2d2.fccell_frame_cuda_double method)": [[1, "N2D2.FcCell_Frame_CUDA_double.update"]], "update() (n2d2.fccell_frame_cuda_float method)": [[1, "N2D2.FcCell_Frame_CUDA_float.update"]], "update() (n2d2.fccell_frame_double method)": [[1, "N2D2.FcCell_Frame_double.update"]], "update() (n2d2.fccell_frame_float method)": [[1, "N2D2.FcCell_Frame_float.update"]], "update() (n2d2.lrncell_frame_cuda_double method)": [[1, "N2D2.LRNCell_Frame_CUDA_double.update"]], "update() (n2d2.lrncell_frame_cuda_float method)": [[1, "N2D2.LRNCell_Frame_CUDA_float.update"]], "update() (n2d2.lrncell_frame_double method)": [[1, "N2D2.LRNCell_Frame_double.update"]], "update() (n2d2.lrncell_frame_float method)": [[1, "N2D2.LRNCell_Frame_float.update"]], "update() (n2d2.lstmcell_frame_cuda_double method)": [[1, "N2D2.LSTMCell_Frame_CUDA_double.update"]], "update() (n2d2.lstmcell_frame_cuda_float method)": [[1, "N2D2.LSTMCell_Frame_CUDA_float.update"]], "update() (n2d2.normalizecell_frame_cuda_double method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_double.update"]], "update() (n2d2.normalizecell_frame_cuda_float method)": [[1, "N2D2.NormalizeCell_Frame_CUDA_float.update"]], "update() (n2d2.normalizecell_frame_double method)": [[1, "N2D2.NormalizeCell_Frame_double.update"]], "update() (n2d2.normalizecell_frame_float method)": [[1, "N2D2.NormalizeCell_Frame_float.update"]], "update() (n2d2.objectdetcell_frame method)": [[1, "N2D2.ObjectDetCell_Frame.update"]], "update() (n2d2.objectdetcell_frame_cuda method)": [[1, "N2D2.ObjectDetCell_Frame_CUDA.update"]], "update() (n2d2.paddingcell_frame method)": [[1, "N2D2.PaddingCell_Frame.update"]], "update() (n2d2.paddingcell_frame_cuda method)": [[1, "N2D2.PaddingCell_Frame_CUDA.update"]], "update() (n2d2.poolcell_frame_cuda_double method)": [[1, "N2D2.PoolCell_Frame_CUDA_double.update"]], "update() (n2d2.poolcell_frame_cuda_float method)": [[1, "N2D2.PoolCell_Frame_CUDA_float.update"]], "update() (n2d2.poolcell_frame_ext_cuda_double method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_double.update"]], "update() (n2d2.poolcell_frame_ext_cuda_float method)": [[1, "N2D2.PoolCell_Frame_EXT_CUDA_float.update"]], "update() (n2d2.poolcell_frame_double method)": [[1, "N2D2.PoolCell_Frame_double.update"]], "update() (n2d2.poolcell_frame_float method)": [[1, "N2D2.PoolCell_Frame_float.update"]], "update() (n2d2.proposalcell_frame method)": [[1, "N2D2.ProposalCell_Frame.update"]], "update() (n2d2.proposalcell_frame_cuda method)": [[1, "N2D2.ProposalCell_Frame_CUDA.update"]], "update() (n2d2.roipoolingcell_frame method)": [[1, "N2D2.ROIPoolingCell_Frame.update"]], "update() (n2d2.roipoolingcell_frame_cuda method)": [[1, "N2D2.ROIPoolingCell_Frame_CUDA.update"]], "update() (n2d2.rpcell_frame method)": [[1, "N2D2.RPCell_Frame.update"]], "update() (n2d2.rpcell_frame_cuda method)": [[1, "N2D2.RPCell_Frame_CUDA.update"]], "update() (n2d2.resizecell_frame method)": [[1, "N2D2.ResizeCell_Frame.update"]], "update() (n2d2.resizecell_frame_cuda method)": [[1, "N2D2.ResizeCell_Frame_CUDA.update"]], "update() (n2d2.scalingcell_frame_cuda_double method)": [[1, "N2D2.ScalingCell_Frame_CUDA_double.update"]], "update() (n2d2.scalingcell_frame_cuda_float method)": [[1, "N2D2.ScalingCell_Frame_CUDA_float.update"]], "update() (n2d2.scalingcell_frame_double method)": [[1, "N2D2.ScalingCell_Frame_double.update"]], "update() (n2d2.scalingcell_frame_float method)": [[1, "N2D2.ScalingCell_Frame_float.update"]], "update() (n2d2.softmaxcell_frame_cuda_double method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_double.update"]], "update() (n2d2.softmaxcell_frame_cuda_float method)": [[1, "N2D2.SoftmaxCell_Frame_CUDA_float.update"]], "update() (n2d2.softmaxcell_frame_double method)": [[1, "N2D2.SoftmaxCell_Frame_double.update"]], "update() (n2d2.softmaxcell_frame_float method)": [[1, "N2D2.SoftmaxCell_Frame_float.update"]], "update() (n2d2.targetbiascell_frame_cuda_double method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_double.update"]], "update() (n2d2.targetbiascell_frame_cuda_float method)": [[1, "N2D2.TargetBiasCell_Frame_CUDA_float.update"]], "update() (n2d2.targetbiascell_frame_double method)": [[1, "N2D2.TargetBiasCell_Frame_double.update"]], "update() (n2d2.targetbiascell_frame_float method)": [[1, "N2D2.TargetBiasCell_Frame_float.update"]], "update() (n2d2.thresholdcell_frame method)": [[1, "N2D2.ThresholdCell_Frame.update"]], "update() (n2d2.thresholdcell_frame_cuda method)": [[1, "N2D2.ThresholdCell_Frame_CUDA.update"]], "update() (n2d2.transformationcell_frame method)": [[1, "N2D2.TransformationCell_Frame.update"]], "update() (n2d2.transformationcell_frame_cuda method)": [[1, "N2D2.TransformationCell_Frame_CUDA.update"]], "update() (n2d2.unpoolcell_frame method)": [[1, "N2D2.UnpoolCell_Frame.update"]], "update() (n2d2.unpoolcell_frame_cuda method)": [[1, "N2D2.UnpoolCell_Frame_CUDA.update"]], "n2d2::cell::addinput (c++ function)": [[3, "_CPPv4N4N2D24Cell8addInputEP4CellRK6TensorIbE"], [3, "_CPPv4N4N2D24Cell8addInputEP4Celljjjj"], [3, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjRK6TensorIbE"], [3, "_CPPv4N4N2D24Cell8addInputER15StimuliProviderjjjjjRK6TensorIbE"]], "n2d2::cell::getinputsdims (c++ function)": [[3, "_CPPv4NK4N2D24Cell13getInputsDimsEv"]], "n2d2::cell::getname (c++ function)": [[3, "_CPPv4NK4N2D24Cell7getNameEv"]], "n2d2::cell::getoutputsdims (c++ function)": [[3, "_CPPv4NK4N2D24Cell14getOutputsDimsEv"]], "n2d2::cell::gettype (c++ function)": [[3, "_CPPv4NK4N2D24Cell7getTypeEv"]], "n2d2::cell::initialize (c++ function)": [[3, "_CPPv4N4N2D24Cell10initializeEv"]], "n2d2::cell_frame_top::backpropagate (c++ function)": [[3, "_CPPv4N4N2D214Cell_Frame_Top13backPropagateEv"]], "n2d2::cell_frame_top::getactivation (c++ function)": [[3, "_CPPv4NK4N2D214Cell_Frame_Top13getActivationEv"]], "n2d2::cell_frame_top::propagate (c++ function)": [[3, "_CPPv4N4N2D214Cell_Frame_Top9propagateEb"]], "n2d2::cell_frame_top::setactivation (c++ function)": [[3, "_CPPv4N4N2D214Cell_Frame_Top13setActivationERKNSt10shared_ptrI10ActivationEE"]], "n2d2::cell_frame_top::update (c++ function)": [[3, "_CPPv4N4N2D214Cell_Frame_Top6updateEv"]], "n2d2::convcell::getbias (c++ function)": [[3, "_CPPv4NK4N2D28ConvCell7getBiasEjR10BaseTensor"]], "n2d2::convcell::getweight (c++ function)": [[3, "_CPPv4NK4N2D28ConvCell9getWeightEjjR10BaseTensor"]], "n2d2::convcell::setbias (c++ function)": [[3, "_CPPv4N4N2D28ConvCell7setBiasEjRK10BaseTensor"]], "n2d2::convcell::setbiasfiller (c++ function)": [[3, "_CPPv4N4N2D28ConvCell13setBiasFillerERKNSt10shared_ptrI6FillerEE"]], "n2d2::convcell::setbiassolver (c++ function)": [[3, "_CPPv4N4N2D28ConvCell13setBiasSolverERKNSt10shared_ptrI6SolverEE"]], "n2d2::convcell::setweight (c++ function)": [[3, "_CPPv4N4N2D28ConvCell9setWeightEjjRK10BaseTensor"]], "n2d2::convcell::setweightsfiller (c++ function)": [[3, "_CPPv4N4N2D28ConvCell16setWeightsFillerERKNSt10shared_ptrI6FillerEE"]], "n2d2::convcell::setweightssolver (c++ function)": [[3, "_CPPv4N4N2D28ConvCell16setWeightsSolverERKNSt10shared_ptrI6SolverEE"]], "activation (class in n2d2.cells)": [[25, "n2d2.cells.Activation"]], "activationfunction (class in n2d2.activation)": [[25, "n2d2.activation.ActivationFunction"]], "adam (class in n2d2.solver)": [[25, "n2d2.solver.Adam"]], "batchnorm2d (class in n2d2.cells)": [[25, "n2d2.cells.BatchNorm2d"]], "block (class in n2d2.cells)": [[25, "n2d2.cells.Block"]], "configsection (class in n2d2)": [[25, "n2d2.ConfigSection"]], "constant (class in n2d2.filler)": [[25, "n2d2.filler.Constant"]], "conv (class in n2d2.cells)": [[25, "n2d2.cells.Conv"]], "deconv (class in n2d2.cells)": [[25, "n2d2.cells.Deconv"]], "deepnetcell (class in n2d2.cells)": [[25, "n2d2.cells.DeepNetCell"]], "dropout (class in n2d2.cells)": [[25, "n2d2.cells.Dropout"]], "elemwise (class in n2d2.cells)": [[25, "n2d2.cells.ElemWise"]], "fc (class in n2d2.cells)": [[25, "n2d2.cells.Fc"]], "filler (class in n2d2.filler)": [[25, "n2d2.filler.Filler"]], "he (class in n2d2.filler)": [[25, "n2d2.filler.He"]], "layer (class in n2d2.cells)": [[25, "n2d2.cells.Layer"]], "linear (class in n2d2.activation)": [[25, "n2d2.activation.Linear"]], "mapping (class in n2d2.mapping)": [[25, "n2d2.mapping.Mapping"]], "n2d2() (n2d2.activation.activationfunction method)": [[25, "n2d2.activation.ActivationFunction.N2D2"]], "n2d2() (n2d2.activation.linear method)": [[25, "n2d2.activation.Linear.N2D2"]], "n2d2() (n2d2.activation.rectifier method)": [[25, "n2d2.activation.Rectifier.N2D2"]], "n2d2() (n2d2.activation.tanh method)": [[25, "n2d2.activation.Tanh.N2D2"]], "n2d2() (n2d2.cells.activation method)": [[25, "n2d2.cells.Activation.N2D2"]], "n2d2() (n2d2.cells.batchnorm2d method)": [[25, "n2d2.cells.BatchNorm2d.N2D2"]], "n2d2() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.N2D2"]], "n2d2() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.N2D2"]], "n2d2() (n2d2.cells.dropout method)": [[25, "n2d2.cells.Dropout.N2D2"]], "n2d2() (n2d2.cells.elemwise method)": [[25, "n2d2.cells.ElemWise.N2D2"]], "n2d2() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.N2D2"]], "n2d2() (n2d2.cells.neuralnetworkcell method)": [[25, "n2d2.cells.NeuralNetworkCell.N2D2"]], "n2d2() (n2d2.cells.padding method)": [[25, "n2d2.cells.Padding.N2D2"]], "n2d2() (n2d2.cells.pool method)": [[25, "n2d2.cells.Pool.N2D2"]], "n2d2() (n2d2.cells.reshape method)": [[25, "n2d2.cells.Reshape.N2D2"]], "n2d2() (n2d2.cells.resize method)": [[25, "n2d2.cells.Resize.N2D2"]], "n2d2() (n2d2.cells.scaling method)": [[25, "n2d2.cells.Scaling.N2D2"]], "n2d2() (n2d2.cells.softmax method)": [[25, "n2d2.cells.Softmax.N2D2"]], "n2d2() (n2d2.cells.transformation method)": [[25, "n2d2.cells.Transformation.N2D2"]], "n2d2() (n2d2.cells.transpose method)": [[25, "n2d2.cells.Transpose.N2D2"]], "n2d2() (n2d2.filler.constant method)": [[25, "n2d2.filler.Constant.N2D2"]], "n2d2() (n2d2.filler.filler method)": [[25, "n2d2.filler.Filler.N2D2"]], "n2d2() (n2d2.filler.he method)": [[25, "n2d2.filler.He.N2D2"]], "n2d2() (n2d2.filler.normal method)": [[25, "n2d2.filler.Normal.N2D2"]], "n2d2() (n2d2.filler.xavier method)": [[25, "n2d2.filler.Xavier.N2D2"]], "n2d2() (n2d2.solver.adam method)": [[25, "n2d2.solver.Adam.N2D2"]], "n2d2() (n2d2.solver.sgd method)": [[25, "n2d2.solver.SGD.N2D2"]], "n2d2() (n2d2.solver.solver method)": [[25, "n2d2.solver.Solver.N2D2"]], "n2d2() (n2d2.target.score method)": [[25, "n2d2.target.Score.N2D2"]], "neuralnetworkcell (class in n2d2.cells)": [[25, "n2d2.cells.NeuralNetworkCell"]], "normal (class in n2d2.filler)": [[25, "n2d2.filler.Normal"]], "padding (class in n2d2.cells)": [[25, "n2d2.cells.Padding"]], "pool (class in n2d2.cells)": [[25, "n2d2.cells.Pool"]], "rectifier (class in n2d2.activation)": [[25, "n2d2.activation.Rectifier"]], "reshape (class in n2d2.cells)": [[25, "n2d2.cells.Reshape"]], "resize (class in n2d2.cells)": [[25, "n2d2.cells.Resize"]], "sgd (class in n2d2.solver)": [[25, "n2d2.solver.SGD"]], "scaling (class in n2d2.cells)": [[25, "n2d2.cells.Scaling"]], "score (class in n2d2.target)": [[25, "n2d2.target.Score"]], "sequence (class in n2d2.cells)": [[25, "n2d2.cells.Sequence"]], "softmax (class in n2d2.cells)": [[25, "n2d2.cells.Softmax"]], "solver (class in n2d2.solver)": [[25, "n2d2.solver.Solver"]], "tanh (class in n2d2.activation)": [[25, "n2d2.activation.Tanh"]], "transformation (class in n2d2.cells)": [[25, "n2d2.cells.Transformation"]], "transpose (class in n2d2.cells)": [[25, "n2d2.cells.Transpose"]], "xavier (class in n2d2.filler)": [[25, "n2d2.filler.Xavier"]], "__init__() (n2d2.activation.activationfunction method)": [[25, "n2d2.activation.ActivationFunction.__init__"]], "__init__() (n2d2.activation.linear method)": [[25, "n2d2.activation.Linear.__init__"]], "__init__() (n2d2.activation.rectifier method)": [[25, "n2d2.activation.Rectifier.__init__"]], "__init__() (n2d2.activation.tanh method)": [[25, "n2d2.activation.Tanh.__init__"]], "__init__() (n2d2.cells.activation method)": [[25, "n2d2.cells.Activation.__init__"]], "__init__() (n2d2.cells.batchnorm2d method)": [[25, "n2d2.cells.BatchNorm2d.__init__"]], "__init__() (n2d2.cells.block method)": [[25, "n2d2.cells.Block.__init__"]], "__init__() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.__init__"]], "__init__() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.__init__"]], "__init__() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.__init__"]], "__init__() (n2d2.cells.dropout method)": [[25, "n2d2.cells.Dropout.__init__"]], "__init__() (n2d2.cells.elemwise method)": [[25, "n2d2.cells.ElemWise.__init__"]], "__init__() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.__init__"]], "__init__() (n2d2.cells.layer method)": [[25, "n2d2.cells.Layer.__init__"]], "__init__() (n2d2.cells.neuralnetworkcell method)": [[25, "n2d2.cells.NeuralNetworkCell.__init__"]], "__init__() (n2d2.cells.padding method)": [[25, "n2d2.cells.Padding.__init__"]], "__init__() (n2d2.cells.pool method)": [[25, "n2d2.cells.Pool.__init__"]], "__init__() (n2d2.cells.reshape method)": [[25, "n2d2.cells.Reshape.__init__"]], "__init__() (n2d2.cells.resize method)": [[25, "n2d2.cells.Resize.__init__"]], "__init__() (n2d2.cells.scaling method)": [[25, "n2d2.cells.Scaling.__init__"]], "__init__() (n2d2.cells.sequence method)": [[25, "n2d2.cells.Sequence.__init__"]], "__init__() (n2d2.cells.softmax method)": [[25, "n2d2.cells.Softmax.__init__"]], "__init__() (n2d2.cells.transformation method)": [[25, "n2d2.cells.Transformation.__init__"]], "__init__() (n2d2.cells.transpose method)": [[25, "n2d2.cells.Transpose.__init__"]], "__init__() (n2d2.filler.constant method)": [[25, "n2d2.filler.Constant.__init__"]], "__init__() (n2d2.filler.filler method)": [[25, "n2d2.filler.Filler.__init__"]], "__init__() (n2d2.filler.he method)": [[25, "n2d2.filler.He.__init__"]], "__init__() (n2d2.filler.normal method)": [[25, "n2d2.filler.Normal.__init__"]], "__init__() (n2d2.filler.xavier method)": [[25, "n2d2.filler.Xavier.__init__"]], "__init__() (n2d2.mapping.mapping method)": [[25, "n2d2.mapping.Mapping.__init__"]], "__init__() (n2d2.solver.adam method)": [[25, "n2d2.solver.Adam.__init__"]], "__init__() (n2d2.solver.sgd method)": [[25, "n2d2.solver.SGD.__init__"]], "__init__() (n2d2.solver.solver method)": [[25, "n2d2.solver.Solver.__init__"]], "__init__() (n2d2.target.score method)": [[25, "n2d2.target.Score.__init__"]], "append() (n2d2.cells.layer method)": [[25, "n2d2.cells.Layer.append"]], "append() (n2d2.cells.sequence method)": [[25, "n2d2.cells.Sequence.append"]], "clear_score() (n2d2.target.score method)": [[25, "n2d2.target.Score.clear_score"]], "clear_success() (n2d2.target.score method)": [[25, "n2d2.target.Score.clear_success"]], "export_free_parameters() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.export_free_parameters"]], "fit() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.fit"]], "get_average_score() (n2d2.target.score method)": [[25, "n2d2.target.Score.get_average_score"]], "get_average_top_n_success() (n2d2.target.score method)": [[25, "n2d2.target.Score.get_average_top_n_success"]], "get_bias() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.get_bias"]], "get_bias() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.get_bias"]], "get_bias() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.get_bias"]], "get_biases() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.get_biases"]], "get_biases() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.get_biases"]], "get_biases() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.get_biases"]], "get_cell() (n2d2.cells.block method)": [[25, "n2d2.cells.Block.get_cell"]], "get_cell() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.get_cell"]], "get_cell() (n2d2.cells.layer method)": [[25, "n2d2.cells.Layer.get_cell"]], "get_cell() (n2d2.cells.sequence method)": [[25, "n2d2.cells.Sequence.get_cell"]], "get_cells() (n2d2.cells.block method)": [[25, "n2d2.cells.Block.get_cells"]], "get_cells() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.get_cells"]], "get_cells() (n2d2.cells.layer method)": [[25, "n2d2.cells.Layer.get_cells"]], "get_cells() (n2d2.cells.sequence method)": [[25, "n2d2.cells.Sequence.get_cells"]], "get_deepnet() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.get_deepnet"]], "get_diffinputs() (n2d2.cells.activation method)": [[25, "n2d2.cells.Activation.get_diffinputs"]], "get_diffinputs() (n2d2.cells.batchnorm2d method)": [[25, "n2d2.cells.BatchNorm2d.get_diffinputs"]], "get_diffinputs() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.get_diffinputs"]], "get_diffinputs() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.get_diffinputs"]], "get_diffinputs() (n2d2.cells.dropout method)": [[25, "n2d2.cells.Dropout.get_diffinputs"]], "get_diffinputs() (n2d2.cells.elemwise method)": [[25, "n2d2.cells.ElemWise.get_diffinputs"]], "get_diffinputs() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.get_diffinputs"]], "get_diffinputs() (n2d2.cells.neuralnetworkcell method)": [[25, "n2d2.cells.NeuralNetworkCell.get_diffinputs"]], "get_diffinputs() (n2d2.cells.padding method)": [[25, "n2d2.cells.Padding.get_diffinputs"]], "get_diffinputs() (n2d2.cells.pool method)": [[25, "n2d2.cells.Pool.get_diffinputs"]], "get_diffinputs() (n2d2.cells.reshape method)": [[25, "n2d2.cells.Reshape.get_diffinputs"]], "get_diffinputs() (n2d2.cells.resize method)": [[25, "n2d2.cells.Resize.get_diffinputs"]], "get_diffinputs() (n2d2.cells.scaling method)": [[25, "n2d2.cells.Scaling.get_diffinputs"]], "get_diffinputs() (n2d2.cells.softmax method)": [[25, "n2d2.cells.Softmax.get_diffinputs"]], "get_diffinputs() (n2d2.cells.transformation method)": [[25, "n2d2.cells.Transformation.get_diffinputs"]], "get_diffinputs() (n2d2.cells.transpose method)": [[25, "n2d2.cells.Transpose.get_diffinputs"]], "get_diffoutputs() (n2d2.cells.activation method)": [[25, "n2d2.cells.Activation.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.batchnorm2d method)": [[25, "n2d2.cells.BatchNorm2d.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.dropout method)": [[25, "n2d2.cells.Dropout.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.elemwise method)": [[25, "n2d2.cells.ElemWise.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.neuralnetworkcell method)": [[25, "n2d2.cells.NeuralNetworkCell.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.padding method)": [[25, "n2d2.cells.Padding.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.pool method)": [[25, "n2d2.cells.Pool.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.reshape method)": [[25, "n2d2.cells.Reshape.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.resize method)": [[25, "n2d2.cells.Resize.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.scaling method)": [[25, "n2d2.cells.Scaling.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.softmax method)": [[25, "n2d2.cells.Softmax.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.transformation method)": [[25, "n2d2.cells.Transformation.get_diffoutputs"]], "get_diffoutputs() (n2d2.cells.transpose method)": [[25, "n2d2.cells.Transpose.get_diffoutputs"]], "get_embedded_deepnet() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.get_embedded_deepnet"]], "get_input_cells() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.get_input_cells"]], "get_loss() (n2d2.target.score method)": [[25, "n2d2.target.Score.get_loss"]], "get_output_cells() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.get_output_cells"]], "get_outputs() (n2d2.cells.activation method)": [[25, "n2d2.cells.Activation.get_outputs"]], "get_outputs() (n2d2.cells.batchnorm2d method)": [[25, "n2d2.cells.BatchNorm2d.get_outputs"]], "get_outputs() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.get_outputs"]], "get_outputs() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.get_outputs"]], "get_outputs() (n2d2.cells.dropout method)": [[25, "n2d2.cells.Dropout.get_outputs"]], "get_outputs() (n2d2.cells.elemwise method)": [[25, "n2d2.cells.ElemWise.get_outputs"]], "get_outputs() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.get_outputs"]], "get_outputs() (n2d2.cells.neuralnetworkcell method)": [[25, "n2d2.cells.NeuralNetworkCell.get_outputs"]], "get_outputs() (n2d2.cells.padding method)": [[25, "n2d2.cells.Padding.get_outputs"]], "get_outputs() (n2d2.cells.pool method)": [[25, "n2d2.cells.Pool.get_outputs"]], "get_outputs() (n2d2.cells.reshape method)": [[25, "n2d2.cells.Reshape.get_outputs"]], "get_outputs() (n2d2.cells.resize method)": [[25, "n2d2.cells.Resize.get_outputs"]], "get_outputs() (n2d2.cells.scaling method)": [[25, "n2d2.cells.Scaling.get_outputs"]], "get_outputs() (n2d2.cells.softmax method)": [[25, "n2d2.cells.Softmax.get_outputs"]], "get_outputs() (n2d2.cells.transformation method)": [[25, "n2d2.cells.Transformation.get_outputs"]], "get_outputs() (n2d2.cells.transpose method)": [[25, "n2d2.cells.Transpose.get_outputs"]], "get_parameter() (n2d2.activation.activationfunction method)": [[25, "n2d2.activation.ActivationFunction.get_parameter"]], "get_parameter() (n2d2.activation.linear method)": [[25, "n2d2.activation.Linear.get_parameter"]], "get_parameter() (n2d2.activation.rectifier method)": [[25, "n2d2.activation.Rectifier.get_parameter"]], "get_parameter() (n2d2.activation.tanh method)": [[25, "n2d2.activation.Tanh.get_parameter"]], "get_parameter() (n2d2.cells.activation method)": [[25, "n2d2.cells.Activation.get_parameter"]], "get_parameter() (n2d2.cells.batchnorm2d method)": [[25, "n2d2.cells.BatchNorm2d.get_parameter"]], "get_parameter() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.get_parameter"]], "get_parameter() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.get_parameter"]], "get_parameter() (n2d2.cells.dropout method)": [[25, "n2d2.cells.Dropout.get_parameter"]], "get_parameter() (n2d2.cells.elemwise method)": [[25, "n2d2.cells.ElemWise.get_parameter"]], "get_parameter() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.get_parameter"]], "get_parameter() (n2d2.cells.neuralnetworkcell method)": [[25, "n2d2.cells.NeuralNetworkCell.get_parameter"]], "get_parameter() (n2d2.cells.padding method)": [[25, "n2d2.cells.Padding.get_parameter"]], "get_parameter() (n2d2.cells.pool method)": [[25, "n2d2.cells.Pool.get_parameter"]], "get_parameter() (n2d2.cells.reshape method)": [[25, "n2d2.cells.Reshape.get_parameter"]], "get_parameter() (n2d2.cells.resize method)": [[25, "n2d2.cells.Resize.get_parameter"]], "get_parameter() (n2d2.cells.scaling method)": [[25, "n2d2.cells.Scaling.get_parameter"]], "get_parameter() (n2d2.cells.softmax method)": [[25, "n2d2.cells.Softmax.get_parameter"]], "get_parameter() (n2d2.cells.transformation method)": [[25, "n2d2.cells.Transformation.get_parameter"]], "get_parameter() (n2d2.cells.transpose method)": [[25, "n2d2.cells.Transpose.get_parameter"]], "get_parameter() (n2d2.filler.constant method)": [[25, "n2d2.filler.Constant.get_parameter"]], "get_parameter() (n2d2.filler.filler method)": [[25, "n2d2.filler.Filler.get_parameter"]], "get_parameter() (n2d2.filler.he method)": [[25, "n2d2.filler.He.get_parameter"]], "get_parameter() (n2d2.filler.normal method)": [[25, "n2d2.filler.Normal.get_parameter"]], "get_parameter() (n2d2.filler.xavier method)": [[25, "n2d2.filler.Xavier.get_parameter"]], "get_parameter() (n2d2.solver.adam method)": [[25, "n2d2.solver.Adam.get_parameter"]], "get_parameter() (n2d2.solver.sgd method)": [[25, "n2d2.solver.SGD.get_parameter"]], "get_parameter() (n2d2.solver.solver method)": [[25, "n2d2.solver.Solver.get_parameter"]], "get_parameter() (n2d2.target.score method)": [[25, "n2d2.target.Score.get_parameter"]], "get_weight() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.get_weight"]], "get_weight() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.get_weight"]], "get_weight() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.get_weight"]], "get_weights() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.get_weights"]], "get_weights() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.get_weights"]], "get_weights() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.get_weights"]], "has_bias() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.has_bias"]], "has_quantizer() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.has_quantizer"]], "has_quantizer() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.has_quantizer"]], "has_quantizer() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.has_quantizer"]], "import_free_parameters() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.import_free_parameters"]], "is_exportable_to() (n2d2.cells.activation static method)": [[25, "n2d2.cells.Activation.is_exportable_to"]], "is_exportable_to() (n2d2.cells.batchnorm2d static method)": [[25, "n2d2.cells.BatchNorm2d.is_exportable_to"]], "is_exportable_to() (n2d2.cells.conv static method)": [[25, "n2d2.cells.Conv.is_exportable_to"]], "is_exportable_to() (n2d2.cells.deconv static method)": [[25, "n2d2.cells.Deconv.is_exportable_to"]], "is_exportable_to() (n2d2.cells.dropout static method)": [[25, "n2d2.cells.Dropout.is_exportable_to"]], "is_exportable_to() (n2d2.cells.elemwise static method)": [[25, "n2d2.cells.ElemWise.is_exportable_to"]], "is_exportable_to() (n2d2.cells.fc static method)": [[25, "n2d2.cells.Fc.is_exportable_to"]], "is_exportable_to() (n2d2.cells.neuralnetworkcell static method)": [[25, "n2d2.cells.NeuralNetworkCell.is_exportable_to"]], "is_exportable_to() (n2d2.cells.padding static method)": [[25, "n2d2.cells.Padding.is_exportable_to"]], "is_exportable_to() (n2d2.cells.pool static method)": [[25, "n2d2.cells.Pool.is_exportable_to"]], "is_exportable_to() (n2d2.cells.reshape static method)": [[25, "n2d2.cells.Reshape.is_exportable_to"]], "is_exportable_to() (n2d2.cells.resize static method)": [[25, "n2d2.cells.Resize.is_exportable_to"]], "is_exportable_to() (n2d2.cells.scaling static method)": [[25, "n2d2.cells.Scaling.is_exportable_to"]], "is_exportable_to() (n2d2.cells.softmax static method)": [[25, "n2d2.cells.Softmax.is_exportable_to"]], "is_exportable_to() (n2d2.cells.transformation static method)": [[25, "n2d2.cells.Transformation.is_exportable_to"]], "is_exportable_to() (n2d2.cells.transpose static method)": [[25, "n2d2.cells.Transpose.is_exportable_to"]], "is_integral() (n2d2.cells.block method)": [[25, "n2d2.cells.Block.is_integral"]], "is_integral() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.is_integral"]], "is_integral() (n2d2.cells.layer method)": [[25, "n2d2.cells.Layer.is_integral"]], "is_integral() (n2d2.cells.sequence method)": [[25, "n2d2.cells.Sequence.is_integral"]], "learn() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.learn"]], "load_from_ini() (n2d2.cells.deepnetcell class method)": [[25, "n2d2.cells.DeepNetCell.load_from_INI"]], "load_from_onnx() (n2d2.cells.deepnetcell class method)": [[25, "n2d2.cells.DeepNetCell.load_from_ONNX"]], "log_confusion_matrix() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.log_confusion_matrix"]], "log_confusion_matrix() (n2d2.target.score method)": [[25, "n2d2.target.Score.log_confusion_matrix"]], "log_stats() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.log_stats"]], "log_stats() (n2d2.target.score method)": [[25, "n2d2.target.Score.log_stats"]], "log_success() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.log_success"]], "log_success() (n2d2.target.score method)": [[25, "n2d2.target.Score.log_success"]], "loss() (n2d2.target.score method)": [[25, "n2d2.target.Score.loss"]], "refill_bias() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.refill_bias"]], "refill_bias() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.refill_bias"]], "refill_bias() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.refill_bias"]], "refill_weights() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.refill_weights"]], "refill_weights() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.refill_weights"]], "refill_weights() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.refill_weights"]], "remove() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.remove"]], "run_test() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.run_test"]], "set_activation() (n2d2.cells.activation method)": [[25, "n2d2.cells.Activation.set_activation"]], "set_activation() (n2d2.cells.batchnorm2d method)": [[25, "n2d2.cells.BatchNorm2d.set_activation"]], "set_activation() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.set_activation"]], "set_activation() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.set_activation"]], "set_activation() (n2d2.cells.dropout method)": [[25, "n2d2.cells.Dropout.set_activation"]], "set_activation() (n2d2.cells.elemwise method)": [[25, "n2d2.cells.ElemWise.set_activation"]], "set_activation() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.set_activation"]], "set_activation() (n2d2.cells.neuralnetworkcell method)": [[25, "n2d2.cells.NeuralNetworkCell.set_activation"]], "set_activation() (n2d2.cells.padding method)": [[25, "n2d2.cells.Padding.set_activation"]], "set_activation() (n2d2.cells.pool method)": [[25, "n2d2.cells.Pool.set_activation"]], "set_activation() (n2d2.cells.reshape method)": [[25, "n2d2.cells.Reshape.set_activation"]], "set_activation() (n2d2.cells.resize method)": [[25, "n2d2.cells.Resize.set_activation"]], "set_activation() (n2d2.cells.scaling method)": [[25, "n2d2.cells.Scaling.set_activation"]], "set_activation() (n2d2.cells.softmax method)": [[25, "n2d2.cells.Softmax.set_activation"]], "set_activation() (n2d2.cells.transformation method)": [[25, "n2d2.cells.Transformation.set_activation"]], "set_activation() (n2d2.cells.transpose method)": [[25, "n2d2.cells.Transpose.set_activation"]], "set_back_propagate() (n2d2.cells.block method)": [[25, "n2d2.cells.Block.set_back_propagate"]], "set_back_propagate() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.set_back_propagate"]], "set_back_propagate() (n2d2.cells.layer method)": [[25, "n2d2.cells.Layer.set_back_propagate"]], "set_back_propagate() (n2d2.cells.sequence method)": [[25, "n2d2.cells.Sequence.set_back_propagate"]], "set_bias() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.set_bias"]], "set_bias() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.set_bias"]], "set_bias() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.set_bias"]], "set_bias_filler() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.set_bias_filler"]], "set_bias_filler() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.set_bias_filler"]], "set_filler() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.set_filler"]], "set_filler() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.set_filler"]], "set_filler() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.set_filler"]], "set_provider() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.set_provider"]], "set_solver() (n2d2.cells.batchnorm2d method)": [[25, "n2d2.cells.BatchNorm2d.set_solver"]], "set_solver() (n2d2.cells.block method)": [[25, "n2d2.cells.Block.set_solver"]], "set_solver() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.set_solver"]], "set_solver() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.set_solver"]], "set_solver() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.set_solver"]], "set_solver() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.set_solver"]], "set_solver() (n2d2.cells.layer method)": [[25, "n2d2.cells.Layer.set_solver"]], "set_solver() (n2d2.cells.sequence method)": [[25, "n2d2.cells.Sequence.set_solver"]], "set_solver_parameter() (n2d2.cells.batchnorm2d method)": [[25, "n2d2.cells.BatchNorm2d.set_solver_parameter"]], "set_solver_parameter() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.set_solver_parameter"]], "set_solver_parameter() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.set_solver_parameter"]], "set_weight() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.set_weight"]], "set_weight() (n2d2.cells.deconv method)": [[25, "n2d2.cells.Deconv.set_weight"]], "set_weight() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.set_weight"]], "set_weights_filler() (n2d2.cells.conv method)": [[25, "n2d2.cells.Conv.set_weights_filler"]], "set_weights_filler() (n2d2.cells.fc method)": [[25, "n2d2.cells.Fc.set_weights_filler"]], "summary() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.summary"]], "test() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.test"]], "to_deepnet_cell() (n2d2.cells.block method)": [[25, "n2d2.cells.Block.to_deepnet_cell"]], "to_deepnet_cell() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.to_deepnet_cell"]], "to_deepnet_cell() (n2d2.cells.layer method)": [[25, "n2d2.cells.Layer.to_deepnet_cell"]], "to_deepnet_cell() (n2d2.cells.sequence method)": [[25, "n2d2.cells.Sequence.to_deepnet_cell"]], "update() (n2d2.cells.deepnetcell method)": [[25, "n2d2.cells.DeepNetCell.update"]], "cifar10 (class in n2d2.database)": [[26, "n2d2.database.CIFAR10"]], "cifar100 (class in n2d2.database)": [[26, "n2d2.database.CIFAR100"]], "channelextraction (class in n2d2.transform)": [[26, "n2d2.transform.ChannelExtraction"]], "cityscapes (class in n2d2.database)": [[26, "n2d2.database.Cityscapes"]], "colorspace (class in n2d2.transform)": [[26, "n2d2.transform.ColorSpace"]], "composite (class in n2d2.transform)": [[26, "n2d2.transform.Composite"]], "dir (class in n2d2.database)": [[26, "n2d2.database.DIR"]], "dataprovider (class in n2d2.provider)": [[26, "n2d2.provider.DataProvider"]], "distortion (class in n2d2.transform)": [[26, "n2d2.transform.Distortion"]], "flip (class in n2d2.transform)": [[26, "n2d2.transform.Flip"]], "gtsrb (class in n2d2.database)": [[26, "n2d2.database.GTSRB"]], "ilsvrc2012 (class in n2d2.database)": [[26, "n2d2.database.ILSVRC2012"]], "mnist (class in n2d2.database)": [[26, "n2d2.database.MNIST"]], "n2d2() (n2d2.database.cifar10 method)": [[26, "n2d2.database.CIFAR10.N2D2"]], "n2d2() (n2d2.database.cifar100 method)": [[26, "n2d2.database.CIFAR100.N2D2"]], "n2d2() (n2d2.database.cityscapes method)": [[26, "n2d2.database.Cityscapes.N2D2"]], "n2d2() (n2d2.database.dir method)": [[26, "n2d2.database.DIR.N2D2"]], "n2d2() (n2d2.database.gtsrb method)": [[26, "n2d2.database.GTSRB.N2D2"]], "n2d2() (n2d2.database.ilsvrc2012 method)": [[26, "n2d2.database.ILSVRC2012.N2D2"]], "n2d2() (n2d2.database.mnist method)": [[26, "n2d2.database.MNIST.N2D2"]], "n2d2() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.N2D2"]], "n2d2() (n2d2.transform.channelextraction method)": [[26, "n2d2.transform.ChannelExtraction.N2D2"]], "n2d2() (n2d2.transform.colorspace method)": [[26, "n2d2.transform.ColorSpace.N2D2"]], "n2d2() (n2d2.transform.composite method)": [[26, "n2d2.transform.Composite.N2D2"]], "n2d2() (n2d2.transform.distortion method)": [[26, "n2d2.transform.Distortion.N2D2"]], "n2d2() (n2d2.transform.flip method)": [[26, "n2d2.transform.Flip.N2D2"]], "n2d2() (n2d2.transform.padcrop method)": [[26, "n2d2.transform.PadCrop.N2D2"]], "n2d2() (n2d2.transform.randomresizecrop method)": [[26, "n2d2.transform.RandomResizeCrop.N2D2"]], "n2d2() (n2d2.transform.rangeaffine method)": [[26, "n2d2.transform.RangeAffine.N2D2"]], "n2d2() (n2d2.transform.rescale method)": [[26, "n2d2.transform.Rescale.N2D2"]], "n2d2() (n2d2.transform.reshape method)": [[26, "n2d2.transform.Reshape.N2D2"]], "n2d2() (n2d2.transform.sliceextraction method)": [[26, "n2d2.transform.SliceExtraction.N2D2"]], "n2d2() (n2d2.transform.transformation method)": [[26, "n2d2.transform.Transformation.N2D2"]], "padcrop (class in n2d2.transform)": [[26, "n2d2.transform.PadCrop"]], "randomresizecrop (class in n2d2.transform)": [[26, "n2d2.transform.RandomResizeCrop"]], "rangeaffine (class in n2d2.transform)": [[26, "n2d2.transform.RangeAffine"]], "rescale (class in n2d2.transform)": [[26, "n2d2.transform.Rescale"]], "reshape (class in n2d2.transform)": [[26, "n2d2.transform.Reshape"]], "sliceextraction (class in n2d2.transform)": [[26, "n2d2.transform.SliceExtraction"]], "transformation (class in n2d2.transform)": [[26, "n2d2.transform.Transformation"]], "__init__() (n2d2.database.cifar10 method)": [[26, "n2d2.database.CIFAR10.__init__"]], "__init__() (n2d2.database.cifar100 method)": [[26, "n2d2.database.CIFAR100.__init__"]], "__init__() (n2d2.database.cityscapes method)": [[26, "n2d2.database.Cityscapes.__init__"]], "__init__() (n2d2.database.dir method)": [[26, "n2d2.database.DIR.__init__"]], "__init__() (n2d2.database.gtsrb method)": [[26, "n2d2.database.GTSRB.__init__"]], "__init__() (n2d2.database.ilsvrc2012 method)": [[26, "n2d2.database.ILSVRC2012.__init__"]], "__init__() (n2d2.database.mnist method)": [[26, "n2d2.database.MNIST.__init__"]], "__init__() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.__init__"]], "__init__() (n2d2.transform.channelextraction method)": [[26, "n2d2.transform.ChannelExtraction.__init__"]], "__init__() (n2d2.transform.colorspace method)": [[26, "n2d2.transform.ColorSpace.__init__"]], "__init__() (n2d2.transform.composite method)": [[26, "n2d2.transform.Composite.__init__"]], "__init__() (n2d2.transform.distortion method)": [[26, "n2d2.transform.Distortion.__init__"]], "__init__() (n2d2.transform.flip method)": [[26, "n2d2.transform.Flip.__init__"]], "__init__() (n2d2.transform.padcrop method)": [[26, "n2d2.transform.PadCrop.__init__"]], "__init__() (n2d2.transform.randomresizecrop method)": [[26, "n2d2.transform.RandomResizeCrop.__init__"]], "__init__() (n2d2.transform.rangeaffine method)": [[26, "n2d2.transform.RangeAffine.__init__"]], "__init__() (n2d2.transform.rescale method)": [[26, "n2d2.transform.Rescale.__init__"]], "__init__() (n2d2.transform.reshape method)": [[26, "n2d2.transform.Reshape.__init__"]], "__init__() (n2d2.transform.sliceextraction method)": [[26, "n2d2.transform.SliceExtraction.__init__"]], "__init__() (n2d2.transform.transformation method)": [[26, "n2d2.transform.Transformation.__init__"]], "add_on_the_fly_transformation() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.add_on_the_fly_transformation"]], "add_transformation() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.add_transformation"]], "all_batchs_provided() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.all_batchs_provided"]], "download() (n2d2.database.cifar10 class method)": [[26, "n2d2.database.CIFAR10.download"]], "download() (n2d2.database.cifar100 class method)": [[26, "n2d2.database.CIFAR100.download"]], "download() (n2d2.database.cityscapes class method)": [[26, "n2d2.database.Cityscapes.download"]], "download() (n2d2.database.dir class method)": [[26, "n2d2.database.DIR.download"]], "download() (n2d2.database.gtsrb class method)": [[26, "n2d2.database.GTSRB.download"]], "download() (n2d2.database.ilsvrc2012 class method)": [[26, "n2d2.database.ILSVRC2012.download"]], "download() (n2d2.database.mnist class method)": [[26, "n2d2.database.MNIST.download"]], "get_batch_size() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.get_batch_size"]], "get_data() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.get_data"]], "get_database() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.get_database"]], "get_deepnet() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.get_deepnet"]], "get_label_name() (n2d2.database.cifar10 method)": [[26, "n2d2.database.CIFAR10.get_label_name"]], "get_label_name() (n2d2.database.cifar100 method)": [[26, "n2d2.database.CIFAR100.get_label_name"]], "get_label_name() (n2d2.database.cityscapes method)": [[26, "n2d2.database.Cityscapes.get_label_name"]], "get_label_name() (n2d2.database.dir method)": [[26, "n2d2.database.DIR.get_label_name"]], "get_label_name() (n2d2.database.gtsrb method)": [[26, "n2d2.database.GTSRB.get_label_name"]], "get_label_name() (n2d2.database.ilsvrc2012 method)": [[26, "n2d2.database.ILSVRC2012.get_label_name"]], "get_label_name() (n2d2.database.mnist method)": [[26, "n2d2.database.MNIST.get_label_name"]], "get_labels() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.get_labels"]], "get_name() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.get_name"]], "get_nb_stimuli() (n2d2.database.cifar10 method)": [[26, "n2d2.database.CIFAR10.get_nb_stimuli"]], "get_nb_stimuli() (n2d2.database.cifar100 method)": [[26, "n2d2.database.CIFAR100.get_nb_stimuli"]], "get_nb_stimuli() (n2d2.database.cityscapes method)": [[26, "n2d2.database.Cityscapes.get_nb_stimuli"]], "get_nb_stimuli() (n2d2.database.dir method)": [[26, "n2d2.database.DIR.get_nb_stimuli"]], "get_nb_stimuli() (n2d2.database.gtsrb method)": [[26, "n2d2.database.GTSRB.get_nb_stimuli"]], "get_nb_stimuli() (n2d2.database.ilsvrc2012 method)": [[26, "n2d2.database.ILSVRC2012.get_nb_stimuli"]], "get_nb_stimuli() (n2d2.database.mnist method)": [[26, "n2d2.database.MNIST.get_nb_stimuli"]], "get_parameter() (n2d2.database.cifar10 method)": [[26, "n2d2.database.CIFAR10.get_parameter"]], "get_parameter() (n2d2.database.cifar100 method)": [[26, "n2d2.database.CIFAR100.get_parameter"]], "get_parameter() (n2d2.database.cityscapes method)": [[26, "n2d2.database.Cityscapes.get_parameter"]], "get_parameter() (n2d2.database.dir method)": [[26, "n2d2.database.DIR.get_parameter"]], "get_parameter() (n2d2.database.gtsrb method)": [[26, "n2d2.database.GTSRB.get_parameter"]], "get_parameter() (n2d2.database.ilsvrc2012 method)": [[26, "n2d2.database.ILSVRC2012.get_parameter"]], "get_parameter() (n2d2.database.mnist method)": [[26, "n2d2.database.MNIST.get_parameter"]], "get_parameter() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.get_parameter"]], "get_parameter() (n2d2.transform.channelextraction method)": [[26, "n2d2.transform.ChannelExtraction.get_parameter"]], "get_parameter() (n2d2.transform.colorspace method)": [[26, "n2d2.transform.ColorSpace.get_parameter"]], "get_parameter() (n2d2.transform.composite method)": [[26, "n2d2.transform.Composite.get_parameter"]], "get_parameter() (n2d2.transform.distortion method)": [[26, "n2d2.transform.Distortion.get_parameter"]], "get_parameter() (n2d2.transform.flip method)": [[26, "n2d2.transform.Flip.get_parameter"]], "get_parameter() (n2d2.transform.padcrop method)": [[26, "n2d2.transform.PadCrop.get_parameter"]], "get_parameter() (n2d2.transform.randomresizecrop method)": [[26, "n2d2.transform.RandomResizeCrop.get_parameter"]], "get_parameter() (n2d2.transform.rangeaffine method)": [[26, "n2d2.transform.RangeAffine.get_parameter"]], "get_parameter() (n2d2.transform.rescale method)": [[26, "n2d2.transform.Rescale.get_parameter"]], "get_parameter() (n2d2.transform.reshape method)": [[26, "n2d2.transform.Reshape.get_parameter"]], "get_parameter() (n2d2.transform.sliceextraction method)": [[26, "n2d2.transform.SliceExtraction.get_parameter"]], "get_parameter() (n2d2.transform.transformation method)": [[26, "n2d2.transform.Transformation.get_parameter"]], "get_partition() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.get_partition"]], "get_partition_summary() (n2d2.database.cifar10 method)": [[26, "n2d2.database.CIFAR10.get_partition_summary"]], "get_partition_summary() (n2d2.database.cifar100 method)": [[26, "n2d2.database.CIFAR100.get_partition_summary"]], "get_partition_summary() (n2d2.database.cityscapes method)": [[26, "n2d2.database.Cityscapes.get_partition_summary"]], "get_partition_summary() (n2d2.database.dir method)": [[26, "n2d2.database.DIR.get_partition_summary"]], "get_partition_summary() (n2d2.database.gtsrb method)": [[26, "n2d2.database.GTSRB.get_partition_summary"]], "get_partition_summary() (n2d2.database.ilsvrc2012 method)": [[26, "n2d2.database.ILSVRC2012.get_partition_summary"]], "get_partition_summary() (n2d2.database.mnist method)": [[26, "n2d2.database.MNIST.get_partition_summary"]], "get_transformations() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.get_transformations"]], "get_transformations() (n2d2.transform.composite method)": [[26, "n2d2.transform.Composite.get_transformations"]], "is_downloadable() (n2d2.database.cifar10 class method)": [[26, "n2d2.database.CIFAR10.is_downloadable"]], "is_downloadable() (n2d2.database.cifar100 class method)": [[26, "n2d2.database.CIFAR100.is_downloadable"]], "is_downloadable() (n2d2.database.cityscapes class method)": [[26, "n2d2.database.Cityscapes.is_downloadable"]], "is_downloadable() (n2d2.database.dir class method)": [[26, "n2d2.database.DIR.is_downloadable"]], "is_downloadable() (n2d2.database.gtsrb class method)": [[26, "n2d2.database.GTSRB.is_downloadable"]], "is_downloadable() (n2d2.database.ilsvrc2012 class method)": [[26, "n2d2.database.ILSVRC2012.is_downloadable"]], "is_downloadable() (n2d2.database.mnist class method)": [[26, "n2d2.database.MNIST.is_downloadable"]], "normalize_stimuli() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.normalize_stimuli"]], "partition_stimuli() (n2d2.database.cifar10 method)": [[26, "n2d2.database.CIFAR10.partition_stimuli"]], "partition_stimuli() (n2d2.database.cifar100 method)": [[26, "n2d2.database.CIFAR100.partition_stimuli"]], "partition_stimuli() (n2d2.database.cityscapes method)": [[26, "n2d2.database.Cityscapes.partition_stimuli"]], "partition_stimuli() (n2d2.database.dir method)": [[26, "n2d2.database.DIR.partition_stimuli"]], "partition_stimuli() (n2d2.database.gtsrb method)": [[26, "n2d2.database.GTSRB.partition_stimuli"]], "partition_stimuli() (n2d2.database.ilsvrc2012 method)": [[26, "n2d2.database.ILSVRC2012.partition_stimuli"]], "partition_stimuli() (n2d2.database.mnist method)": [[26, "n2d2.database.MNIST.partition_stimuli"]], "read_batch() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.read_batch"]], "read_random_batch() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.read_random_batch"]], "set_batch() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.set_batch"]], "set_partition() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.set_partition"]], "set_reading_randomly() (n2d2.provider.dataprovider method)": [[26, "n2d2.provider.DataProvider.set_reading_randomly"]], "export_c() (in module n2d2.export)": [[34, "n2d2.export.export_c"]], "export_cpp() (in module n2d2.export)": [[34, "n2d2.export.export_cpp"]], "export_tensor_rt() (in module n2d2.export)": [[34, "n2d2.export.export_tensor_rt"]], "list_exportable_cell() (in module n2d2.export)": [[34, "n2d2.export.list_exportable_cell"]], "block (class in pytorch_to_n2d2)": [[35, "pytorch_to_n2d2.Block"]], "customsequential (class in keras_to_n2d2)": [[35, "keras_to_n2d2.CustomSequential"]], "__init__() (keras_to_n2d2.customsequential method)": [[35, "keras_to_n2d2.CustomSequential.__init__"]], "__init__() (pytorch_to_n2d2.block method)": [[35, "pytorch_to_n2d2.Block.__init__"]], "call() (keras_to_n2d2.customsequential method)": [[35, "keras_to_n2d2.CustomSequential.call"]], "compile() (keras_to_n2d2.customsequential method)": [[35, "keras_to_n2d2.CustomSequential.compile"]], "custom_op() (keras_to_n2d2.customsequential method)": [[35, "keras_to_n2d2.CustomSequential.custom_op"]], "forward() (pytorch_to_n2d2.block method)": [[35, "pytorch_to_n2d2.Block.forward"]], "get_block() (pytorch_to_n2d2.block method)": [[35, "pytorch_to_n2d2.Block.get_block"]], "get_deepnet_cell() (keras_to_n2d2.customsequential method)": [[35, "keras_to_n2d2.CustomSequential.get_deepnet_cell"]], "summary() (keras_to_n2d2.customsequential method)": [[35, "keras_to_n2d2.CustomSequential.summary"]], "summary() (pytorch_to_n2d2.block method)": [[35, "pytorch_to_n2d2.Block.summary"]], "wrap() (in module keras_to_n2d2)": [[35, "keras_to_n2d2.wrap"]], "wrap() (in module pytorch_to_n2d2)": [[35, "pytorch_to_n2d2.wrap"]], "n2d2() (n2d2.tensor method)": [[37, "n2d2.Tensor.N2D2"]], "tensor (class in n2d2)": [[37, "n2d2.Tensor"]], "__init__() (n2d2.tensor method)": [[37, "n2d2.Tensor.__init__"]], "back_propagate() (n2d2.tensor method)": [[37, "n2d2.Tensor.back_propagate"]], "copy() (n2d2.tensor method)": [[37, "n2d2.Tensor.copy"]], "cpu() (n2d2.tensor method)": [[37, "n2d2.Tensor.cpu"]], "cuda() (n2d2.tensor method)": [[37, "n2d2.Tensor.cuda"]], "data_type() (n2d2.tensor method)": [[37, "n2d2.Tensor.data_type"]], "detach() (n2d2.tensor method)": [[37, "n2d2.Tensor.detach"]], "dims() (n2d2.tensor method)": [[37, "n2d2.Tensor.dims"]], "draw_associated_graph() (n2d2.tensor method)": [[37, "n2d2.Tensor.draw_associated_graph"]], "dtoh() (n2d2.tensor method)": [[37, "n2d2.Tensor.dtoh"]], "from_n2d2() (n2d2.tensor class method)": [[37, "n2d2.Tensor.from_N2D2"]], "from_numpy() (n2d2.tensor class method)": [[37, "n2d2.Tensor.from_numpy"]], "get_deepnet() (n2d2.tensor method)": [[37, "n2d2.Tensor.get_deepnet"]], "htod() (n2d2.tensor method)": [[37, "n2d2.Tensor.htod"]], "nb_dims() (n2d2.tensor method)": [[37, "n2d2.Tensor.nb_dims"]], "reshape() (n2d2.tensor method)": [[37, "n2d2.Tensor.reshape"]], "resize() (n2d2.tensor method)": [[37, "n2d2.Tensor.resize"]], "set_values() (n2d2.tensor method)": [[37, "n2d2.Tensor.set_values"]], "shape() (n2d2.tensor method)": [[37, "n2d2.Tensor.shape"]], "to_numpy() (n2d2.tensor method)": [[37, "n2d2.Tensor.to_numpy"]], "update() (n2d2.tensor method)": [[37, "n2d2.Tensor.update"]], "n2d2() (n2d2.quantizer.prunecell method)": [[39, "n2d2.quantizer.PruneCell.N2D2"]], "prunecell (class in n2d2.quantizer)": [[39, "n2d2.quantizer.PruneCell"]], "__init__() (n2d2.quantizer.prunecell method)": [[39, "n2d2.quantizer.PruneCell.__init__"]], "add_biases() (n2d2.quantizer.prunecell method)": [[39, "n2d2.quantizer.PruneCell.add_biases"]], "add_weights() (n2d2.quantizer.prunecell method)": [[39, "n2d2.quantizer.PruneCell.add_weights"]], "get_current_threshold() (n2d2.quantizer.prunecell method)": [[39, "n2d2.quantizer.PruneCell.get_current_threshold"]], "get_parameter() (n2d2.quantizer.prunecell method)": [[39, "n2d2.quantizer.PruneCell.get_parameter"]], "get_pruned_masks() (n2d2.quantizer.prunecell method)": [[39, "n2d2.quantizer.PruneCell.get_pruned_masks"]], "get_quantized_weights() (n2d2.quantizer.prunecell method)": [[39, "n2d2.quantizer.PruneCell.get_quantized_weights"]]}})